// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.2
// source: admire.sql

package coredb

import (
	"context"

	"github.com/mikeydub/go-gallery/service/persist"
)

const createAdmire = `-- name: CreateAdmire :one
insert into admires (id, feed_event_id, actor_id) values ($1, $2, $3) returning id
`

type CreateAdmireParams struct {
	ID          persist.DBID
	FeedEventID persist.DBID
	ActorID     persist.DBID
}

func (q *Queries) CreateAdmire(ctx context.Context, arg CreateAdmireParams) (persist.DBID, error) {
	row := q.db.QueryRow(ctx, createAdmire, arg.ID, arg.FeedEventID, arg.ActorID)
	var id persist.DBID
	err := row.Scan(&id)
	return id, err
}

const deleteAdmireByID = `-- name: DeleteAdmireByID :exec
update admires set deleted = true where id = $1
`

func (q *Queries) DeleteAdmireByID(ctx context.Context, id persist.DBID) error {
	_, err := q.db.Exec(ctx, deleteAdmireByID, id)
	return err
}
