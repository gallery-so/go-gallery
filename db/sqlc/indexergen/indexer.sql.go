// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0
// source: indexer.sql

package indexergen

import (
	"context"
)

const bulkUpsertBlockFilter = `-- name: BulkUpsertBlockFilter :exec
INSERT INTO block_filters (id, from_block, to_block, bloom_filter, created_at, last_updated) values (unnest($1::varchar[]), unnest($2::bigint[]), unnest($3::bigint[]), unnest($4::bytea[]), now(), now())
ON CONFLICT(from_block, to_block) DO UPDATE SET bloom_filter = EXCLUDED.bloom_filter, last_updated = now(), deleted = false
`

type BulkUpsertBlockFilterParams struct {
	ID          []string
	FromBlock   []int64
	ToBlock     []int64
	BloomFilter [][]byte
}

func (q *Queries) BulkUpsertBlockFilter(ctx context.Context, arg BulkUpsertBlockFilterParams) error {
	_, err := q.db.Exec(ctx, bulkUpsertBlockFilter,
		arg.ID,
		arg.FromBlock,
		arg.ToBlock,
		arg.BloomFilter,
	)
	return err
}
