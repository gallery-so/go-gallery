// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package graphql_test

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
	"github.com/mikeydub/go-gallery/service/persist"
)

type Action string

const (
	ActionUsercreated                     Action = "UserCreated"
	ActionUserfollowedusers               Action = "UserFollowedUsers"
	ActionCollectorsnoteaddedtotoken      Action = "CollectorsNoteAddedtoToken"
	ActionCollectioncreated               Action = "CollectionCreated"
	ActionCollectorsnoteaddedtocollection Action = "CollectorsNoteAddedToCollection"
	ActionTokensaddedtocollection         Action = "TokensAddedToCollection"
)

type AuthMechanism struct {
	Eoa               *EoaAuth               `json:"eoa"`
	GnosisSafe        *GnosisSafeAuth        `json:"gnosisSafe"`
	Debug             *DebugAuth             `json:"debug"`
	MagicLink         *MagicLinkAuth         `json:"magicLink"`
	OneTimeLoginToken *OneTimeLoginTokenAuth `json:"oneTimeLoginToken"`
}

// GetEoa returns AuthMechanism.Eoa, and is useful for accessing the field via an interface.
func (v *AuthMechanism) GetEoa() *EoaAuth { return v.Eoa }

// GetGnosisSafe returns AuthMechanism.GnosisSafe, and is useful for accessing the field via an interface.
func (v *AuthMechanism) GetGnosisSafe() *GnosisSafeAuth { return v.GnosisSafe }

// GetDebug returns AuthMechanism.Debug, and is useful for accessing the field via an interface.
func (v *AuthMechanism) GetDebug() *DebugAuth { return v.Debug }

// GetMagicLink returns AuthMechanism.MagicLink, and is useful for accessing the field via an interface.
func (v *AuthMechanism) GetMagicLink() *MagicLinkAuth { return v.MagicLink }

// GetOneTimeLoginToken returns AuthMechanism.OneTimeLoginToken, and is useful for accessing the field via an interface.
func (v *AuthMechanism) GetOneTimeLoginToken() *OneTimeLoginTokenAuth { return v.OneTimeLoginToken }

type Chain string

const (
	ChainEthereum Chain = "Ethereum"
	ChainArbitrum Chain = "Arbitrum"
	ChainPolygon  Chain = "Polygon"
	ChainOptimism Chain = "Optimism"
	ChainTezos    Chain = "Tezos"
	ChainPoap     Chain = "POAP"
	ChainZora     Chain = "Zora"
	ChainBase     Chain = "Base"
)

type ChainAddressInput struct {
	Address string `json:"address"`
	Chain   Chain  `json:"chain"`
}

// GetAddress returns ChainAddressInput.Address, and is useful for accessing the field via an interface.
func (v *ChainAddressInput) GetAddress() string { return v.Address }

// GetChain returns ChainAddressInput.Chain, and is useful for accessing the field via an interface.
func (v *ChainAddressInput) GetChain() Chain { return v.Chain }

type ChainPubKeyInput struct {
	PubKey string `json:"pubKey"`
	Chain  Chain  `json:"chain"`
}

// GetPubKey returns ChainPubKeyInput.PubKey, and is useful for accessing the field via an interface.
func (v *ChainPubKeyInput) GetPubKey() string { return v.PubKey }

// GetChain returns ChainPubKeyInput.Chain, and is useful for accessing the field via an interface.
func (v *ChainPubKeyInput) GetChain() Chain { return v.Chain }

type CollectionLayoutInput struct {
	Sections      []int                          `json:"sections"`
	SectionLayout []CollectionSectionLayoutInput `json:"sectionLayout"`
}

// GetSections returns CollectionLayoutInput.Sections, and is useful for accessing the field via an interface.
func (v *CollectionLayoutInput) GetSections() []int { return v.Sections }

// GetSectionLayout returns CollectionLayoutInput.SectionLayout, and is useful for accessing the field via an interface.
func (v *CollectionLayoutInput) GetSectionLayout() []CollectionSectionLayoutInput {
	return v.SectionLayout
}

type CollectionSectionLayoutInput struct {
	Columns    int   `json:"columns"`
	Whitespace []int `json:"whitespace"`
}

// GetColumns returns CollectionSectionLayoutInput.Columns, and is useful for accessing the field via an interface.
func (v *CollectionSectionLayoutInput) GetColumns() int { return v.Columns }

// GetWhitespace returns CollectionSectionLayoutInput.Whitespace, and is useful for accessing the field via an interface.
func (v *CollectionSectionLayoutInput) GetWhitespace() []int { return v.Whitespace }

type CollectionTokenSettingsInput struct {
	TokenId        persist.DBID `json:"tokenId"`
	RenderLive     bool         `json:"renderLive"`
	HighDefinition bool         `json:"highDefinition"`
}

// GetTokenId returns CollectionTokenSettingsInput.TokenId, and is useful for accessing the field via an interface.
func (v *CollectionTokenSettingsInput) GetTokenId() persist.DBID { return v.TokenId }

// GetRenderLive returns CollectionTokenSettingsInput.RenderLive, and is useful for accessing the field via an interface.
func (v *CollectionTokenSettingsInput) GetRenderLive() bool { return v.RenderLive }

// GetHighDefinition returns CollectionTokenSettingsInput.HighDefinition, and is useful for accessing the field via an interface.
func (v *CollectionTokenSettingsInput) GetHighDefinition() bool { return v.HighDefinition }

type CreateCollectionInGalleryInput struct {
	Name           string                         `json:"name"`
	CollectorsNote string                         `json:"collectorsNote"`
	Tokens         []persist.DBID                 `json:"tokens"`
	Layout         CollectionLayoutInput          `json:"layout"`
	TokenSettings  []CollectionTokenSettingsInput `json:"tokenSettings"`
	Hidden         bool                           `json:"hidden"`
	GivenID        persist.DBID                   `json:"givenID"`
}

// GetName returns CreateCollectionInGalleryInput.Name, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetName() string { return v.Name }

// GetCollectorsNote returns CreateCollectionInGalleryInput.CollectorsNote, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetCollectorsNote() string { return v.CollectorsNote }

// GetTokens returns CreateCollectionInGalleryInput.Tokens, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetTokens() []persist.DBID { return v.Tokens }

// GetLayout returns CreateCollectionInGalleryInput.Layout, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetLayout() CollectionLayoutInput { return v.Layout }

// GetTokenSettings returns CreateCollectionInGalleryInput.TokenSettings, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetTokenSettings() []CollectionTokenSettingsInput {
	return v.TokenSettings
}

// GetHidden returns CreateCollectionInGalleryInput.Hidden, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetHidden() bool { return v.Hidden }

// GetGivenID returns CreateCollectionInGalleryInput.GivenID, and is useful for accessing the field via an interface.
func (v *CreateCollectionInGalleryInput) GetGivenID() persist.DBID { return v.GivenID }

type CreateCollectionInput struct {
	GalleryId      persist.DBID                   `json:"galleryId"`
	Name           string                         `json:"name"`
	CollectorsNote string                         `json:"collectorsNote"`
	Tokens         []persist.DBID                 `json:"tokens"`
	Layout         CollectionLayoutInput          `json:"layout"`
	TokenSettings  []CollectionTokenSettingsInput `json:"tokenSettings"`
	Caption        *string                        `json:"caption"`
}

// GetGalleryId returns CreateCollectionInput.GalleryId, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetGalleryId() persist.DBID { return v.GalleryId }

// GetName returns CreateCollectionInput.Name, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetName() string { return v.Name }

// GetCollectorsNote returns CreateCollectionInput.CollectorsNote, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetCollectorsNote() string { return v.CollectorsNote }

// GetTokens returns CreateCollectionInput.Tokens, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetTokens() []persist.DBID { return v.Tokens }

// GetLayout returns CreateCollectionInput.Layout, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetLayout() CollectionLayoutInput { return v.Layout }

// GetTokenSettings returns CreateCollectionInput.TokenSettings, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetTokenSettings() []CollectionTokenSettingsInput {
	return v.TokenSettings
}

// GetCaption returns CreateCollectionInput.Caption, and is useful for accessing the field via an interface.
func (v *CreateCollectionInput) GetCaption() *string { return v.Caption }

type CreateGalleryInput struct {
	Name        *string `json:"name"`
	Description *string `json:"description"`
	Position    string  `json:"position"`
}

// GetName returns CreateGalleryInput.Name, and is useful for accessing the field via an interface.
func (v *CreateGalleryInput) GetName() *string { return v.Name }

// GetDescription returns CreateGalleryInput.Description, and is useful for accessing the field via an interface.
func (v *CreateGalleryInput) GetDescription() *string { return v.Description }

// GetPosition returns CreateGalleryInput.Position, and is useful for accessing the field via an interface.
func (v *CreateGalleryInput) GetPosition() string { return v.Position }

type CreateUserInput struct {
	Username           string  `json:"username"`
	Bio                *string `json:"bio"`
	Email              *string `json:"email"`
	GalleryName        *string `json:"galleryName"`
	GalleryDescription *string `json:"galleryDescription"`
	GalleryPosition    *string `json:"galleryPosition"`
}

// GetUsername returns CreateUserInput.Username, and is useful for accessing the field via an interface.
func (v *CreateUserInput) GetUsername() string { return v.Username }

// GetBio returns CreateUserInput.Bio, and is useful for accessing the field via an interface.
func (v *CreateUserInput) GetBio() *string { return v.Bio }

// GetEmail returns CreateUserInput.Email, and is useful for accessing the field via an interface.
func (v *CreateUserInput) GetEmail() *string { return v.Email }

// GetGalleryName returns CreateUserInput.GalleryName, and is useful for accessing the field via an interface.
func (v *CreateUserInput) GetGalleryName() *string { return v.GalleryName }

// GetGalleryDescription returns CreateUserInput.GalleryDescription, and is useful for accessing the field via an interface.
func (v *CreateUserInput) GetGalleryDescription() *string { return v.GalleryDescription }

// GetGalleryPosition returns CreateUserInput.GalleryPosition, and is useful for accessing the field via an interface.
func (v *CreateUserInput) GetGalleryPosition() *string { return v.GalleryPosition }

type DebugAuth struct {
	AsUsername         *string             `json:"asUsername"`
	UserId             *persist.DBID       `json:"userId"`
	ChainAddresses     []ChainAddressInput `json:"chainAddresses"`
	DebugToolsPassword *string             `json:"debugToolsPassword"`
}

// GetAsUsername returns DebugAuth.AsUsername, and is useful for accessing the field via an interface.
func (v *DebugAuth) GetAsUsername() *string { return v.AsUsername }

// GetUserId returns DebugAuth.UserId, and is useful for accessing the field via an interface.
func (v *DebugAuth) GetUserId() *persist.DBID { return v.UserId }

// GetChainAddresses returns DebugAuth.ChainAddresses, and is useful for accessing the field via an interface.
func (v *DebugAuth) GetChainAddresses() []ChainAddressInput { return v.ChainAddresses }

// GetDebugToolsPassword returns DebugAuth.DebugToolsPassword, and is useful for accessing the field via an interface.
func (v *DebugAuth) GetDebugToolsPassword() *string { return v.DebugToolsPassword }

type DebugSocialAuth struct {
	Provider           SocialAccountType `json:"provider"`
	Id                 string            `json:"id"`
	Username           string            `json:"username"`
	DebugToolsPassword *string           `json:"debugToolsPassword"`
}

// GetProvider returns DebugSocialAuth.Provider, and is useful for accessing the field via an interface.
func (v *DebugSocialAuth) GetProvider() SocialAccountType { return v.Provider }

// GetId returns DebugSocialAuth.Id, and is useful for accessing the field via an interface.
func (v *DebugSocialAuth) GetId() string { return v.Id }

// GetUsername returns DebugSocialAuth.Username, and is useful for accessing the field via an interface.
func (v *DebugSocialAuth) GetUsername() string { return v.Username }

// GetDebugToolsPassword returns DebugSocialAuth.DebugToolsPassword, and is useful for accessing the field via an interface.
func (v *DebugSocialAuth) GetDebugToolsPassword() *string { return v.DebugToolsPassword }

type EoaAuth struct {
	ChainPubKey ChainPubKeyInput `json:"chainPubKey"`
	Nonce       string           `json:"nonce"`
	Signature   string           `json:"signature"`
}

// GetChainPubKey returns EoaAuth.ChainPubKey, and is useful for accessing the field via an interface.
func (v *EoaAuth) GetChainPubKey() ChainPubKeyInput { return v.ChainPubKey }

// GetNonce returns EoaAuth.Nonce, and is useful for accessing the field via an interface.
func (v *EoaAuth) GetNonce() string { return v.Nonce }

// GetSignature returns EoaAuth.Signature, and is useful for accessing the field via an interface.
func (v *EoaAuth) GetSignature() string { return v.Signature }

type GnosisSafeAuth struct {
	Address string `json:"address"`
	Nonce   string `json:"nonce"`
}

// GetAddress returns GnosisSafeAuth.Address, and is useful for accessing the field via an interface.
func (v *GnosisSafeAuth) GetAddress() string { return v.Address }

// GetNonce returns GnosisSafeAuth.Nonce, and is useful for accessing the field via an interface.
func (v *GnosisSafeAuth) GetNonce() string { return v.Nonce }

type MagicLinkAuth struct {
	Token string `json:"token"`
}

// GetToken returns MagicLinkAuth.Token, and is useful for accessing the field via an interface.
func (v *MagicLinkAuth) GetToken() string { return v.Token }

type MoveCollectionToGalleryInput struct {
	SourceCollectionId persist.DBID `json:"sourceCollectionId"`
	TargetGalleryId    persist.DBID `json:"targetGalleryId"`
}

// GetSourceCollectionId returns MoveCollectionToGalleryInput.SourceCollectionId, and is useful for accessing the field via an interface.
func (v *MoveCollectionToGalleryInput) GetSourceCollectionId() persist.DBID {
	return v.SourceCollectionId
}

// GetTargetGalleryId returns MoveCollectionToGalleryInput.TargetGalleryId, and is useful for accessing the field via an interface.
func (v *MoveCollectionToGalleryInput) GetTargetGalleryId() persist.DBID { return v.TargetGalleryId }

type OneTimeLoginTokenAuth struct {
	Token string `json:"token"`
}

// GetToken returns OneTimeLoginTokenAuth.Token, and is useful for accessing the field via an interface.
func (v *OneTimeLoginTokenAuth) GetToken() string { return v.Token }

type PostTokensInput struct {
	TokenIds []persist.DBID `json:"tokenIds"`
	Caption  *string        `json:"caption"`
}

// GetTokenIds returns PostTokensInput.TokenIds, and is useful for accessing the field via an interface.
func (v *PostTokensInput) GetTokenIds() []persist.DBID { return v.TokenIds }

// GetCaption returns PostTokensInput.Caption, and is useful for accessing the field via an interface.
func (v *PostTokensInput) GetCaption() *string { return v.Caption }

type PublishGalleryInput struct {
	GalleryId persist.DBID `json:"galleryId"`
	EditId    string       `json:"editId"`
	Caption   *string      `json:"caption"`
}

// GetGalleryId returns PublishGalleryInput.GalleryId, and is useful for accessing the field via an interface.
func (v *PublishGalleryInput) GetGalleryId() persist.DBID { return v.GalleryId }

// GetEditId returns PublishGalleryInput.EditId, and is useful for accessing the field via an interface.
func (v *PublishGalleryInput) GetEditId() string { return v.EditId }

// GetCaption returns PublishGalleryInput.Caption, and is useful for accessing the field via an interface.
func (v *PublishGalleryInput) GetCaption() *string { return v.Caption }

type ReportWindow string

const (
	ReportWindowLast5Days ReportWindow = "LAST_5_DAYS"
	ReportWindowLast7Days ReportWindow = "LAST_7_DAYS"
	ReportWindowAllTime   ReportWindow = "ALL_TIME"
)

type SocialAccountType string

const (
	SocialAccountTypeTwitter   SocialAccountType = "Twitter"
	SocialAccountTypeFarcaster SocialAccountType = "Farcaster"
	SocialAccountTypeLens      SocialAccountType = "Lens"
)

type SocialAuthMechanism struct {
	Twitter *TwitterAuth     `json:"twitter"`
	Debug   *DebugSocialAuth `json:"debug"`
}

// GetTwitter returns SocialAuthMechanism.Twitter, and is useful for accessing the field via an interface.
func (v *SocialAuthMechanism) GetTwitter() *TwitterAuth { return v.Twitter }

// GetDebug returns SocialAuthMechanism.Debug, and is useful for accessing the field via an interface.
func (v *SocialAuthMechanism) GetDebug() *DebugSocialAuth { return v.Debug }

type TrendingUsersInput struct {
	Report ReportWindow `json:"report"`
}

// GetReport returns TrendingUsersInput.Report, and is useful for accessing the field via an interface.
func (v *TrendingUsersInput) GetReport() ReportWindow { return v.Report }

type TwitterAuth struct {
	Code string `json:"code"`
}

// GetCode returns TwitterAuth.Code, and is useful for accessing the field via an interface.
func (v *TwitterAuth) GetCode() string { return v.Code }

type UpdateCollectionInput struct {
	Dbid           persist.DBID                   `json:"dbid"`
	Name           string                         `json:"name"`
	CollectorsNote string                         `json:"collectorsNote"`
	Tokens         []persist.DBID                 `json:"tokens"`
	Layout         CollectionLayoutInput          `json:"layout"`
	TokenSettings  []CollectionTokenSettingsInput `json:"tokenSettings"`
	Hidden         bool                           `json:"hidden"`
}

// GetDbid returns UpdateCollectionInput.Dbid, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetDbid() persist.DBID { return v.Dbid }

// GetName returns UpdateCollectionInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetName() string { return v.Name }

// GetCollectorsNote returns UpdateCollectionInput.CollectorsNote, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetCollectorsNote() string { return v.CollectorsNote }

// GetTokens returns UpdateCollectionInput.Tokens, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetTokens() []persist.DBID { return v.Tokens }

// GetLayout returns UpdateCollectionInput.Layout, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetLayout() CollectionLayoutInput { return v.Layout }

// GetTokenSettings returns UpdateCollectionInput.TokenSettings, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetTokenSettings() []CollectionTokenSettingsInput {
	return v.TokenSettings
}

// GetHidden returns UpdateCollectionInput.Hidden, and is useful for accessing the field via an interface.
func (v *UpdateCollectionInput) GetHidden() bool { return v.Hidden }

type UpdateGalleryInput struct {
	GalleryId          persist.DBID                      `json:"galleryId"`
	Name               *string                           `json:"name"`
	Description        *string                           `json:"description"`
	Caption            *string                           `json:"caption"`
	DeletedCollections []persist.DBID                    `json:"deletedCollections"`
	UpdatedCollections []*UpdateCollectionInput          `json:"updatedCollections"`
	CreatedCollections []*CreateCollectionInGalleryInput `json:"createdCollections"`
	Order              []persist.DBID                    `json:"order"`
	EditId             *string                           `json:"editId"`
}

// GetGalleryId returns UpdateGalleryInput.GalleryId, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetGalleryId() persist.DBID { return v.GalleryId }

// GetName returns UpdateGalleryInput.Name, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetName() *string { return v.Name }

// GetDescription returns UpdateGalleryInput.Description, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetDescription() *string { return v.Description }

// GetCaption returns UpdateGalleryInput.Caption, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetCaption() *string { return v.Caption }

// GetDeletedCollections returns UpdateGalleryInput.DeletedCollections, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetDeletedCollections() []persist.DBID { return v.DeletedCollections }

// GetUpdatedCollections returns UpdateGalleryInput.UpdatedCollections, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetUpdatedCollections() []*UpdateCollectionInput {
	return v.UpdatedCollections
}

// GetCreatedCollections returns UpdateGalleryInput.CreatedCollections, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetCreatedCollections() []*CreateCollectionInGalleryInput {
	return v.CreatedCollections
}

// GetOrder returns UpdateGalleryInput.Order, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetOrder() []persist.DBID { return v.Order }

// GetEditId returns UpdateGalleryInput.EditId, and is useful for accessing the field via an interface.
func (v *UpdateGalleryInput) GetEditId() *string { return v.EditId }

type UpdateSocialAccountDisplayedInput struct {
	Type      SocialAccountType `json:"type"`
	Displayed bool              `json:"displayed"`
}

// GetType returns UpdateSocialAccountDisplayedInput.Type, and is useful for accessing the field via an interface.
func (v *UpdateSocialAccountDisplayedInput) GetType() SocialAccountType { return v.Type }

// GetDisplayed returns UpdateSocialAccountDisplayedInput.Displayed, and is useful for accessing the field via an interface.
func (v *UpdateSocialAccountDisplayedInput) GetDisplayed() bool { return v.Displayed }

type UpdateUserExperienceInput struct {
	ExperienceType UserExperienceType `json:"experienceType"`
	Experienced    bool               `json:"experienced"`
}

// GetExperienceType returns UpdateUserExperienceInput.ExperienceType, and is useful for accessing the field via an interface.
func (v *UpdateUserExperienceInput) GetExperienceType() UserExperienceType { return v.ExperienceType }

// GetExperienced returns UpdateUserExperienceInput.Experienced, and is useful for accessing the field via an interface.
func (v *UpdateUserExperienceInput) GetExperienced() bool { return v.Experienced }

type UserExperienceType string

const (
	UserExperienceTypeMultigalleryannouncement          UserExperienceType = "MultiGalleryAnnouncement"
	UserExperienceTypeEmailupsell                       UserExperienceType = "EmailUpsell"
	UserExperienceTypeMerchstoreupsell                  UserExperienceType = "MerchStoreUpsell"
	UserExperienceTypeMaintenancefeb2023                UserExperienceType = "MaintenanceFeb2023"
	UserExperienceTypeMaintenanceaug2023                UserExperienceType = "MaintenanceAug2023"
	UserExperienceTypeTwitterconnectiononboardingupsell UserExperienceType = "TwitterConnectionOnboardingUpsell"
	UserExperienceTypeUpsellmintmemento4                UserExperienceType = "UpsellMintMemento4"
	UserExperienceTypeUpsellgalleryselects1             UserExperienceType = "UpsellGallerySelects1"
	UserExperienceTypeMobileupsell1                     UserExperienceType = "MobileUpsell1"
	UserExperienceTypeMobilebetaupsell                  UserExperienceType = "MobileBetaUpsell"
	UserExperienceTypeUpsellmintmemento5                UserExperienceType = "UpsellMintMemento5"
)

// __addUserWalletMutationInput is used internally by genqlient
type __addUserWalletMutationInput struct {
	ChainAddress  ChainAddressInput `json:"chainAddress"`
	AuthMechanism AuthMechanism     `json:"authMechanism"`
}

// GetChainAddress returns __addUserWalletMutationInput.ChainAddress, and is useful for accessing the field via an interface.
func (v *__addUserWalletMutationInput) GetChainAddress() ChainAddressInput { return v.ChainAddress }

// GetAuthMechanism returns __addUserWalletMutationInput.AuthMechanism, and is useful for accessing the field via an interface.
func (v *__addUserWalletMutationInput) GetAuthMechanism() AuthMechanism { return v.AuthMechanism }

// __admireFeedEventMutationInput is used internally by genqlient
type __admireFeedEventMutationInput struct {
	FeedEventId persist.DBID `json:"feedEventId"`
}

// GetFeedEventId returns __admireFeedEventMutationInput.FeedEventId, and is useful for accessing the field via an interface.
func (v *__admireFeedEventMutationInput) GetFeedEventId() persist.DBID { return v.FeedEventId }

// __admirePostMutationInput is used internally by genqlient
type __admirePostMutationInput struct {
	PostId persist.DBID `json:"postId"`
}

// GetPostId returns __admirePostMutationInput.PostId, and is useful for accessing the field via an interface.
func (v *__admirePostMutationInput) GetPostId() persist.DBID { return v.PostId }

// __admireTokenMutationInput is used internally by genqlient
type __admireTokenMutationInput struct {
	TokenId persist.DBID `json:"tokenId"`
}

// GetTokenId returns __admireTokenMutationInput.TokenId, and is useful for accessing the field via an interface.
func (v *__admireTokenMutationInput) GetTokenId() persist.DBID { return v.TokenId }

// __commentOnFeedEventMutationInput is used internally by genqlient
type __commentOnFeedEventMutationInput struct {
	FeedEventId persist.DBID `json:"feedEventId"`
	Comment     string       `json:"comment"`
}

// GetFeedEventId returns __commentOnFeedEventMutationInput.FeedEventId, and is useful for accessing the field via an interface.
func (v *__commentOnFeedEventMutationInput) GetFeedEventId() persist.DBID { return v.FeedEventId }

// GetComment returns __commentOnFeedEventMutationInput.Comment, and is useful for accessing the field via an interface.
func (v *__commentOnFeedEventMutationInput) GetComment() string { return v.Comment }

// __commentOnPostMutationInput is used internally by genqlient
type __commentOnPostMutationInput struct {
	PostId  persist.DBID `json:"postId"`
	Comment string       `json:"comment"`
}

// GetPostId returns __commentOnPostMutationInput.PostId, and is useful for accessing the field via an interface.
func (v *__commentOnPostMutationInput) GetPostId() persist.DBID { return v.PostId }

// GetComment returns __commentOnPostMutationInput.Comment, and is useful for accessing the field via an interface.
func (v *__commentOnPostMutationInput) GetComment() string { return v.Comment }

// __communityByAddressQueryInput is used internally by genqlient
type __communityByAddressQueryInput struct {
	Address ChainAddressInput `json:"address"`
}

// GetAddress returns __communityByAddressQueryInput.Address, and is useful for accessing the field via an interface.
func (v *__communityByAddressQueryInput) GetAddress() ChainAddressInput { return v.Address }

// __connectSocialAccountInput is used internally by genqlient
type __connectSocialAccountInput struct {
	Auth    SocialAuthMechanism `json:"auth"`
	Display bool                `json:"display"`
}

// GetAuth returns __connectSocialAccountInput.Auth, and is useful for accessing the field via an interface.
func (v *__connectSocialAccountInput) GetAuth() SocialAuthMechanism { return v.Auth }

// GetDisplay returns __connectSocialAccountInput.Display, and is useful for accessing the field via an interface.
func (v *__connectSocialAccountInput) GetDisplay() bool { return v.Display }

// __createCollectionMutationInput is used internally by genqlient
type __createCollectionMutationInput struct {
	Input CreateCollectionInput `json:"input"`
}

// GetInput returns __createCollectionMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__createCollectionMutationInput) GetInput() CreateCollectionInput { return v.Input }

// __createGalleryMutationInput is used internally by genqlient
type __createGalleryMutationInput struct {
	Input CreateGalleryInput `json:"input"`
}

// GetInput returns __createGalleryMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__createGalleryMutationInput) GetInput() CreateGalleryInput { return v.Input }

// __createUserMutationInput is used internally by genqlient
type __createUserMutationInput struct {
	AuthMechanism AuthMechanism   `json:"authMechanism"`
	Input         CreateUserInput `json:"input"`
}

// GetAuthMechanism returns __createUserMutationInput.AuthMechanism, and is useful for accessing the field via an interface.
func (v *__createUserMutationInput) GetAuthMechanism() AuthMechanism { return v.AuthMechanism }

// GetInput returns __createUserMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__createUserMutationInput) GetInput() CreateUserInput { return v.Input }

// __deletePostMutationInput is used internally by genqlient
type __deletePostMutationInput struct {
	PostId persist.DBID `json:"postId"`
}

// GetPostId returns __deletePostMutationInput.PostId, and is useful for accessing the field via an interface.
func (v *__deletePostMutationInput) GetPostId() persist.DBID { return v.PostId }

// __disconnectSocialAccountInput is used internally by genqlient
type __disconnectSocialAccountInput struct {
	AccountType SocialAccountType `json:"accountType"`
}

// GetAccountType returns __disconnectSocialAccountInput.AccountType, and is useful for accessing the field via an interface.
func (v *__disconnectSocialAccountInput) GetAccountType() SocialAccountType { return v.AccountType }

// __getAuthNonceMutationInput is used internally by genqlient
type __getAuthNonceMutationInput struct {
	Input ChainAddressInput `json:"input"`
}

// GetInput returns __getAuthNonceMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__getAuthNonceMutationInput) GetInput() ChainAddressInput { return v.Input }

// __globalFeedQueryInput is used internally by genqlient
type __globalFeedQueryInput struct {
	First        *int `json:"first"`
	IncludePosts bool `json:"includePosts"`
}

// GetFirst returns __globalFeedQueryInput.First, and is useful for accessing the field via an interface.
func (v *__globalFeedQueryInput) GetFirst() *int { return v.First }

// GetIncludePosts returns __globalFeedQueryInput.IncludePosts, and is useful for accessing the field via an interface.
func (v *__globalFeedQueryInput) GetIncludePosts() bool { return v.IncludePosts }

// __loginMutationInput is used internally by genqlient
type __loginMutationInput struct {
	AuthMechanism AuthMechanism `json:"authMechanism"`
}

// GetAuthMechanism returns __loginMutationInput.AuthMechanism, and is useful for accessing the field via an interface.
func (v *__loginMutationInput) GetAuthMechanism() AuthMechanism { return v.AuthMechanism }

// __moveCollectionToGalleryInput is used internally by genqlient
type __moveCollectionToGalleryInput struct {
	Input MoveCollectionToGalleryInput `json:"input"`
}

// GetInput returns __moveCollectionToGalleryInput.Input, and is useful for accessing the field via an interface.
func (v *__moveCollectionToGalleryInput) GetInput() MoveCollectionToGalleryInput { return v.Input }

// __postTokensInput is used internally by genqlient
type __postTokensInput struct {
	Input PostTokensInput `json:"input"`
}

// GetInput returns __postTokensInput.Input, and is useful for accessing the field via an interface.
func (v *__postTokensInput) GetInput() PostTokensInput { return v.Input }

// __publishGalleryMutationInput is used internally by genqlient
type __publishGalleryMutationInput struct {
	Input PublishGalleryInput `json:"input"`
}

// GetInput returns __publishGalleryMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__publishGalleryMutationInput) GetInput() PublishGalleryInput { return v.Input }

// __removeUserWalletsMutationInput is used internally by genqlient
type __removeUserWalletsMutationInput struct {
	WalletIds []persist.DBID `json:"walletIds"`
}

// GetWalletIds returns __removeUserWalletsMutationInput.WalletIds, and is useful for accessing the field via an interface.
func (v *__removeUserWalletsMutationInput) GetWalletIds() []persist.DBID { return v.WalletIds }

// __syncTokensMutationInput is used internally by genqlient
type __syncTokensMutationInput struct {
	Chains        []Chain `json:"chains"`
	Incrementally *bool   `json:"incrementally"`
}

// GetChains returns __syncTokensMutationInput.Chains, and is useful for accessing the field via an interface.
func (v *__syncTokensMutationInput) GetChains() []Chain { return v.Chains }

// GetIncrementally returns __syncTokensMutationInput.Incrementally, and is useful for accessing the field via an interface.
func (v *__syncTokensMutationInput) GetIncrementally() *bool { return v.Incrementally }

// __tokenByIdQueryInput is used internally by genqlient
type __tokenByIdQueryInput struct {
	Id persist.DBID `json:"id"`
}

// GetId returns __tokenByIdQueryInput.Id, and is useful for accessing the field via an interface.
func (v *__tokenByIdQueryInput) GetId() persist.DBID { return v.Id }

// __trendingFeedQueryInput is used internally by genqlient
type __trendingFeedQueryInput struct {
	Last         *int `json:"last"`
	IncludePosts bool `json:"includePosts"`
}

// GetLast returns __trendingFeedQueryInput.Last, and is useful for accessing the field via an interface.
func (v *__trendingFeedQueryInput) GetLast() *int { return v.Last }

// GetIncludePosts returns __trendingFeedQueryInput.IncludePosts, and is useful for accessing the field via an interface.
func (v *__trendingFeedQueryInput) GetIncludePosts() bool { return v.IncludePosts }

// __trendingUsersQueryInput is used internally by genqlient
type __trendingUsersQueryInput struct {
	Input TrendingUsersInput `json:"input"`
}

// GetInput returns __trendingUsersQueryInput.Input, and is useful for accessing the field via an interface.
func (v *__trendingUsersQueryInput) GetInput() TrendingUsersInput { return v.Input }

// __updateGalleryMutationInput is used internally by genqlient
type __updateGalleryMutationInput struct {
	Input UpdateGalleryInput `json:"input"`
}

// GetInput returns __updateGalleryMutationInput.Input, and is useful for accessing the field via an interface.
func (v *__updateGalleryMutationInput) GetInput() UpdateGalleryInput { return v.Input }

// __updateSocialAccountDisplayedInput is used internally by genqlient
type __updateSocialAccountDisplayedInput struct {
	Input UpdateSocialAccountDisplayedInput `json:"input"`
}

// GetInput returns __updateSocialAccountDisplayedInput.Input, and is useful for accessing the field via an interface.
func (v *__updateSocialAccountDisplayedInput) GetInput() UpdateSocialAccountDisplayedInput {
	return v.Input
}

// __updateUserExperienceInput is used internally by genqlient
type __updateUserExperienceInput struct {
	Input UpdateUserExperienceInput `json:"input"`
}

// GetInput returns __updateUserExperienceInput.Input, and is useful for accessing the field via an interface.
func (v *__updateUserExperienceInput) GetInput() UpdateUserExperienceInput { return v.Input }

// __userByAddressQueryInput is used internally by genqlient
type __userByAddressQueryInput struct {
	Input ChainAddressInput `json:"input"`
}

// GetInput returns __userByAddressQueryInput.Input, and is useful for accessing the field via an interface.
func (v *__userByAddressQueryInput) GetInput() ChainAddressInput { return v.Input }

// __userByIdQueryInput is used internally by genqlient
type __userByIdQueryInput struct {
	Id persist.DBID `json:"id"`
}

// GetId returns __userByIdQueryInput.Id, and is useful for accessing the field via an interface.
func (v *__userByIdQueryInput) GetId() persist.DBID { return v.Id }

// __userByUsernameQueryInput is used internally by genqlient
type __userByUsernameQueryInput struct {
	User string `json:"user"`
}

// GetUser returns __userByUsernameQueryInput.User, and is useful for accessing the field via an interface.
func (v *__userByUsernameQueryInput) GetUser() string { return v.User }

// __viewGalleryMutationInput is used internally by genqlient
type __viewGalleryMutationInput struct {
	GalleryId persist.DBID `json:"galleryId"`
}

// GetGalleryId returns __viewGalleryMutationInput.GalleryId, and is useful for accessing the field via an interface.
func (v *__viewGalleryMutationInput) GetGalleryId() persist.DBID { return v.GalleryId }

// __viewTokenMutationInput is used internally by genqlient
type __viewTokenMutationInput struct {
	TokenID      persist.DBID `json:"tokenID"`
	CollectionID persist.DBID `json:"collectionID"`
}

// GetTokenID returns __viewTokenMutationInput.TokenID, and is useful for accessing the field via an interface.
func (v *__viewTokenMutationInput) GetTokenID() persist.DBID { return v.TokenID }

// GetCollectionID returns __viewTokenMutationInput.CollectionID, and is useful for accessing the field via an interface.
func (v *__viewTokenMutationInput) GetCollectionID() persist.DBID { return v.CollectionID }

// addUserWalletMutationAddUserWalletAddUserWalletPayload includes the requested fields of the GraphQL type AddUserWalletPayload.
type addUserWalletMutationAddUserWalletAddUserWalletPayload struct {
	Typename *string                                                       `json:"__typename"`
	Viewer   *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewer `json:"viewer"`
}

// GetTypename returns addUserWalletMutationAddUserWalletAddUserWalletPayload.Typename, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayload) GetTypename() *string {
	return v.Typename
}

// GetViewer returns addUserWalletMutationAddUserWalletAddUserWalletPayload.Viewer, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayload) GetViewer() *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewer {
	return v.Viewer
}

// addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError includes the requested fields of the GraphQL interface AddUserWalletPayloadOrError.
//
// addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError is implemented by the following types:
// addUserWalletMutationAddUserWalletAddUserWalletPayload
// addUserWalletMutationAddUserWalletErrAddressOwnedByUser
// addUserWalletMutationAddUserWalletErrAuthenticationFailed
// addUserWalletMutationAddUserWalletErrInvalidInput
// addUserWalletMutationAddUserWalletErrNotAuthorized
type addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError interface {
	implementsGraphQLInterfaceaddUserWalletMutationAddUserWalletAddUserWalletPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *addUserWalletMutationAddUserWalletAddUserWalletPayload) implementsGraphQLInterfaceaddUserWalletMutationAddUserWalletAddUserWalletPayloadOrError() {
}
func (v *addUserWalletMutationAddUserWalletErrAddressOwnedByUser) implementsGraphQLInterfaceaddUserWalletMutationAddUserWalletAddUserWalletPayloadOrError() {
}
func (v *addUserWalletMutationAddUserWalletErrAuthenticationFailed) implementsGraphQLInterfaceaddUserWalletMutationAddUserWalletAddUserWalletPayloadOrError() {
}
func (v *addUserWalletMutationAddUserWalletErrInvalidInput) implementsGraphQLInterfaceaddUserWalletMutationAddUserWalletAddUserWalletPayloadOrError() {
}
func (v *addUserWalletMutationAddUserWalletErrNotAuthorized) implementsGraphQLInterfaceaddUserWalletMutationAddUserWalletAddUserWalletPayloadOrError() {
}

func __unmarshaladdUserWalletMutationAddUserWalletAddUserWalletPayloadOrError(b []byte, v *addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AddUserWalletPayload":
		*v = new(addUserWalletMutationAddUserWalletAddUserWalletPayload)
		return json.Unmarshal(b, *v)
	case "ErrAddressOwnedByUser":
		*v = new(addUserWalletMutationAddUserWalletErrAddressOwnedByUser)
		return json.Unmarshal(b, *v)
	case "ErrAuthenticationFailed":
		*v = new(addUserWalletMutationAddUserWalletErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(addUserWalletMutationAddUserWalletErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(addUserWalletMutationAddUserWalletErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing AddUserWalletPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaladdUserWalletMutationAddUserWalletAddUserWalletPayloadOrError(v *addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *addUserWalletMutationAddUserWalletAddUserWalletPayload:
		typename = "AddUserWalletPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*addUserWalletMutationAddUserWalletAddUserWalletPayload
		}{typename, v}
		return json.Marshal(result)
	case *addUserWalletMutationAddUserWalletErrAddressOwnedByUser:
		typename = "ErrAddressOwnedByUser"

		result := struct {
			TypeName string `json:"__typename"`
			*addUserWalletMutationAddUserWalletErrAddressOwnedByUser
		}{typename, v}
		return json.Marshal(result)
	case *addUserWalletMutationAddUserWalletErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*addUserWalletMutationAddUserWalletErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *addUserWalletMutationAddUserWalletErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*addUserWalletMutationAddUserWalletErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *addUserWalletMutationAddUserWalletErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*addUserWalletMutationAddUserWalletErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError: "%T"`, v)
	}
}

// addUserWalletMutationAddUserWalletAddUserWalletPayloadViewer includes the requested fields of the GraphQL type Viewer.
type addUserWalletMutationAddUserWalletAddUserWalletPayloadViewer struct {
	User *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUser `json:"user"`
}

// GetUser returns addUserWalletMutationAddUserWalletAddUserWalletPayloadViewer.User, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewer) GetUser() *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUser {
	return v.User
}

// addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUser struct {
	Wallets []*addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet `json:"wallets"`
}

// GetWallets returns addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUser.Wallets, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUser) GetWallets() []*addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet {
	return v.Wallets
}

// addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet includes the requested fields of the GraphQL type Wallet.
type addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet struct {
	Dbid         persist.DBID                                                                                          `json:"dbid"`
	ChainAddress *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress `json:"chainAddress"`
}

// GetDbid returns addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet.Dbid, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet) GetDbid() persist.DBID {
	return v.Dbid
}

// GetChainAddress returns addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet.ChainAddress, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWallet) GetChainAddress() *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress {
	return v.ChainAddress
}

// addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress includes the requested fields of the GraphQL type ChainAddress.
type addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress struct {
	Address *string `json:"address"`
	Chain   *Chain  `json:"chain"`
}

// GetAddress returns addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress.Address, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress) GetAddress() *string {
	return v.Address
}

// GetChain returns addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress.Chain, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletAddUserWalletPayloadViewerUserGalleryUserWalletsWalletChainAddress) GetChain() *Chain {
	return v.Chain
}

// addUserWalletMutationAddUserWalletErrAddressOwnedByUser includes the requested fields of the GraphQL type ErrAddressOwnedByUser.
type addUserWalletMutationAddUserWalletErrAddressOwnedByUser struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns addUserWalletMutationAddUserWalletErrAddressOwnedByUser.Typename, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrAddressOwnedByUser) GetTypename() *string {
	return v.Typename
}

// GetMessage returns addUserWalletMutationAddUserWalletErrAddressOwnedByUser.Message, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrAddressOwnedByUser) GetMessage() string {
	return v.Message
}

// addUserWalletMutationAddUserWalletErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type addUserWalletMutationAddUserWalletErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns addUserWalletMutationAddUserWalletErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrAuthenticationFailed) GetTypename() *string {
	return v.Typename
}

// GetMessage returns addUserWalletMutationAddUserWalletErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrAuthenticationFailed) GetMessage() string {
	return v.Message
}

// addUserWalletMutationAddUserWalletErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type addUserWalletMutationAddUserWalletErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns addUserWalletMutationAddUserWalletErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns addUserWalletMutationAddUserWalletErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrInvalidInput) GetMessage() string { return v.Message }

// addUserWalletMutationAddUserWalletErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type addUserWalletMutationAddUserWalletErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns addUserWalletMutationAddUserWalletErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns addUserWalletMutationAddUserWalletErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationAddUserWalletErrNotAuthorized) GetMessage() string { return v.Message }

// addUserWalletMutationResponse is returned by addUserWalletMutation on success.
type addUserWalletMutationResponse struct {
	AddUserWallet *addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError `json:"-"`
}

// GetAddUserWallet returns addUserWalletMutationResponse.AddUserWallet, and is useful for accessing the field via an interface.
func (v *addUserWalletMutationResponse) GetAddUserWallet() *addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError {
	return v.AddUserWallet
}

func (v *addUserWalletMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*addUserWalletMutationResponse
		AddUserWallet json.RawMessage `json:"addUserWallet"`
		graphql.NoUnmarshalJSON
	}
	firstPass.addUserWalletMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.AddUserWallet
		src := firstPass.AddUserWallet
		if len(src) != 0 && string(src) != "null" {
			*dst = new(addUserWalletMutationAddUserWalletAddUserWalletPayloadOrError)
			err = __unmarshaladdUserWalletMutationAddUserWalletAddUserWalletPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal addUserWalletMutationResponse.AddUserWallet: %w", err)
			}
		}
	}
	return nil
}

type __premarshaladdUserWalletMutationResponse struct {
	AddUserWallet json.RawMessage `json:"addUserWallet"`
}

func (v *addUserWalletMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *addUserWalletMutationResponse) __premarshalJSON() (*__premarshaladdUserWalletMutationResponse, error) {
	var retval __premarshaladdUserWalletMutationResponse

	{

		dst := &retval.AddUserWallet
		src := v.AddUserWallet
		if src != nil {
			var err error
			*dst, err = __marshaladdUserWalletMutationAddUserWalletAddUserWalletPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal addUserWalletMutationResponse.AddUserWallet: %w", err)
			}
		}
	}
	return &retval, nil
}

// admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload includes the requested fields of the GraphQL type AdmireFeedEventPayload.
type admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload struct {
	Typename  *string                                                                `json:"__typename"`
	FeedEvent *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadFeedEvent `json:"feedEvent"`
}

// GetTypename returns admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload.Typename, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload) GetTypename() *string {
	return v.Typename
}

// GetFeedEvent returns admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload.FeedEvent, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload) GetFeedEvent() *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadFeedEvent {
	return v.FeedEvent
}

// admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadFeedEvent includes the requested fields of the GraphQL type FeedEvent.
type admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadFeedEvent struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadFeedEvent.Dbid, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadFeedEvent) GetDbid() persist.DBID {
	return v.Dbid
}

// admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError includes the requested fields of the GraphQL interface AdmireFeedEventPayloadOrError.
//
// admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError is implemented by the following types:
// admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload
// admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists
// admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed
// admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound
// admireFeedEventMutationAdmireFeedEventErrInvalidInput
type admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError interface {
	implementsGraphQLInterfaceadmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload) implementsGraphQLInterfaceadmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError() {
}
func (v *admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists) implementsGraphQLInterfaceadmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError() {
}
func (v *admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed) implementsGraphQLInterfaceadmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError() {
}
func (v *admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound) implementsGraphQLInterfaceadmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError() {
}
func (v *admireFeedEventMutationAdmireFeedEventErrInvalidInput) implementsGraphQLInterfaceadmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError() {
}

func __unmarshaladmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError(b []byte, v *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AdmireFeedEventPayload":
		*v = new(admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload)
		return json.Unmarshal(b, *v)
	case "ErrAdmireAlreadyExists":
		*v = new(admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists)
		return json.Unmarshal(b, *v)
	case "ErrAuthenticationFailed":
		*v = new(admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ErrFeedEventNotFound":
		*v = new(admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(admireFeedEventMutationAdmireFeedEventErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing AdmireFeedEventPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaladmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError(v *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload:
		typename = "AdmireFeedEventPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayload
		}{typename, v}
		return json.Marshal(result)
	case *admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists:
		typename = "ErrAdmireAlreadyExists"

		result := struct {
			TypeName string `json:"__typename"`
			*admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists
		}{typename, v}
		return json.Marshal(result)
	case *admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound:
		typename = "ErrFeedEventNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound
		}{typename, v}
		return json.Marshal(result)
	case *admireFeedEventMutationAdmireFeedEventErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*admireFeedEventMutationAdmireFeedEventErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError: "%T"`, v)
	}
}

// admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists includes the requested fields of the GraphQL type ErrAdmireAlreadyExists.
type admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists.Typename, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists) GetTypename() *string {
	return v.Typename
}

// GetMessage returns admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists.Message, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrAdmireAlreadyExists) GetMessage() string {
	return v.Message
}

// admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed) GetTypename() *string {
	return v.Typename
}

// GetMessage returns admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrAuthenticationFailed) GetMessage() string {
	return v.Message
}

// admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound includes the requested fields of the GraphQL type ErrFeedEventNotFound.
type admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound.Typename, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound.Message, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrFeedEventNotFound) GetMessage() string {
	return v.Message
}

// admireFeedEventMutationAdmireFeedEventErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type admireFeedEventMutationAdmireFeedEventErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireFeedEventMutationAdmireFeedEventErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns admireFeedEventMutationAdmireFeedEventErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationAdmireFeedEventErrInvalidInput) GetMessage() string { return v.Message }

// admireFeedEventMutationResponse is returned by admireFeedEventMutation on success.
type admireFeedEventMutationResponse struct {
	AdmireFeedEvent *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError `json:"-"`
}

// GetAdmireFeedEvent returns admireFeedEventMutationResponse.AdmireFeedEvent, and is useful for accessing the field via an interface.
func (v *admireFeedEventMutationResponse) GetAdmireFeedEvent() *admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError {
	return v.AdmireFeedEvent
}

func (v *admireFeedEventMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*admireFeedEventMutationResponse
		AdmireFeedEvent json.RawMessage `json:"admireFeedEvent"`
		graphql.NoUnmarshalJSON
	}
	firstPass.admireFeedEventMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.AdmireFeedEvent
		src := firstPass.AdmireFeedEvent
		if len(src) != 0 && string(src) != "null" {
			*dst = new(admireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError)
			err = __unmarshaladmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal admireFeedEventMutationResponse.AdmireFeedEvent: %w", err)
			}
		}
	}
	return nil
}

type __premarshaladmireFeedEventMutationResponse struct {
	AdmireFeedEvent json.RawMessage `json:"admireFeedEvent"`
}

func (v *admireFeedEventMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *admireFeedEventMutationResponse) __premarshalJSON() (*__premarshaladmireFeedEventMutationResponse, error) {
	var retval __premarshaladmireFeedEventMutationResponse

	{

		dst := &retval.AdmireFeedEvent
		src := v.AdmireFeedEvent
		if src != nil {
			var err error
			*dst, err = __marshaladmireFeedEventMutationAdmireFeedEventAdmireFeedEventPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal admireFeedEventMutationResponse.AdmireFeedEvent: %w", err)
			}
		}
	}
	return &retval, nil
}

// admirePostMutationAdmirePostAdmirePostPayload includes the requested fields of the GraphQL type AdmirePostPayload.
type admirePostMutationAdmirePostAdmirePostPayload struct {
	Typename *string                                            `json:"__typename"`
	Post     *admirePostMutationAdmirePostAdmirePostPayloadPost `json:"post"`
}

// GetTypename returns admirePostMutationAdmirePostAdmirePostPayload.Typename, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostAdmirePostPayload) GetTypename() *string { return v.Typename }

// GetPost returns admirePostMutationAdmirePostAdmirePostPayload.Post, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostAdmirePostPayload) GetPost() *admirePostMutationAdmirePostAdmirePostPayloadPost {
	return v.Post
}

// admirePostMutationAdmirePostAdmirePostPayloadOrError includes the requested fields of the GraphQL interface AdmirePostPayloadOrError.
//
// admirePostMutationAdmirePostAdmirePostPayloadOrError is implemented by the following types:
// admirePostMutationAdmirePostAdmirePostPayload
// admirePostMutationAdmirePostErrInvalidInput
// admirePostMutationAdmirePostErrNotAuthorized
type admirePostMutationAdmirePostAdmirePostPayloadOrError interface {
	implementsGraphQLInterfaceadmirePostMutationAdmirePostAdmirePostPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *admirePostMutationAdmirePostAdmirePostPayload) implementsGraphQLInterfaceadmirePostMutationAdmirePostAdmirePostPayloadOrError() {
}
func (v *admirePostMutationAdmirePostErrInvalidInput) implementsGraphQLInterfaceadmirePostMutationAdmirePostAdmirePostPayloadOrError() {
}
func (v *admirePostMutationAdmirePostErrNotAuthorized) implementsGraphQLInterfaceadmirePostMutationAdmirePostAdmirePostPayloadOrError() {
}

func __unmarshaladmirePostMutationAdmirePostAdmirePostPayloadOrError(b []byte, v *admirePostMutationAdmirePostAdmirePostPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AdmirePostPayload":
		*v = new(admirePostMutationAdmirePostAdmirePostPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(admirePostMutationAdmirePostErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(admirePostMutationAdmirePostErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing AdmirePostPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for admirePostMutationAdmirePostAdmirePostPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaladmirePostMutationAdmirePostAdmirePostPayloadOrError(v *admirePostMutationAdmirePostAdmirePostPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *admirePostMutationAdmirePostAdmirePostPayload:
		typename = "AdmirePostPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*admirePostMutationAdmirePostAdmirePostPayload
		}{typename, v}
		return json.Marshal(result)
	case *admirePostMutationAdmirePostErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*admirePostMutationAdmirePostErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *admirePostMutationAdmirePostErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*admirePostMutationAdmirePostErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for admirePostMutationAdmirePostAdmirePostPayloadOrError: "%T"`, v)
	}
}

// admirePostMutationAdmirePostAdmirePostPayloadPost includes the requested fields of the GraphQL type Post.
type admirePostMutationAdmirePostAdmirePostPayloadPost struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns admirePostMutationAdmirePostAdmirePostPayloadPost.Dbid, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostAdmirePostPayloadPost) GetDbid() persist.DBID { return v.Dbid }

// admirePostMutationAdmirePostErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type admirePostMutationAdmirePostErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admirePostMutationAdmirePostErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns admirePostMutationAdmirePostErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostErrInvalidInput) GetMessage() string { return v.Message }

// admirePostMutationAdmirePostErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type admirePostMutationAdmirePostErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admirePostMutationAdmirePostErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns admirePostMutationAdmirePostErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *admirePostMutationAdmirePostErrNotAuthorized) GetMessage() string { return v.Message }

// admirePostMutationResponse is returned by admirePostMutation on success.
type admirePostMutationResponse struct {
	AdmirePost *admirePostMutationAdmirePostAdmirePostPayloadOrError `json:"-"`
}

// GetAdmirePost returns admirePostMutationResponse.AdmirePost, and is useful for accessing the field via an interface.
func (v *admirePostMutationResponse) GetAdmirePost() *admirePostMutationAdmirePostAdmirePostPayloadOrError {
	return v.AdmirePost
}

func (v *admirePostMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*admirePostMutationResponse
		AdmirePost json.RawMessage `json:"admirePost"`
		graphql.NoUnmarshalJSON
	}
	firstPass.admirePostMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.AdmirePost
		src := firstPass.AdmirePost
		if len(src) != 0 && string(src) != "null" {
			*dst = new(admirePostMutationAdmirePostAdmirePostPayloadOrError)
			err = __unmarshaladmirePostMutationAdmirePostAdmirePostPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal admirePostMutationResponse.AdmirePost: %w", err)
			}
		}
	}
	return nil
}

type __premarshaladmirePostMutationResponse struct {
	AdmirePost json.RawMessage `json:"admirePost"`
}

func (v *admirePostMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *admirePostMutationResponse) __premarshalJSON() (*__premarshaladmirePostMutationResponse, error) {
	var retval __premarshaladmirePostMutationResponse

	{

		dst := &retval.AdmirePost
		src := v.AdmirePost
		if src != nil {
			var err error
			*dst, err = __marshaladmirePostMutationAdmirePostAdmirePostPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal admirePostMutationResponse.AdmirePost: %w", err)
			}
		}
	}
	return &retval, nil
}

// admireTokenMutationAdmireTokenAdmireTokenPayload includes the requested fields of the GraphQL type AdmireTokenPayload.
type admireTokenMutationAdmireTokenAdmireTokenPayload struct {
	Typename *string                                                `json:"__typename"`
	Token    *admireTokenMutationAdmireTokenAdmireTokenPayloadToken `json:"token"`
}

// GetTypename returns admireTokenMutationAdmireTokenAdmireTokenPayload.Typename, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenAdmireTokenPayload) GetTypename() *string { return v.Typename }

// GetToken returns admireTokenMutationAdmireTokenAdmireTokenPayload.Token, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenAdmireTokenPayload) GetToken() *admireTokenMutationAdmireTokenAdmireTokenPayloadToken {
	return v.Token
}

// admireTokenMutationAdmireTokenAdmireTokenPayloadOrError includes the requested fields of the GraphQL interface AdmireTokenPayloadOrError.
//
// admireTokenMutationAdmireTokenAdmireTokenPayloadOrError is implemented by the following types:
// admireTokenMutationAdmireTokenAdmireTokenPayload
// admireTokenMutationAdmireTokenErrInvalidInput
// admireTokenMutationAdmireTokenErrNotAuthorized
// admireTokenMutationAdmireTokenErrTokenNotFound
type admireTokenMutationAdmireTokenAdmireTokenPayloadOrError interface {
	implementsGraphQLInterfaceadmireTokenMutationAdmireTokenAdmireTokenPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *admireTokenMutationAdmireTokenAdmireTokenPayload) implementsGraphQLInterfaceadmireTokenMutationAdmireTokenAdmireTokenPayloadOrError() {
}
func (v *admireTokenMutationAdmireTokenErrInvalidInput) implementsGraphQLInterfaceadmireTokenMutationAdmireTokenAdmireTokenPayloadOrError() {
}
func (v *admireTokenMutationAdmireTokenErrNotAuthorized) implementsGraphQLInterfaceadmireTokenMutationAdmireTokenAdmireTokenPayloadOrError() {
}
func (v *admireTokenMutationAdmireTokenErrTokenNotFound) implementsGraphQLInterfaceadmireTokenMutationAdmireTokenAdmireTokenPayloadOrError() {
}

func __unmarshaladmireTokenMutationAdmireTokenAdmireTokenPayloadOrError(b []byte, v *admireTokenMutationAdmireTokenAdmireTokenPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AdmireTokenPayload":
		*v = new(admireTokenMutationAdmireTokenAdmireTokenPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(admireTokenMutationAdmireTokenErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(admireTokenMutationAdmireTokenErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "ErrTokenNotFound":
		*v = new(admireTokenMutationAdmireTokenErrTokenNotFound)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing AdmireTokenPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for admireTokenMutationAdmireTokenAdmireTokenPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaladmireTokenMutationAdmireTokenAdmireTokenPayloadOrError(v *admireTokenMutationAdmireTokenAdmireTokenPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *admireTokenMutationAdmireTokenAdmireTokenPayload:
		typename = "AdmireTokenPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*admireTokenMutationAdmireTokenAdmireTokenPayload
		}{typename, v}
		return json.Marshal(result)
	case *admireTokenMutationAdmireTokenErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*admireTokenMutationAdmireTokenErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *admireTokenMutationAdmireTokenErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*admireTokenMutationAdmireTokenErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *admireTokenMutationAdmireTokenErrTokenNotFound:
		typename = "ErrTokenNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*admireTokenMutationAdmireTokenErrTokenNotFound
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for admireTokenMutationAdmireTokenAdmireTokenPayloadOrError: "%T"`, v)
	}
}

// admireTokenMutationAdmireTokenAdmireTokenPayloadToken includes the requested fields of the GraphQL type Token.
type admireTokenMutationAdmireTokenAdmireTokenPayloadToken struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns admireTokenMutationAdmireTokenAdmireTokenPayloadToken.Dbid, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenAdmireTokenPayloadToken) GetDbid() persist.DBID { return v.Dbid }

// admireTokenMutationAdmireTokenErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type admireTokenMutationAdmireTokenErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireTokenMutationAdmireTokenErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns admireTokenMutationAdmireTokenErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenErrInvalidInput) GetMessage() string { return v.Message }

// admireTokenMutationAdmireTokenErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type admireTokenMutationAdmireTokenErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireTokenMutationAdmireTokenErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns admireTokenMutationAdmireTokenErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenErrNotAuthorized) GetMessage() string { return v.Message }

// admireTokenMutationAdmireTokenErrTokenNotFound includes the requested fields of the GraphQL type ErrTokenNotFound.
type admireTokenMutationAdmireTokenErrTokenNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns admireTokenMutationAdmireTokenErrTokenNotFound.Typename, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenErrTokenNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns admireTokenMutationAdmireTokenErrTokenNotFound.Message, and is useful for accessing the field via an interface.
func (v *admireTokenMutationAdmireTokenErrTokenNotFound) GetMessage() string { return v.Message }

// admireTokenMutationResponse is returned by admireTokenMutation on success.
type admireTokenMutationResponse struct {
	AdmireToken *admireTokenMutationAdmireTokenAdmireTokenPayloadOrError `json:"-"`
}

// GetAdmireToken returns admireTokenMutationResponse.AdmireToken, and is useful for accessing the field via an interface.
func (v *admireTokenMutationResponse) GetAdmireToken() *admireTokenMutationAdmireTokenAdmireTokenPayloadOrError {
	return v.AdmireToken
}

func (v *admireTokenMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*admireTokenMutationResponse
		AdmireToken json.RawMessage `json:"admireToken"`
		graphql.NoUnmarshalJSON
	}
	firstPass.admireTokenMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.AdmireToken
		src := firstPass.AdmireToken
		if len(src) != 0 && string(src) != "null" {
			*dst = new(admireTokenMutationAdmireTokenAdmireTokenPayloadOrError)
			err = __unmarshaladmireTokenMutationAdmireTokenAdmireTokenPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal admireTokenMutationResponse.AdmireToken: %w", err)
			}
		}
	}
	return nil
}

type __premarshaladmireTokenMutationResponse struct {
	AdmireToken json.RawMessage `json:"admireToken"`
}

func (v *admireTokenMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *admireTokenMutationResponse) __premarshalJSON() (*__premarshaladmireTokenMutationResponse, error) {
	var retval __premarshaladmireTokenMutationResponse

	{

		dst := &retval.AdmireToken
		src := v.AdmireToken
		if src != nil {
			var err error
			*dst, err = __marshaladmireTokenMutationAdmireTokenAdmireTokenPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal admireTokenMutationResponse.AdmireToken: %w", err)
			}
		}
	}
	return &retval, nil
}

// commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload includes the requested fields of the GraphQL type CommentOnFeedEventPayload.
type commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload struct {
	Typename  *string                                                                         `json:"__typename"`
	FeedEvent *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadFeedEvent `json:"feedEvent"`
}

// GetTypename returns commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload.Typename, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload) GetTypename() *string {
	return v.Typename
}

// GetFeedEvent returns commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload.FeedEvent, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload) GetFeedEvent() *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadFeedEvent {
	return v.FeedEvent
}

// commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadFeedEvent includes the requested fields of the GraphQL type FeedEvent.
type commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadFeedEvent struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadFeedEvent.Dbid, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadFeedEvent) GetDbid() persist.DBID {
	return v.Dbid
}

// commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError includes the requested fields of the GraphQL interface CommentOnFeedEventPayloadOrError.
//
// commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError is implemented by the following types:
// commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload
// commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed
// commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound
// commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput
type commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError interface {
	implementsGraphQLInterfacecommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload) implementsGraphQLInterfacecommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError() {
}
func (v *commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed) implementsGraphQLInterfacecommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError() {
}
func (v *commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound) implementsGraphQLInterfacecommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError() {
}
func (v *commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput) implementsGraphQLInterfacecommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError() {
}

func __unmarshalcommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError(b []byte, v *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CommentOnFeedEventPayload":
		*v = new(commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload)
		return json.Unmarshal(b, *v)
	case "ErrAuthenticationFailed":
		*v = new(commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ErrFeedEventNotFound":
		*v = new(commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing CommentOnFeedEventPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError(v *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload:
		typename = "CommentOnFeedEventPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayload
		}{typename, v}
		return json.Marshal(result)
	case *commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound:
		typename = "ErrFeedEventNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound
		}{typename, v}
		return json.Marshal(result)
	case *commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError: "%T"`, v)
	}
}

// commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed) GetTypename() *string {
	return v.Typename
}

// GetMessage returns commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventErrAuthenticationFailed) GetMessage() string {
	return v.Message
}

// commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound includes the requested fields of the GraphQL type ErrFeedEventNotFound.
type commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound.Typename, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound.Message, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventErrFeedEventNotFound) GetMessage() string {
	return v.Message
}

// commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationCommentOnFeedEventErrInvalidInput) GetMessage() string {
	return v.Message
}

// commentOnFeedEventMutationResponse is returned by commentOnFeedEventMutation on success.
type commentOnFeedEventMutationResponse struct {
	CommentOnFeedEvent *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError `json:"-"`
}

// GetCommentOnFeedEvent returns commentOnFeedEventMutationResponse.CommentOnFeedEvent, and is useful for accessing the field via an interface.
func (v *commentOnFeedEventMutationResponse) GetCommentOnFeedEvent() *commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError {
	return v.CommentOnFeedEvent
}

func (v *commentOnFeedEventMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*commentOnFeedEventMutationResponse
		CommentOnFeedEvent json.RawMessage `json:"commentOnFeedEvent"`
		graphql.NoUnmarshalJSON
	}
	firstPass.commentOnFeedEventMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.CommentOnFeedEvent
		src := firstPass.CommentOnFeedEvent
		if len(src) != 0 && string(src) != "null" {
			*dst = new(commentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError)
			err = __unmarshalcommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal commentOnFeedEventMutationResponse.CommentOnFeedEvent: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcommentOnFeedEventMutationResponse struct {
	CommentOnFeedEvent json.RawMessage `json:"commentOnFeedEvent"`
}

func (v *commentOnFeedEventMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *commentOnFeedEventMutationResponse) __premarshalJSON() (*__premarshalcommentOnFeedEventMutationResponse, error) {
	var retval __premarshalcommentOnFeedEventMutationResponse

	{

		dst := &retval.CommentOnFeedEvent
		src := v.CommentOnFeedEvent
		if src != nil {
			var err error
			*dst, err = __marshalcommentOnFeedEventMutationCommentOnFeedEventCommentOnFeedEventPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal commentOnFeedEventMutationResponse.CommentOnFeedEvent: %w", err)
			}
		}
	}
	return &retval, nil
}

// commentOnPostMutationCommentOnPostCommentOnPostPayload includes the requested fields of the GraphQL type CommentOnPostPayload.
type commentOnPostMutationCommentOnPostCommentOnPostPayload struct {
	Typename *string                                                     `json:"__typename"`
	Post     *commentOnPostMutationCommentOnPostCommentOnPostPayloadPost `json:"post"`
}

// GetTypename returns commentOnPostMutationCommentOnPostCommentOnPostPayload.Typename, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostCommentOnPostPayload) GetTypename() *string {
	return v.Typename
}

// GetPost returns commentOnPostMutationCommentOnPostCommentOnPostPayload.Post, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostCommentOnPostPayload) GetPost() *commentOnPostMutationCommentOnPostCommentOnPostPayloadPost {
	return v.Post
}

// commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError includes the requested fields of the GraphQL interface CommentOnPostPayloadOrError.
//
// commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError is implemented by the following types:
// commentOnPostMutationCommentOnPostCommentOnPostPayload
// commentOnPostMutationCommentOnPostErrInvalidInput
// commentOnPostMutationCommentOnPostErrNotAuthorized
type commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError interface {
	implementsGraphQLInterfacecommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *commentOnPostMutationCommentOnPostCommentOnPostPayload) implementsGraphQLInterfacecommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError() {
}
func (v *commentOnPostMutationCommentOnPostErrInvalidInput) implementsGraphQLInterfacecommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError() {
}
func (v *commentOnPostMutationCommentOnPostErrNotAuthorized) implementsGraphQLInterfacecommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError() {
}

func __unmarshalcommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError(b []byte, v *commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CommentOnPostPayload":
		*v = new(commentOnPostMutationCommentOnPostCommentOnPostPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(commentOnPostMutationCommentOnPostErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(commentOnPostMutationCommentOnPostErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing CommentOnPostPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError(v *commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *commentOnPostMutationCommentOnPostCommentOnPostPayload:
		typename = "CommentOnPostPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnPostMutationCommentOnPostCommentOnPostPayload
		}{typename, v}
		return json.Marshal(result)
	case *commentOnPostMutationCommentOnPostErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnPostMutationCommentOnPostErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *commentOnPostMutationCommentOnPostErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*commentOnPostMutationCommentOnPostErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError: "%T"`, v)
	}
}

// commentOnPostMutationCommentOnPostCommentOnPostPayloadPost includes the requested fields of the GraphQL type Post.
type commentOnPostMutationCommentOnPostCommentOnPostPayloadPost struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns commentOnPostMutationCommentOnPostCommentOnPostPayloadPost.Dbid, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostCommentOnPostPayloadPost) GetDbid() persist.DBID {
	return v.Dbid
}

// commentOnPostMutationCommentOnPostErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type commentOnPostMutationCommentOnPostErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns commentOnPostMutationCommentOnPostErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns commentOnPostMutationCommentOnPostErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostErrInvalidInput) GetMessage() string { return v.Message }

// commentOnPostMutationCommentOnPostErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type commentOnPostMutationCommentOnPostErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns commentOnPostMutationCommentOnPostErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns commentOnPostMutationCommentOnPostErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationCommentOnPostErrNotAuthorized) GetMessage() string { return v.Message }

// commentOnPostMutationResponse is returned by commentOnPostMutation on success.
type commentOnPostMutationResponse struct {
	CommentOnPost *commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError `json:"-"`
}

// GetCommentOnPost returns commentOnPostMutationResponse.CommentOnPost, and is useful for accessing the field via an interface.
func (v *commentOnPostMutationResponse) GetCommentOnPost() *commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError {
	return v.CommentOnPost
}

func (v *commentOnPostMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*commentOnPostMutationResponse
		CommentOnPost json.RawMessage `json:"commentOnPost"`
		graphql.NoUnmarshalJSON
	}
	firstPass.commentOnPostMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.CommentOnPost
		src := firstPass.CommentOnPost
		if len(src) != 0 && string(src) != "null" {
			*dst = new(commentOnPostMutationCommentOnPostCommentOnPostPayloadOrError)
			err = __unmarshalcommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal commentOnPostMutationResponse.CommentOnPost: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcommentOnPostMutationResponse struct {
	CommentOnPost json.RawMessage `json:"commentOnPost"`
}

func (v *commentOnPostMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *commentOnPostMutationResponse) __premarshalJSON() (*__premarshalcommentOnPostMutationResponse, error) {
	var retval __premarshalcommentOnPostMutationResponse

	{

		dst := &retval.CommentOnPost
		src := v.CommentOnPost
		if src != nil {
			var err error
			*dst, err = __marshalcommentOnPostMutationCommentOnPostCommentOnPostPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal commentOnPostMutationResponse.CommentOnPost: %w", err)
			}
		}
	}
	return &retval, nil
}

// communityByAddressQueryCommunityByAddressCommunity includes the requested fields of the GraphQL type Community.
type communityByAddressQueryCommunityByAddressCommunity struct {
	Typename *string                                                                 `json:"__typename"`
	Dbid     persist.DBID                                                            `json:"dbid"`
	Name     *string                                                                 `json:"name"`
	Posts    *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnection `json:"posts"`
}

// GetTypename returns communityByAddressQueryCommunityByAddressCommunity.Typename, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunity) GetTypename() *string { return v.Typename }

// GetDbid returns communityByAddressQueryCommunityByAddressCommunity.Dbid, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunity) GetDbid() persist.DBID { return v.Dbid }

// GetName returns communityByAddressQueryCommunityByAddressCommunity.Name, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunity) GetName() *string { return v.Name }

// GetPosts returns communityByAddressQueryCommunityByAddressCommunity.Posts, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunity) GetPosts() *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnection {
	return v.Posts
}

// communityByAddressQueryCommunityByAddressCommunityByAddressOrError includes the requested fields of the GraphQL interface CommunityByAddressOrError.
//
// communityByAddressQueryCommunityByAddressCommunityByAddressOrError is implemented by the following types:
// communityByAddressQueryCommunityByAddressCommunity
// communityByAddressQueryCommunityByAddressErrCommunityNotFound
// communityByAddressQueryCommunityByAddressErrInvalidInput
type communityByAddressQueryCommunityByAddressCommunityByAddressOrError interface {
	implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityByAddressOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *communityByAddressQueryCommunityByAddressCommunity) implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityByAddressOrError() {
}
func (v *communityByAddressQueryCommunityByAddressErrCommunityNotFound) implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityByAddressOrError() {
}
func (v *communityByAddressQueryCommunityByAddressErrInvalidInput) implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityByAddressOrError() {
}

func __unmarshalcommunityByAddressQueryCommunityByAddressCommunityByAddressOrError(b []byte, v *communityByAddressQueryCommunityByAddressCommunityByAddressOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Community":
		*v = new(communityByAddressQueryCommunityByAddressCommunity)
		return json.Unmarshal(b, *v)
	case "ErrCommunityNotFound":
		*v = new(communityByAddressQueryCommunityByAddressErrCommunityNotFound)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(communityByAddressQueryCommunityByAddressErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing CommunityByAddressOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for communityByAddressQueryCommunityByAddressCommunityByAddressOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcommunityByAddressQueryCommunityByAddressCommunityByAddressOrError(v *communityByAddressQueryCommunityByAddressCommunityByAddressOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *communityByAddressQueryCommunityByAddressCommunity:
		typename = "Community"

		result := struct {
			TypeName string `json:"__typename"`
			*communityByAddressQueryCommunityByAddressCommunity
		}{typename, v}
		return json.Marshal(result)
	case *communityByAddressQueryCommunityByAddressErrCommunityNotFound:
		typename = "ErrCommunityNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*communityByAddressQueryCommunityByAddressErrCommunityNotFound
		}{typename, v}
		return json.Marshal(result)
	case *communityByAddressQueryCommunityByAddressErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*communityByAddressQueryCommunityByAddressErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for communityByAddressQueryCommunityByAddressCommunityByAddressOrError: "%T"`, v)
	}
}

// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnection includes the requested fields of the GraphQL type PostsConnection.
type communityByAddressQueryCommunityByAddressCommunityPostsPostsConnection struct {
	Edges []*communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge `json:"edges"`
}

// GetEdges returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnection.Edges, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnection) GetEdges() []*communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge {
	return v.Edges
}

// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge includes the requested fields of the GraphQL type PostEdge.
type communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge struct {
	Node *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError `json:"-"`
}

// GetNode returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge.Node, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge) GetNode() *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError {
	return v.Node
}

func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			*dst = new(communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError)
			err = __unmarshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge struct {
	Node json.RawMessage `json:"node"`
}

func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge) __premarshalJSON() (*__premarshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge, error) {
	var retval __premarshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge

	{

		dst := &retval.Node
		src := v.Node
		if src != nil {
			var err error
			*dst, err = __marshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdge.Node: %w", err)
			}
		}
	}
	return &retval, nil
}

// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput) GetMessage() string {
	return v.Message
}

// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound includes the requested fields of the GraphQL type ErrPostNotFound.
type communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound.Typename, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound.Message, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound) GetMessage() string {
	return v.Message
}

// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost includes the requested fields of the GraphQL type Post.
type communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost struct {
	Typename *string      `json:"__typename"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost.Typename, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost) GetTypename() *string {
	return v.Typename
}

// GetDbid returns communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost.Dbid, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost) GetDbid() persist.DBID {
	return v.Dbid
}

// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError includes the requested fields of the GraphQL interface PostOrError.
//
// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError is implemented by the following types:
// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput
// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound
// communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost
type communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError interface {
	implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput) implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError() {
}
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound) implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError() {
}
func (v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost) implementsGraphQLInterfacecommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError() {
}

func __unmarshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError(b []byte, v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrPostNotFound":
		*v = new(communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound)
		return json.Unmarshal(b, *v)
	case "Post":
		*v = new(communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing PostOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcommunityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError(v *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound:
		typename = "ErrPostNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodeErrPostNotFound
		}{typename, v}
		return json.Marshal(result)
	case *communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost:
		typename = "Post"

		result := struct {
			TypeName string `json:"__typename"`
			*communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePost
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for communityByAddressQueryCommunityByAddressCommunityPostsPostsConnectionEdgesPostEdgeNodePostOrError: "%T"`, v)
	}
}

// communityByAddressQueryCommunityByAddressErrCommunityNotFound includes the requested fields of the GraphQL type ErrCommunityNotFound.
type communityByAddressQueryCommunityByAddressErrCommunityNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns communityByAddressQueryCommunityByAddressErrCommunityNotFound.Typename, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressErrCommunityNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns communityByAddressQueryCommunityByAddressErrCommunityNotFound.Message, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressErrCommunityNotFound) GetMessage() string {
	return v.Message
}

// communityByAddressQueryCommunityByAddressErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type communityByAddressQueryCommunityByAddressErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns communityByAddressQueryCommunityByAddressErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns communityByAddressQueryCommunityByAddressErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryCommunityByAddressErrInvalidInput) GetMessage() string {
	return v.Message
}

// communityByAddressQueryResponse is returned by communityByAddressQuery on success.
type communityByAddressQueryResponse struct {
	CommunityByAddress *communityByAddressQueryCommunityByAddressCommunityByAddressOrError `json:"-"`
}

// GetCommunityByAddress returns communityByAddressQueryResponse.CommunityByAddress, and is useful for accessing the field via an interface.
func (v *communityByAddressQueryResponse) GetCommunityByAddress() *communityByAddressQueryCommunityByAddressCommunityByAddressOrError {
	return v.CommunityByAddress
}

func (v *communityByAddressQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*communityByAddressQueryResponse
		CommunityByAddress json.RawMessage `json:"communityByAddress"`
		graphql.NoUnmarshalJSON
	}
	firstPass.communityByAddressQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.CommunityByAddress
		src := firstPass.CommunityByAddress
		if len(src) != 0 && string(src) != "null" {
			*dst = new(communityByAddressQueryCommunityByAddressCommunityByAddressOrError)
			err = __unmarshalcommunityByAddressQueryCommunityByAddressCommunityByAddressOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal communityByAddressQueryResponse.CommunityByAddress: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcommunityByAddressQueryResponse struct {
	CommunityByAddress json.RawMessage `json:"communityByAddress"`
}

func (v *communityByAddressQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *communityByAddressQueryResponse) __premarshalJSON() (*__premarshalcommunityByAddressQueryResponse, error) {
	var retval __premarshalcommunityByAddressQueryResponse

	{

		dst := &retval.CommunityByAddress
		src := v.CommunityByAddress
		if src != nil {
			var err error
			*dst, err = __marshalcommunityByAddressQueryCommunityByAddressCommunityByAddressOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal communityByAddressQueryResponse.CommunityByAddress: %w", err)
			}
		}
	}
	return &retval, nil
}

// connectSocialAccountConnectSocialAccountConnectSocialAccountPayload includes the requested fields of the GraphQL type ConnectSocialAccountPayload.
type connectSocialAccountConnectSocialAccountConnectSocialAccountPayload struct {
	Typename *string                                                                    `json:"__typename"`
	Viewer   *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewer `json:"viewer"`
}

// GetTypename returns connectSocialAccountConnectSocialAccountConnectSocialAccountPayload.Typename, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayload) GetTypename() *string {
	return v.Typename
}

// GetViewer returns connectSocialAccountConnectSocialAccountConnectSocialAccountPayload.Viewer, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayload) GetViewer() *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewer {
	return v.Viewer
}

// connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError includes the requested fields of the GraphQL interface ConnectSocialAccountPayloadOrError.
//
// connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError is implemented by the following types:
// connectSocialAccountConnectSocialAccountConnectSocialAccountPayload
// connectSocialAccountConnectSocialAccountErrInvalidInput
// connectSocialAccountConnectSocialAccountErrNotAuthorized
type connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError interface {
	implementsGraphQLInterfaceconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayload) implementsGraphQLInterfaceconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError() {
}
func (v *connectSocialAccountConnectSocialAccountErrInvalidInput) implementsGraphQLInterfaceconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError() {
}
func (v *connectSocialAccountConnectSocialAccountErrNotAuthorized) implementsGraphQLInterfaceconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError() {
}

func __unmarshalconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError(b []byte, v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ConnectSocialAccountPayload":
		*v = new(connectSocialAccountConnectSocialAccountConnectSocialAccountPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(connectSocialAccountConnectSocialAccountErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(connectSocialAccountConnectSocialAccountErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ConnectSocialAccountPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError(v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *connectSocialAccountConnectSocialAccountConnectSocialAccountPayload:
		typename = "ConnectSocialAccountPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*connectSocialAccountConnectSocialAccountConnectSocialAccountPayload
		}{typename, v}
		return json.Marshal(result)
	case *connectSocialAccountConnectSocialAccountErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*connectSocialAccountConnectSocialAccountErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *connectSocialAccountConnectSocialAccountErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*connectSocialAccountConnectSocialAccountErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError: "%T"`, v)
	}
}

// connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewer includes the requested fields of the GraphQL type Viewer.
type connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewer struct {
	SocialAccounts *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccounts `json:"socialAccounts"`
}

// GetSocialAccounts returns connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewer.SocialAccounts, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewer) GetSocialAccounts() *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccounts {
	return v.SocialAccounts
}

// connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccounts includes the requested fields of the GraphQL type SocialAccounts.
type connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccounts struct {
	Twitter *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount `json:"twitter"`
}

// GetTwitter returns connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccounts.Twitter, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccounts) GetTwitter() *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount {
	return v.Twitter
}

// connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount includes the requested fields of the GraphQL type TwitterSocialAccount.
type connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount struct {
	Username string `json:"username"`
	Display  bool   `json:"display"`
}

// GetUsername returns connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount.Username, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount) GetUsername() string {
	return v.Username
}

// GetDisplay returns connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount.Display, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount) GetDisplay() bool {
	return v.Display
}

// connectSocialAccountConnectSocialAccountErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type connectSocialAccountConnectSocialAccountErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns connectSocialAccountConnectSocialAccountErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns connectSocialAccountConnectSocialAccountErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountErrInvalidInput) GetMessage() string {
	return v.Message
}

// connectSocialAccountConnectSocialAccountErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type connectSocialAccountConnectSocialAccountErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns connectSocialAccountConnectSocialAccountErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns connectSocialAccountConnectSocialAccountErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *connectSocialAccountConnectSocialAccountErrNotAuthorized) GetMessage() string {
	return v.Message
}

// connectSocialAccountResponse is returned by connectSocialAccount on success.
type connectSocialAccountResponse struct {
	ConnectSocialAccount *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError `json:"-"`
}

// GetConnectSocialAccount returns connectSocialAccountResponse.ConnectSocialAccount, and is useful for accessing the field via an interface.
func (v *connectSocialAccountResponse) GetConnectSocialAccount() *connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError {
	return v.ConnectSocialAccount
}

func (v *connectSocialAccountResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*connectSocialAccountResponse
		ConnectSocialAccount json.RawMessage `json:"connectSocialAccount"`
		graphql.NoUnmarshalJSON
	}
	firstPass.connectSocialAccountResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.ConnectSocialAccount
		src := firstPass.ConnectSocialAccount
		if len(src) != 0 && string(src) != "null" {
			*dst = new(connectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError)
			err = __unmarshalconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal connectSocialAccountResponse.ConnectSocialAccount: %w", err)
			}
		}
	}
	return nil
}

type __premarshalconnectSocialAccountResponse struct {
	ConnectSocialAccount json.RawMessage `json:"connectSocialAccount"`
}

func (v *connectSocialAccountResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *connectSocialAccountResponse) __premarshalJSON() (*__premarshalconnectSocialAccountResponse, error) {
	var retval __premarshalconnectSocialAccountResponse

	{

		dst := &retval.ConnectSocialAccount
		src := v.ConnectSocialAccount
		if src != nil {
			var err error
			*dst, err = __marshalconnectSocialAccountConnectSocialAccountConnectSocialAccountPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal connectSocialAccountResponse.ConnectSocialAccount: %w", err)
			}
		}
	}
	return &retval, nil
}

// createCollectionMutationCreateCollectionCreateCollectionPayload includes the requested fields of the GraphQL type CreateCollectionPayload.
type createCollectionMutationCreateCollectionCreateCollectionPayload struct {
	Typename   *string                                                                    `json:"__typename"`
	Collection *createCollectionMutationCreateCollectionCreateCollectionPayloadCollection `json:"collection"`
}

// GetTypename returns createCollectionMutationCreateCollectionCreateCollectionPayload.Typename, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayload) GetTypename() *string {
	return v.Typename
}

// GetCollection returns createCollectionMutationCreateCollectionCreateCollectionPayload.Collection, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayload) GetCollection() *createCollectionMutationCreateCollectionCreateCollectionPayloadCollection {
	return v.Collection
}

// createCollectionMutationCreateCollectionCreateCollectionPayloadCollection includes the requested fields of the GraphQL type Collection.
type createCollectionMutationCreateCollectionCreateCollectionPayloadCollection struct {
	Dbid   persist.DBID                                                                                      `json:"dbid"`
	Name   *string                                                                                           `json:"name"`
	Tokens []*createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionToken `json:"tokens"`
}

// GetDbid returns createCollectionMutationCreateCollectionCreateCollectionPayloadCollection.Dbid, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayloadCollection) GetDbid() persist.DBID {
	return v.Dbid
}

// GetName returns createCollectionMutationCreateCollectionCreateCollectionPayloadCollection.Name, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayloadCollection) GetName() *string {
	return v.Name
}

// GetTokens returns createCollectionMutationCreateCollectionCreateCollectionPayloadCollection.Tokens, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayloadCollection) GetTokens() []*createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionToken {
	return v.Tokens
}

// createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionToken includes the requested fields of the GraphQL type CollectionToken.
type createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionToken struct {
	Token *createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionTokenToken `json:"token"`
}

// GetToken returns createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionToken.Token, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionToken) GetToken() *createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionTokenToken {
	return v.Token
}

// createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionTokenToken includes the requested fields of the GraphQL type Token.
type createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionTokenToken struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionTokenToken.Dbid, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionCreateCollectionPayloadCollectionTokensCollectionTokenToken) GetDbid() persist.DBID {
	return v.Dbid
}

// createCollectionMutationCreateCollectionCreateCollectionPayloadOrError includes the requested fields of the GraphQL interface CreateCollectionPayloadOrError.
//
// createCollectionMutationCreateCollectionCreateCollectionPayloadOrError is implemented by the following types:
// createCollectionMutationCreateCollectionCreateCollectionPayload
// createCollectionMutationCreateCollectionErrInvalidInput
// createCollectionMutationCreateCollectionErrNotAuthorized
type createCollectionMutationCreateCollectionCreateCollectionPayloadOrError interface {
	implementsGraphQLInterfacecreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *createCollectionMutationCreateCollectionCreateCollectionPayload) implementsGraphQLInterfacecreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError() {
}
func (v *createCollectionMutationCreateCollectionErrInvalidInput) implementsGraphQLInterfacecreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError() {
}
func (v *createCollectionMutationCreateCollectionErrNotAuthorized) implementsGraphQLInterfacecreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError() {
}

func __unmarshalcreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError(b []byte, v *createCollectionMutationCreateCollectionCreateCollectionPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CreateCollectionPayload":
		*v = new(createCollectionMutationCreateCollectionCreateCollectionPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(createCollectionMutationCreateCollectionErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(createCollectionMutationCreateCollectionErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing CreateCollectionPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for createCollectionMutationCreateCollectionCreateCollectionPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError(v *createCollectionMutationCreateCollectionCreateCollectionPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *createCollectionMutationCreateCollectionCreateCollectionPayload:
		typename = "CreateCollectionPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*createCollectionMutationCreateCollectionCreateCollectionPayload
		}{typename, v}
		return json.Marshal(result)
	case *createCollectionMutationCreateCollectionErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*createCollectionMutationCreateCollectionErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *createCollectionMutationCreateCollectionErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*createCollectionMutationCreateCollectionErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for createCollectionMutationCreateCollectionCreateCollectionPayloadOrError: "%T"`, v)
	}
}

// createCollectionMutationCreateCollectionErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type createCollectionMutationCreateCollectionErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createCollectionMutationCreateCollectionErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns createCollectionMutationCreateCollectionErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionErrInvalidInput) GetMessage() string {
	return v.Message
}

// createCollectionMutationCreateCollectionErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type createCollectionMutationCreateCollectionErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createCollectionMutationCreateCollectionErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns createCollectionMutationCreateCollectionErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *createCollectionMutationCreateCollectionErrNotAuthorized) GetMessage() string {
	return v.Message
}

// createCollectionMutationResponse is returned by createCollectionMutation on success.
type createCollectionMutationResponse struct {
	CreateCollection *createCollectionMutationCreateCollectionCreateCollectionPayloadOrError `json:"-"`
}

// GetCreateCollection returns createCollectionMutationResponse.CreateCollection, and is useful for accessing the field via an interface.
func (v *createCollectionMutationResponse) GetCreateCollection() *createCollectionMutationCreateCollectionCreateCollectionPayloadOrError {
	return v.CreateCollection
}

func (v *createCollectionMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createCollectionMutationResponse
		CreateCollection json.RawMessage `json:"createCollection"`
		graphql.NoUnmarshalJSON
	}
	firstPass.createCollectionMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.CreateCollection
		src := firstPass.CreateCollection
		if len(src) != 0 && string(src) != "null" {
			*dst = new(createCollectionMutationCreateCollectionCreateCollectionPayloadOrError)
			err = __unmarshalcreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal createCollectionMutationResponse.CreateCollection: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcreateCollectionMutationResponse struct {
	CreateCollection json.RawMessage `json:"createCollection"`
}

func (v *createCollectionMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createCollectionMutationResponse) __premarshalJSON() (*__premarshalcreateCollectionMutationResponse, error) {
	var retval __premarshalcreateCollectionMutationResponse

	{

		dst := &retval.CreateCollection
		src := v.CreateCollection
		if src != nil {
			var err error
			*dst, err = __marshalcreateCollectionMutationCreateCollectionCreateCollectionPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal createCollectionMutationResponse.CreateCollection: %w", err)
			}
		}
	}
	return &retval, nil
}

// createGalleryMutationCreateGalleryCreateGalleryPayload includes the requested fields of the GraphQL type CreateGalleryPayload.
type createGalleryMutationCreateGalleryCreateGalleryPayload struct {
	Typename *string                                                        `json:"__typename"`
	Gallery  *createGalleryMutationCreateGalleryCreateGalleryPayloadGallery `json:"gallery"`
}

// GetTypename returns createGalleryMutationCreateGalleryCreateGalleryPayload.Typename, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryCreateGalleryPayload) GetTypename() *string {
	return v.Typename
}

// GetGallery returns createGalleryMutationCreateGalleryCreateGalleryPayload.Gallery, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryCreateGalleryPayload) GetGallery() *createGalleryMutationCreateGalleryCreateGalleryPayloadGallery {
	return v.Gallery
}

// createGalleryMutationCreateGalleryCreateGalleryPayloadGallery includes the requested fields of the GraphQL type Gallery.
type createGalleryMutationCreateGalleryCreateGalleryPayloadGallery struct {
	Dbid        persist.DBID `json:"dbid"`
	Name        *string      `json:"name"`
	Description *string      `json:"description"`
	Position    *string      `json:"position"`
}

// GetDbid returns createGalleryMutationCreateGalleryCreateGalleryPayloadGallery.Dbid, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryCreateGalleryPayloadGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// GetName returns createGalleryMutationCreateGalleryCreateGalleryPayloadGallery.Name, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryCreateGalleryPayloadGallery) GetName() *string {
	return v.Name
}

// GetDescription returns createGalleryMutationCreateGalleryCreateGalleryPayloadGallery.Description, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryCreateGalleryPayloadGallery) GetDescription() *string {
	return v.Description
}

// GetPosition returns createGalleryMutationCreateGalleryCreateGalleryPayloadGallery.Position, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryCreateGalleryPayloadGallery) GetPosition() *string {
	return v.Position
}

// createGalleryMutationCreateGalleryCreateGalleryPayloadOrError includes the requested fields of the GraphQL interface CreateGalleryPayloadOrError.
//
// createGalleryMutationCreateGalleryCreateGalleryPayloadOrError is implemented by the following types:
// createGalleryMutationCreateGalleryCreateGalleryPayload
// createGalleryMutationCreateGalleryErrInvalidInput
// createGalleryMutationCreateGalleryErrNotAuthorized
type createGalleryMutationCreateGalleryCreateGalleryPayloadOrError interface {
	implementsGraphQLInterfacecreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *createGalleryMutationCreateGalleryCreateGalleryPayload) implementsGraphQLInterfacecreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError() {
}
func (v *createGalleryMutationCreateGalleryErrInvalidInput) implementsGraphQLInterfacecreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError() {
}
func (v *createGalleryMutationCreateGalleryErrNotAuthorized) implementsGraphQLInterfacecreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError() {
}

func __unmarshalcreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError(b []byte, v *createGalleryMutationCreateGalleryCreateGalleryPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CreateGalleryPayload":
		*v = new(createGalleryMutationCreateGalleryCreateGalleryPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(createGalleryMutationCreateGalleryErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(createGalleryMutationCreateGalleryErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing CreateGalleryPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for createGalleryMutationCreateGalleryCreateGalleryPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError(v *createGalleryMutationCreateGalleryCreateGalleryPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *createGalleryMutationCreateGalleryCreateGalleryPayload:
		typename = "CreateGalleryPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*createGalleryMutationCreateGalleryCreateGalleryPayload
		}{typename, v}
		return json.Marshal(result)
	case *createGalleryMutationCreateGalleryErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*createGalleryMutationCreateGalleryErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *createGalleryMutationCreateGalleryErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*createGalleryMutationCreateGalleryErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for createGalleryMutationCreateGalleryCreateGalleryPayloadOrError: "%T"`, v)
	}
}

// createGalleryMutationCreateGalleryErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type createGalleryMutationCreateGalleryErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createGalleryMutationCreateGalleryErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns createGalleryMutationCreateGalleryErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryErrInvalidInput) GetMessage() string { return v.Message }

// createGalleryMutationCreateGalleryErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type createGalleryMutationCreateGalleryErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createGalleryMutationCreateGalleryErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns createGalleryMutationCreateGalleryErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *createGalleryMutationCreateGalleryErrNotAuthorized) GetMessage() string { return v.Message }

// createGalleryMutationResponse is returned by createGalleryMutation on success.
type createGalleryMutationResponse struct {
	CreateGallery *createGalleryMutationCreateGalleryCreateGalleryPayloadOrError `json:"-"`
}

// GetCreateGallery returns createGalleryMutationResponse.CreateGallery, and is useful for accessing the field via an interface.
func (v *createGalleryMutationResponse) GetCreateGallery() *createGalleryMutationCreateGalleryCreateGalleryPayloadOrError {
	return v.CreateGallery
}

func (v *createGalleryMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createGalleryMutationResponse
		CreateGallery json.RawMessage `json:"createGallery"`
		graphql.NoUnmarshalJSON
	}
	firstPass.createGalleryMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.CreateGallery
		src := firstPass.CreateGallery
		if len(src) != 0 && string(src) != "null" {
			*dst = new(createGalleryMutationCreateGalleryCreateGalleryPayloadOrError)
			err = __unmarshalcreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal createGalleryMutationResponse.CreateGallery: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcreateGalleryMutationResponse struct {
	CreateGallery json.RawMessage `json:"createGallery"`
}

func (v *createGalleryMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createGalleryMutationResponse) __premarshalJSON() (*__premarshalcreateGalleryMutationResponse, error) {
	var retval __premarshalcreateGalleryMutationResponse

	{

		dst := &retval.CreateGallery
		src := v.CreateGallery
		if src != nil {
			var err error
			*dst, err = __marshalcreateGalleryMutationCreateGalleryCreateGalleryPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal createGalleryMutationResponse.CreateGallery: %w", err)
			}
		}
	}
	return &retval, nil
}

// createUserMutationCreateUserCreateUserPayload includes the requested fields of the GraphQL type CreateUserPayload.
type createUserMutationCreateUserCreateUserPayload struct {
	Typename *string                                              `json:"__typename"`
	Viewer   *createUserMutationCreateUserCreateUserPayloadViewer `json:"viewer"`
}

// GetTypename returns createUserMutationCreateUserCreateUserPayload.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayload) GetTypename() *string { return v.Typename }

// GetViewer returns createUserMutationCreateUserCreateUserPayload.Viewer, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayload) GetViewer() *createUserMutationCreateUserCreateUserPayloadViewer {
	return v.Viewer
}

// createUserMutationCreateUserCreateUserPayloadOrError includes the requested fields of the GraphQL interface CreateUserPayloadOrError.
//
// createUserMutationCreateUserCreateUserPayloadOrError is implemented by the following types:
// createUserMutationCreateUserCreateUserPayload
// createUserMutationCreateUserErrAuthenticationFailed
// createUserMutationCreateUserErrDoesNotOwnRequiredToken
// createUserMutationCreateUserErrEmailAlreadyUsed
// createUserMutationCreateUserErrInvalidInput
// createUserMutationCreateUserErrUserAlreadyExists
// createUserMutationCreateUserErrUsernameNotAvailable
type createUserMutationCreateUserCreateUserPayloadOrError interface {
	implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *createUserMutationCreateUserCreateUserPayload) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}
func (v *createUserMutationCreateUserErrAuthenticationFailed) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}
func (v *createUserMutationCreateUserErrDoesNotOwnRequiredToken) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}
func (v *createUserMutationCreateUserErrEmailAlreadyUsed) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}
func (v *createUserMutationCreateUserErrInvalidInput) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}
func (v *createUserMutationCreateUserErrUserAlreadyExists) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}
func (v *createUserMutationCreateUserErrUsernameNotAvailable) implementsGraphQLInterfacecreateUserMutationCreateUserCreateUserPayloadOrError() {
}

func __unmarshalcreateUserMutationCreateUserCreateUserPayloadOrError(b []byte, v *createUserMutationCreateUserCreateUserPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CreateUserPayload":
		*v = new(createUserMutationCreateUserCreateUserPayload)
		return json.Unmarshal(b, *v)
	case "ErrAuthenticationFailed":
		*v = new(createUserMutationCreateUserErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ErrDoesNotOwnRequiredToken":
		*v = new(createUserMutationCreateUserErrDoesNotOwnRequiredToken)
		return json.Unmarshal(b, *v)
	case "ErrEmailAlreadyUsed":
		*v = new(createUserMutationCreateUserErrEmailAlreadyUsed)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(createUserMutationCreateUserErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrUserAlreadyExists":
		*v = new(createUserMutationCreateUserErrUserAlreadyExists)
		return json.Unmarshal(b, *v)
	case "ErrUsernameNotAvailable":
		*v = new(createUserMutationCreateUserErrUsernameNotAvailable)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing CreateUserPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for createUserMutationCreateUserCreateUserPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalcreateUserMutationCreateUserCreateUserPayloadOrError(v *createUserMutationCreateUserCreateUserPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *createUserMutationCreateUserCreateUserPayload:
		typename = "CreateUserPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserCreateUserPayload
		}{typename, v}
		return json.Marshal(result)
	case *createUserMutationCreateUserErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *createUserMutationCreateUserErrDoesNotOwnRequiredToken:
		typename = "ErrDoesNotOwnRequiredToken"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserErrDoesNotOwnRequiredToken
		}{typename, v}
		return json.Marshal(result)
	case *createUserMutationCreateUserErrEmailAlreadyUsed:
		typename = "ErrEmailAlreadyUsed"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserErrEmailAlreadyUsed
		}{typename, v}
		return json.Marshal(result)
	case *createUserMutationCreateUserErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *createUserMutationCreateUserErrUserAlreadyExists:
		typename = "ErrUserAlreadyExists"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserErrUserAlreadyExists
		}{typename, v}
		return json.Marshal(result)
	case *createUserMutationCreateUserErrUsernameNotAvailable:
		typename = "ErrUsernameNotAvailable"

		result := struct {
			TypeName string `json:"__typename"`
			*createUserMutationCreateUserErrUsernameNotAvailable
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for createUserMutationCreateUserCreateUserPayloadOrError: "%T"`, v)
	}
}

// createUserMutationCreateUserCreateUserPayloadViewer includes the requested fields of the GraphQL type Viewer.
type createUserMutationCreateUserCreateUserPayloadViewer struct {
	User *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser `json:"user"`
}

// GetUser returns createUserMutationCreateUserCreateUserPayloadViewer.User, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayloadViewer) GetUser() *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser {
	return v.User
}

// createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser struct {
	Username  *string                                                                               `json:"username"`
	Dbid      persist.DBID                                                                          `json:"dbid"`
	Bio       *string                                                                               `json:"bio"`
	Galleries []*createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUserGalleriesGallery `json:"galleries"`
}

// GetUsername returns createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser) GetUsername() *string {
	return v.Username
}

// GetDbid returns createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser) GetDbid() persist.DBID {
	return v.Dbid
}

// GetBio returns createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser.Bio, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser) GetBio() *string {
	return v.Bio
}

// GetGalleries returns createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser.Galleries, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUser) GetGalleries() []*createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUserGalleriesGallery {
	return v.Galleries
}

// createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUserGalleriesGallery includes the requested fields of the GraphQL type Gallery.
type createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUserGalleriesGallery struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUserGalleriesGallery.Dbid, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserCreateUserPayloadViewerUserGalleryUserGalleriesGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// createUserMutationCreateUserErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type createUserMutationCreateUserErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createUserMutationCreateUserErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrAuthenticationFailed) GetTypename() *string {
	return v.Typename
}

// GetMessage returns createUserMutationCreateUserErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrAuthenticationFailed) GetMessage() string { return v.Message }

// createUserMutationCreateUserErrDoesNotOwnRequiredToken includes the requested fields of the GraphQL type ErrDoesNotOwnRequiredToken.
type createUserMutationCreateUserErrDoesNotOwnRequiredToken struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createUserMutationCreateUserErrDoesNotOwnRequiredToken.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrDoesNotOwnRequiredToken) GetTypename() *string {
	return v.Typename
}

// GetMessage returns createUserMutationCreateUserErrDoesNotOwnRequiredToken.Message, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrDoesNotOwnRequiredToken) GetMessage() string {
	return v.Message
}

// createUserMutationCreateUserErrEmailAlreadyUsed includes the requested fields of the GraphQL type ErrEmailAlreadyUsed.
type createUserMutationCreateUserErrEmailAlreadyUsed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createUserMutationCreateUserErrEmailAlreadyUsed.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrEmailAlreadyUsed) GetTypename() *string { return v.Typename }

// GetMessage returns createUserMutationCreateUserErrEmailAlreadyUsed.Message, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrEmailAlreadyUsed) GetMessage() string { return v.Message }

// createUserMutationCreateUserErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type createUserMutationCreateUserErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createUserMutationCreateUserErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns createUserMutationCreateUserErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrInvalidInput) GetMessage() string { return v.Message }

// createUserMutationCreateUserErrUserAlreadyExists includes the requested fields of the GraphQL type ErrUserAlreadyExists.
type createUserMutationCreateUserErrUserAlreadyExists struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createUserMutationCreateUserErrUserAlreadyExists.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrUserAlreadyExists) GetTypename() *string { return v.Typename }

// GetMessage returns createUserMutationCreateUserErrUserAlreadyExists.Message, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrUserAlreadyExists) GetMessage() string { return v.Message }

// createUserMutationCreateUserErrUsernameNotAvailable includes the requested fields of the GraphQL type ErrUsernameNotAvailable.
type createUserMutationCreateUserErrUsernameNotAvailable struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns createUserMutationCreateUserErrUsernameNotAvailable.Typename, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrUsernameNotAvailable) GetTypename() *string {
	return v.Typename
}

// GetMessage returns createUserMutationCreateUserErrUsernameNotAvailable.Message, and is useful for accessing the field via an interface.
func (v *createUserMutationCreateUserErrUsernameNotAvailable) GetMessage() string { return v.Message }

// createUserMutationResponse is returned by createUserMutation on success.
type createUserMutationResponse struct {
	CreateUser *createUserMutationCreateUserCreateUserPayloadOrError `json:"-"`
}

// GetCreateUser returns createUserMutationResponse.CreateUser, and is useful for accessing the field via an interface.
func (v *createUserMutationResponse) GetCreateUser() *createUserMutationCreateUserCreateUserPayloadOrError {
	return v.CreateUser
}

func (v *createUserMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*createUserMutationResponse
		CreateUser json.RawMessage `json:"createUser"`
		graphql.NoUnmarshalJSON
	}
	firstPass.createUserMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.CreateUser
		src := firstPass.CreateUser
		if len(src) != 0 && string(src) != "null" {
			*dst = new(createUserMutationCreateUserCreateUserPayloadOrError)
			err = __unmarshalcreateUserMutationCreateUserCreateUserPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal createUserMutationResponse.CreateUser: %w", err)
			}
		}
	}
	return nil
}

type __premarshalcreateUserMutationResponse struct {
	CreateUser json.RawMessage `json:"createUser"`
}

func (v *createUserMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *createUserMutationResponse) __premarshalJSON() (*__premarshalcreateUserMutationResponse, error) {
	var retval __premarshalcreateUserMutationResponse

	{

		dst := &retval.CreateUser
		src := v.CreateUser
		if src != nil {
			var err error
			*dst, err = __marshalcreateUserMutationCreateUserCreateUserPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal createUserMutationResponse.CreateUser: %w", err)
			}
		}
	}
	return &retval, nil
}

// deletePostMutationDeletePostDeletePostPayload includes the requested fields of the GraphQL type DeletePostPayload.
type deletePostMutationDeletePostDeletePostPayload struct {
	Typename  *string                                                            `json:"__typename"`
	DeletedId *deletePostMutationDeletePostDeletePostPayloadDeletedIdDeletedNode `json:"deletedId"`
}

// GetTypename returns deletePostMutationDeletePostDeletePostPayload.Typename, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostDeletePostPayload) GetTypename() *string { return v.Typename }

// GetDeletedId returns deletePostMutationDeletePostDeletePostPayload.DeletedId, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostDeletePostPayload) GetDeletedId() *deletePostMutationDeletePostDeletePostPayloadDeletedIdDeletedNode {
	return v.DeletedId
}

// deletePostMutationDeletePostDeletePostPayloadDeletedIdDeletedNode includes the requested fields of the GraphQL type DeletedNode.
type deletePostMutationDeletePostDeletePostPayloadDeletedIdDeletedNode struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns deletePostMutationDeletePostDeletePostPayloadDeletedIdDeletedNode.Dbid, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostDeletePostPayloadDeletedIdDeletedNode) GetDbid() persist.DBID {
	return v.Dbid
}

// deletePostMutationDeletePostDeletePostPayloadOrError includes the requested fields of the GraphQL interface DeletePostPayloadOrError.
//
// deletePostMutationDeletePostDeletePostPayloadOrError is implemented by the following types:
// deletePostMutationDeletePostDeletePostPayload
// deletePostMutationDeletePostErrInvalidInput
// deletePostMutationDeletePostErrNotAuthorized
type deletePostMutationDeletePostDeletePostPayloadOrError interface {
	implementsGraphQLInterfacedeletePostMutationDeletePostDeletePostPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *deletePostMutationDeletePostDeletePostPayload) implementsGraphQLInterfacedeletePostMutationDeletePostDeletePostPayloadOrError() {
}
func (v *deletePostMutationDeletePostErrInvalidInput) implementsGraphQLInterfacedeletePostMutationDeletePostDeletePostPayloadOrError() {
}
func (v *deletePostMutationDeletePostErrNotAuthorized) implementsGraphQLInterfacedeletePostMutationDeletePostDeletePostPayloadOrError() {
}

func __unmarshaldeletePostMutationDeletePostDeletePostPayloadOrError(b []byte, v *deletePostMutationDeletePostDeletePostPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "DeletePostPayload":
		*v = new(deletePostMutationDeletePostDeletePostPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(deletePostMutationDeletePostErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(deletePostMutationDeletePostErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing DeletePostPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for deletePostMutationDeletePostDeletePostPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaldeletePostMutationDeletePostDeletePostPayloadOrError(v *deletePostMutationDeletePostDeletePostPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *deletePostMutationDeletePostDeletePostPayload:
		typename = "DeletePostPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*deletePostMutationDeletePostDeletePostPayload
		}{typename, v}
		return json.Marshal(result)
	case *deletePostMutationDeletePostErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*deletePostMutationDeletePostErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *deletePostMutationDeletePostErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*deletePostMutationDeletePostErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for deletePostMutationDeletePostDeletePostPayloadOrError: "%T"`, v)
	}
}

// deletePostMutationDeletePostErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type deletePostMutationDeletePostErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns deletePostMutationDeletePostErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns deletePostMutationDeletePostErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostErrInvalidInput) GetMessage() string { return v.Message }

// deletePostMutationDeletePostErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type deletePostMutationDeletePostErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns deletePostMutationDeletePostErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns deletePostMutationDeletePostErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *deletePostMutationDeletePostErrNotAuthorized) GetMessage() string { return v.Message }

// deletePostMutationResponse is returned by deletePostMutation on success.
type deletePostMutationResponse struct {
	DeletePost *deletePostMutationDeletePostDeletePostPayloadOrError `json:"-"`
}

// GetDeletePost returns deletePostMutationResponse.DeletePost, and is useful for accessing the field via an interface.
func (v *deletePostMutationResponse) GetDeletePost() *deletePostMutationDeletePostDeletePostPayloadOrError {
	return v.DeletePost
}

func (v *deletePostMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*deletePostMutationResponse
		DeletePost json.RawMessage `json:"deletePost"`
		graphql.NoUnmarshalJSON
	}
	firstPass.deletePostMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.DeletePost
		src := firstPass.DeletePost
		if len(src) != 0 && string(src) != "null" {
			*dst = new(deletePostMutationDeletePostDeletePostPayloadOrError)
			err = __unmarshaldeletePostMutationDeletePostDeletePostPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal deletePostMutationResponse.DeletePost: %w", err)
			}
		}
	}
	return nil
}

type __premarshaldeletePostMutationResponse struct {
	DeletePost json.RawMessage `json:"deletePost"`
}

func (v *deletePostMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *deletePostMutationResponse) __premarshalJSON() (*__premarshaldeletePostMutationResponse, error) {
	var retval __premarshaldeletePostMutationResponse

	{

		dst := &retval.DeletePost
		src := v.DeletePost
		if src != nil {
			var err error
			*dst, err = __marshaldeletePostMutationDeletePostDeletePostPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal deletePostMutationResponse.DeletePost: %w", err)
			}
		}
	}
	return &retval, nil
}

// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload includes the requested fields of the GraphQL type DisconnectSocialAccountPayload.
type disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload struct {
	Typename *string                                                                             `json:"__typename"`
	Viewer   *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewer `json:"viewer"`
}

// GetTypename returns disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload.Typename, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload) GetTypename() *string {
	return v.Typename
}

// GetViewer returns disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload.Viewer, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload) GetViewer() *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewer {
	return v.Viewer
}

// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError includes the requested fields of the GraphQL interface DisconnectSocialAccountPayloadOrError.
//
// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError is implemented by the following types:
// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload
// disconnectSocialAccountDisconnectSocialAccountErrInvalidInput
// disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial
// disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized
type disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError interface {
	implementsGraphQLInterfacedisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload) implementsGraphQLInterfacedisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError() {
}
func (v *disconnectSocialAccountDisconnectSocialAccountErrInvalidInput) implementsGraphQLInterfacedisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError() {
}
func (v *disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial) implementsGraphQLInterfacedisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError() {
}
func (v *disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized) implementsGraphQLInterfacedisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError() {
}

func __unmarshaldisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError(b []byte, v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "DisconnectSocialAccountPayload":
		*v = new(disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload)
		return json.Unmarshal(b, *v)
	case "ErrInvalidInput":
		*v = new(disconnectSocialAccountDisconnectSocialAccountErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNeedsToReconnectSocial":
		*v = new(disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing DisconnectSocialAccountPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaldisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError(v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload:
		typename = "DisconnectSocialAccountPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayload
		}{typename, v}
		return json.Marshal(result)
	case *disconnectSocialAccountDisconnectSocialAccountErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*disconnectSocialAccountDisconnectSocialAccountErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial:
		typename = "ErrNeedsToReconnectSocial"

		result := struct {
			TypeName string `json:"__typename"`
			*disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial
		}{typename, v}
		return json.Marshal(result)
	case *disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError: "%T"`, v)
	}
}

// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewer includes the requested fields of the GraphQL type Viewer.
type disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewer struct {
	SocialAccounts *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccounts `json:"socialAccounts"`
}

// GetSocialAccounts returns disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewer.SocialAccounts, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewer) GetSocialAccounts() *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccounts {
	return v.SocialAccounts
}

// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccounts includes the requested fields of the GraphQL type SocialAccounts.
type disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccounts struct {
	Twitter *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount `json:"twitter"`
}

// GetTwitter returns disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccounts.Twitter, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccounts) GetTwitter() *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount {
	return v.Twitter
}

// disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount includes the requested fields of the GraphQL type TwitterSocialAccount.
type disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount struct {
	Username string `json:"username"`
}

// GetUsername returns disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount.Username, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadViewerSocialAccountsTwitterTwitterSocialAccount) GetUsername() string {
	return v.Username
}

// disconnectSocialAccountDisconnectSocialAccountErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type disconnectSocialAccountDisconnectSocialAccountErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns disconnectSocialAccountDisconnectSocialAccountErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns disconnectSocialAccountDisconnectSocialAccountErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountErrInvalidInput) GetMessage() string {
	return v.Message
}

// disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial includes the requested fields of the GraphQL type ErrNeedsToReconnectSocial.
type disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial.Typename, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial) GetTypename() *string {
	return v.Typename
}

// GetMessage returns disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial.Message, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountErrNeedsToReconnectSocial) GetMessage() string {
	return v.Message
}

// disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountDisconnectSocialAccountErrNotAuthorized) GetMessage() string {
	return v.Message
}

// disconnectSocialAccountResponse is returned by disconnectSocialAccount on success.
type disconnectSocialAccountResponse struct {
	DisconnectSocialAccount *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError `json:"-"`
}

// GetDisconnectSocialAccount returns disconnectSocialAccountResponse.DisconnectSocialAccount, and is useful for accessing the field via an interface.
func (v *disconnectSocialAccountResponse) GetDisconnectSocialAccount() *disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError {
	return v.DisconnectSocialAccount
}

func (v *disconnectSocialAccountResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*disconnectSocialAccountResponse
		DisconnectSocialAccount json.RawMessage `json:"disconnectSocialAccount"`
		graphql.NoUnmarshalJSON
	}
	firstPass.disconnectSocialAccountResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.DisconnectSocialAccount
		src := firstPass.DisconnectSocialAccount
		if len(src) != 0 && string(src) != "null" {
			*dst = new(disconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError)
			err = __unmarshaldisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal disconnectSocialAccountResponse.DisconnectSocialAccount: %w", err)
			}
		}
	}
	return nil
}

type __premarshaldisconnectSocialAccountResponse struct {
	DisconnectSocialAccount json.RawMessage `json:"disconnectSocialAccount"`
}

func (v *disconnectSocialAccountResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *disconnectSocialAccountResponse) __premarshalJSON() (*__premarshaldisconnectSocialAccountResponse, error) {
	var retval __premarshaldisconnectSocialAccountResponse

	{

		dst := &retval.DisconnectSocialAccount
		src := v.DisconnectSocialAccount
		if src != nil {
			var err error
			*dst, err = __marshaldisconnectSocialAccountDisconnectSocialAccountDisconnectSocialAccountPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal disconnectSocialAccountResponse.DisconnectSocialAccount: %w", err)
			}
		}
	}
	return &retval, nil
}

// getAuthNonceMutationGetAuthNonce includes the requested fields of the GraphQL type AuthNonce.
type getAuthNonceMutationGetAuthNonce struct {
	Typename   *string `json:"__typename"`
	Nonce      *string `json:"nonce"`
	UserExists *bool   `json:"userExists"`
}

// GetTypename returns getAuthNonceMutationGetAuthNonce.Typename, and is useful for accessing the field via an interface.
func (v *getAuthNonceMutationGetAuthNonce) GetTypename() *string { return v.Typename }

// GetNonce returns getAuthNonceMutationGetAuthNonce.Nonce, and is useful for accessing the field via an interface.
func (v *getAuthNonceMutationGetAuthNonce) GetNonce() *string { return v.Nonce }

// GetUserExists returns getAuthNonceMutationGetAuthNonce.UserExists, and is useful for accessing the field via an interface.
func (v *getAuthNonceMutationGetAuthNonce) GetUserExists() *bool { return v.UserExists }

// getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken includes the requested fields of the GraphQL type ErrDoesNotOwnRequiredToken.
type getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken.Typename, and is useful for accessing the field via an interface.
func (v *getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken) GetTypename() *string {
	return v.Typename
}

// GetMessage returns getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken.Message, and is useful for accessing the field via an interface.
func (v *getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken) GetMessage() string {
	return v.Message
}

// getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError includes the requested fields of the GraphQL interface GetAuthNoncePayloadOrError.
//
// getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError is implemented by the following types:
// getAuthNonceMutationGetAuthNonce
// getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken
type getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError interface {
	implementsGraphQLInterfacegetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *getAuthNonceMutationGetAuthNonce) implementsGraphQLInterfacegetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError() {
}
func (v *getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken) implementsGraphQLInterfacegetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError() {
}

func __unmarshalgetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError(b []byte, v *getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AuthNonce":
		*v = new(getAuthNonceMutationGetAuthNonce)
		return json.Unmarshal(b, *v)
	case "ErrDoesNotOwnRequiredToken":
		*v = new(getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing GetAuthNoncePayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalgetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError(v *getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getAuthNonceMutationGetAuthNonce:
		typename = "AuthNonce"

		result := struct {
			TypeName string `json:"__typename"`
			*getAuthNonceMutationGetAuthNonce
		}{typename, v}
		return json.Marshal(result)
	case *getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken:
		typename = "ErrDoesNotOwnRequiredToken"

		result := struct {
			TypeName string `json:"__typename"`
			*getAuthNonceMutationGetAuthNonceErrDoesNotOwnRequiredToken
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError: "%T"`, v)
	}
}

// getAuthNonceMutationResponse is returned by getAuthNonceMutation on success.
type getAuthNonceMutationResponse struct {
	GetAuthNonce *getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError `json:"-"`
}

// GetGetAuthNonce returns getAuthNonceMutationResponse.GetAuthNonce, and is useful for accessing the field via an interface.
func (v *getAuthNonceMutationResponse) GetGetAuthNonce() *getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError {
	return v.GetAuthNonce
}

func (v *getAuthNonceMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getAuthNonceMutationResponse
		GetAuthNonce json.RawMessage `json:"getAuthNonce"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getAuthNonceMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.GetAuthNonce
		src := firstPass.GetAuthNonce
		if len(src) != 0 && string(src) != "null" {
			*dst = new(getAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError)
			err = __unmarshalgetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal getAuthNonceMutationResponse.GetAuthNonce: %w", err)
			}
		}
	}
	return nil
}

type __premarshalgetAuthNonceMutationResponse struct {
	GetAuthNonce json.RawMessage `json:"getAuthNonce"`
}

func (v *getAuthNonceMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getAuthNonceMutationResponse) __premarshalJSON() (*__premarshalgetAuthNonceMutationResponse, error) {
	var retval __premarshalgetAuthNonceMutationResponse

	{

		dst := &retval.GetAuthNonce
		src := v.GetAuthNonce
		if src != nil {
			var err error
			*dst, err = __marshalgetAuthNonceMutationGetAuthNonceGetAuthNoncePayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal getAuthNonceMutationResponse.GetAuthNonce: %w", err)
			}
		}
	}
	return &retval, nil
}

// globalFeedQueryGlobalFeedFeedConnection includes the requested fields of the GraphQL type FeedConnection.
type globalFeedQueryGlobalFeedFeedConnection struct {
	Edges []*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge `json:"edges"`
}

// GetEdges returns globalFeedQueryGlobalFeedFeedConnection.Edges, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnection) GetEdges() []*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge {
	return v.Edges
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge includes the requested fields of the GraphQL type FeedEdge.
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge struct {
	Node *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError `json:"-"`
}

// GetNode returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge.Node, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge) GetNode() *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError {
	return v.Node
}

func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			*dst = new(globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError)
			err = __unmarshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge struct {
	Node json.RawMessage `json:"node"`
}

func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge) __premarshalJSON() (*__premarshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge, error) {
	var retval __premarshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge

	{

		dst := &retval.Node
		src := v.Node
		if src != nil {
			var err error
			*dst, err = __marshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdge.Node: %w", err)
			}
		}
	}
	return &retval, nil
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound includes the requested fields of the GraphQL type ErrFeedEventNotFound.
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound.Typename, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound.Message, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) GetMessage() string {
	return v.Message
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound includes the requested fields of the GraphQL type ErrPostNotFound.
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound.Typename, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound.Message, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) GetMessage() string {
	return v.Message
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction includes the requested fields of the GraphQL type ErrUnknownAction.
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction.Typename, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) GetTypename() *string {
	return v.Typename
}

// GetMessage returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction.Message, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) GetMessage() string {
	return v.Message
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent includes the requested fields of the GraphQL type FeedEvent.
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent struct {
	Typename *string      `json:"__typename"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Typename, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetTypename() *string {
	return v.Typename
}

// GetDbid returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Dbid, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetDbid() persist.DBID {
	return v.Dbid
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError includes the requested fields of the GraphQL interface FeedEventOrError.
//
// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError is implemented by the following types:
// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound
// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound
// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction
// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost
// The GraphQL type's documentation follows.
//
// Can return posts as well
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError interface {
	implementsGraphQLInterfaceglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) implementsGraphQLInterfaceglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) implementsGraphQLInterfaceglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) implementsGraphQLInterfaceglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) implementsGraphQLInterfaceglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost) implementsGraphQLInterfaceglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}

func __unmarshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(b []byte, v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrFeedEventNotFound":
		*v = new(globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound)
		return json.Unmarshal(b, *v)
	case "ErrPostNotFound":
		*v = new(globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound)
		return json.Unmarshal(b, *v)
	case "ErrUnknownAction":
		*v = new(globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction)
		return json.Unmarshal(b, *v)
	case "FeedEvent":
		*v = new(globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent)
		return json.Unmarshal(b, *v)
	case "Post":
		*v = new(globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing FeedEventOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError: "%v"`, tn.TypeName)
	}
}

func __marshalglobalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound:
		typename = "ErrFeedEventNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound
		}{typename, v}
		return json.Marshal(result)
	case *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound:
		typename = "ErrPostNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound
		}{typename, v}
		return json.Marshal(result)
	case *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction:
		typename = "ErrUnknownAction"

		result := struct {
			TypeName string `json:"__typename"`
			*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction
		}{typename, v}
		return json.Marshal(result)
	case *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent:
		typename = "FeedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
		}{typename, v}
		return json.Marshal(result)
	case *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost:
		typename = "Post"

		result := struct {
			TypeName string `json:"__typename"`
			*globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError: "%T"`, v)
	}
}

// globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost includes the requested fields of the GraphQL type Post.
type globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost struct {
	Typename *string      `json:"__typename"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost.Typename, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost) GetTypename() *string {
	return v.Typename
}

// GetDbid returns globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost.Dbid, and is useful for accessing the field via an interface.
func (v *globalFeedQueryGlobalFeedFeedConnectionEdgesFeedEdgeNodePost) GetDbid() persist.DBID {
	return v.Dbid
}

// globalFeedQueryResponse is returned by globalFeedQuery on success.
type globalFeedQueryResponse struct {
	GlobalFeed *globalFeedQueryGlobalFeedFeedConnection `json:"globalFeed"`
}

// GetGlobalFeed returns globalFeedQueryResponse.GlobalFeed, and is useful for accessing the field via an interface.
func (v *globalFeedQueryResponse) GetGlobalFeed() *globalFeedQueryGlobalFeedFeedConnection {
	return v.GlobalFeed
}

// loginMutationLoginErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type loginMutationLoginErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns loginMutationLoginErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrAuthenticationFailed) GetTypename() *string { return v.Typename }

// GetMessage returns loginMutationLoginErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrAuthenticationFailed) GetMessage() string { return v.Message }

// loginMutationLoginErrDoesNotOwnRequiredToken includes the requested fields of the GraphQL type ErrDoesNotOwnRequiredToken.
type loginMutationLoginErrDoesNotOwnRequiredToken struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns loginMutationLoginErrDoesNotOwnRequiredToken.Typename, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrDoesNotOwnRequiredToken) GetTypename() *string { return v.Typename }

// GetMessage returns loginMutationLoginErrDoesNotOwnRequiredToken.Message, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrDoesNotOwnRequiredToken) GetMessage() string { return v.Message }

// loginMutationLoginErrEmailUnverified includes the requested fields of the GraphQL type ErrEmailUnverified.
type loginMutationLoginErrEmailUnverified struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns loginMutationLoginErrEmailUnverified.Typename, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrEmailUnverified) GetTypename() *string { return v.Typename }

// GetMessage returns loginMutationLoginErrEmailUnverified.Message, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrEmailUnverified) GetMessage() string { return v.Message }

// loginMutationLoginErrUserNotFound includes the requested fields of the GraphQL type ErrUserNotFound.
type loginMutationLoginErrUserNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns loginMutationLoginErrUserNotFound.Typename, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrUserNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns loginMutationLoginErrUserNotFound.Message, and is useful for accessing the field via an interface.
func (v *loginMutationLoginErrUserNotFound) GetMessage() string { return v.Message }

// loginMutationLoginLoginPayload includes the requested fields of the GraphQL type LoginPayload.
type loginMutationLoginLoginPayload struct {
	Typename *string                               `json:"__typename"`
	Viewer   *loginMutationLoginLoginPayloadViewer `json:"viewer"`
}

// GetTypename returns loginMutationLoginLoginPayload.Typename, and is useful for accessing the field via an interface.
func (v *loginMutationLoginLoginPayload) GetTypename() *string { return v.Typename }

// GetViewer returns loginMutationLoginLoginPayload.Viewer, and is useful for accessing the field via an interface.
func (v *loginMutationLoginLoginPayload) GetViewer() *loginMutationLoginLoginPayloadViewer {
	return v.Viewer
}

// loginMutationLoginLoginPayloadOrError includes the requested fields of the GraphQL interface LoginPayloadOrError.
//
// loginMutationLoginLoginPayloadOrError is implemented by the following types:
// loginMutationLoginErrAuthenticationFailed
// loginMutationLoginErrDoesNotOwnRequiredToken
// loginMutationLoginErrEmailUnverified
// loginMutationLoginErrUserNotFound
// loginMutationLoginLoginPayload
type loginMutationLoginLoginPayloadOrError interface {
	implementsGraphQLInterfaceloginMutationLoginLoginPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *loginMutationLoginErrAuthenticationFailed) implementsGraphQLInterfaceloginMutationLoginLoginPayloadOrError() {
}
func (v *loginMutationLoginErrDoesNotOwnRequiredToken) implementsGraphQLInterfaceloginMutationLoginLoginPayloadOrError() {
}
func (v *loginMutationLoginErrEmailUnverified) implementsGraphQLInterfaceloginMutationLoginLoginPayloadOrError() {
}
func (v *loginMutationLoginErrUserNotFound) implementsGraphQLInterfaceloginMutationLoginLoginPayloadOrError() {
}
func (v *loginMutationLoginLoginPayload) implementsGraphQLInterfaceloginMutationLoginLoginPayloadOrError() {
}

func __unmarshalloginMutationLoginLoginPayloadOrError(b []byte, v *loginMutationLoginLoginPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrAuthenticationFailed":
		*v = new(loginMutationLoginErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ErrDoesNotOwnRequiredToken":
		*v = new(loginMutationLoginErrDoesNotOwnRequiredToken)
		return json.Unmarshal(b, *v)
	case "ErrEmailUnverified":
		*v = new(loginMutationLoginErrEmailUnverified)
		return json.Unmarshal(b, *v)
	case "ErrUserNotFound":
		*v = new(loginMutationLoginErrUserNotFound)
		return json.Unmarshal(b, *v)
	case "LoginPayload":
		*v = new(loginMutationLoginLoginPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing LoginPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for loginMutationLoginLoginPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalloginMutationLoginLoginPayloadOrError(v *loginMutationLoginLoginPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *loginMutationLoginErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*loginMutationLoginErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *loginMutationLoginErrDoesNotOwnRequiredToken:
		typename = "ErrDoesNotOwnRequiredToken"

		result := struct {
			TypeName string `json:"__typename"`
			*loginMutationLoginErrDoesNotOwnRequiredToken
		}{typename, v}
		return json.Marshal(result)
	case *loginMutationLoginErrEmailUnverified:
		typename = "ErrEmailUnverified"

		result := struct {
			TypeName string `json:"__typename"`
			*loginMutationLoginErrEmailUnverified
		}{typename, v}
		return json.Marshal(result)
	case *loginMutationLoginErrUserNotFound:
		typename = "ErrUserNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*loginMutationLoginErrUserNotFound
		}{typename, v}
		return json.Marshal(result)
	case *loginMutationLoginLoginPayload:
		typename = "LoginPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*loginMutationLoginLoginPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for loginMutationLoginLoginPayloadOrError: "%T"`, v)
	}
}

// loginMutationLoginLoginPayloadViewer includes the requested fields of the GraphQL type Viewer.
type loginMutationLoginLoginPayloadViewer struct {
	User *loginMutationLoginLoginPayloadViewerUserGalleryUser `json:"user"`
}

// GetUser returns loginMutationLoginLoginPayloadViewer.User, and is useful for accessing the field via an interface.
func (v *loginMutationLoginLoginPayloadViewer) GetUser() *loginMutationLoginLoginPayloadViewerUserGalleryUser {
	return v.User
}

// loginMutationLoginLoginPayloadViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type loginMutationLoginLoginPayloadViewerUserGalleryUser struct {
	Username *string      `json:"username"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetUsername returns loginMutationLoginLoginPayloadViewerUserGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *loginMutationLoginLoginPayloadViewerUserGalleryUser) GetUsername() *string {
	return v.Username
}

// GetDbid returns loginMutationLoginLoginPayloadViewerUserGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *loginMutationLoginLoginPayloadViewerUserGalleryUser) GetDbid() persist.DBID { return v.Dbid }

// loginMutationResponse is returned by loginMutation on success.
type loginMutationResponse struct {
	Login *loginMutationLoginLoginPayloadOrError `json:"-"`
}

// GetLogin returns loginMutationResponse.Login, and is useful for accessing the field via an interface.
func (v *loginMutationResponse) GetLogin() *loginMutationLoginLoginPayloadOrError { return v.Login }

func (v *loginMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*loginMutationResponse
		Login json.RawMessage `json:"login"`
		graphql.NoUnmarshalJSON
	}
	firstPass.loginMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Login
		src := firstPass.Login
		if len(src) != 0 && string(src) != "null" {
			*dst = new(loginMutationLoginLoginPayloadOrError)
			err = __unmarshalloginMutationLoginLoginPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal loginMutationResponse.Login: %w", err)
			}
		}
	}
	return nil
}

type __premarshalloginMutationResponse struct {
	Login json.RawMessage `json:"login"`
}

func (v *loginMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *loginMutationResponse) __premarshalJSON() (*__premarshalloginMutationResponse, error) {
	var retval __premarshalloginMutationResponse

	{

		dst := &retval.Login
		src := v.Login
		if src != nil {
			var err error
			*dst, err = __marshalloginMutationLoginLoginPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal loginMutationResponse.Login: %w", err)
			}
		}
	}
	return &retval, nil
}

// logoutMutationLogoutLogoutPayload includes the requested fields of the GraphQL type LogoutPayload.
type logoutMutationLogoutLogoutPayload struct {
	Viewer *logoutMutationLogoutLogoutPayloadViewer `json:"viewer"`
}

// GetViewer returns logoutMutationLogoutLogoutPayload.Viewer, and is useful for accessing the field via an interface.
func (v *logoutMutationLogoutLogoutPayload) GetViewer() *logoutMutationLogoutLogoutPayloadViewer {
	return v.Viewer
}

// logoutMutationLogoutLogoutPayloadViewer includes the requested fields of the GraphQL type Viewer.
type logoutMutationLogoutLogoutPayloadViewer struct {
	User *logoutMutationLogoutLogoutPayloadViewerUserGalleryUser `json:"user"`
}

// GetUser returns logoutMutationLogoutLogoutPayloadViewer.User, and is useful for accessing the field via an interface.
func (v *logoutMutationLogoutLogoutPayloadViewer) GetUser() *logoutMutationLogoutLogoutPayloadViewerUserGalleryUser {
	return v.User
}

// logoutMutationLogoutLogoutPayloadViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type logoutMutationLogoutLogoutPayloadViewerUserGalleryUser struct {
	Username *string      `json:"username"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetUsername returns logoutMutationLogoutLogoutPayloadViewerUserGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *logoutMutationLogoutLogoutPayloadViewerUserGalleryUser) GetUsername() *string {
	return v.Username
}

// GetDbid returns logoutMutationLogoutLogoutPayloadViewerUserGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *logoutMutationLogoutLogoutPayloadViewerUserGalleryUser) GetDbid() persist.DBID {
	return v.Dbid
}

// logoutMutationResponse is returned by logoutMutation on success.
type logoutMutationResponse struct {
	Logout *logoutMutationLogoutLogoutPayload `json:"logout"`
}

// GetLogout returns logoutMutationResponse.Logout, and is useful for accessing the field via an interface.
func (v *logoutMutationResponse) GetLogout() *logoutMutationLogoutLogoutPayload { return v.Logout }

// moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput) GetMessage() string {
	return v.Message
}

// moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized) GetMessage() string {
	return v.Message
}

// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload includes the requested fields of the GraphQL type MoveCollectionToGalleryPayload.
type moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload struct {
	Typename   *string                                                                                 `json:"__typename"`
	OldGallery *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery `json:"oldGallery"`
	NewGallery *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery `json:"newGallery"`
}

// GetTypename returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload.Typename, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload) GetTypename() *string {
	return v.Typename
}

// GetOldGallery returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload.OldGallery, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload) GetOldGallery() *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery {
	return v.OldGallery
}

// GetNewGallery returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload.NewGallery, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload) GetNewGallery() *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery {
	return v.NewGallery
}

// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery includes the requested fields of the GraphQL type Gallery.
type moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery struct {
	Dbid        persist.DBID                                                                                                   `json:"dbid"`
	Collections []*moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGalleryCollectionsCollection `json:"collections"`
}

// GetDbid returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery.Dbid, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// GetCollections returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery.Collections, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGallery) GetCollections() []*moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGalleryCollectionsCollection {
	return v.Collections
}

// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGalleryCollectionsCollection includes the requested fields of the GraphQL type Collection.
type moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGalleryCollectionsCollection struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGalleryCollectionsCollection.Dbid, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadNewGalleryCollectionsCollection) GetDbid() persist.DBID {
	return v.Dbid
}

// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery includes the requested fields of the GraphQL type Gallery.
type moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery struct {
	Dbid        persist.DBID                                                                                                   `json:"dbid"`
	Collections []*moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGalleryCollectionsCollection `json:"collections"`
}

// GetDbid returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery.Dbid, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// GetCollections returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery.Collections, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGallery) GetCollections() []*moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGalleryCollectionsCollection {
	return v.Collections
}

// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGalleryCollectionsCollection includes the requested fields of the GraphQL type Collection.
type moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGalleryCollectionsCollection struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGalleryCollectionsCollection.Dbid, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOldGalleryCollectionsCollection) GetDbid() persist.DBID {
	return v.Dbid
}

// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError includes the requested fields of the GraphQL interface MoveCollectionToGalleryPayloadOrError.
//
// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError is implemented by the following types:
// moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput
// moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized
// moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload
type moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError interface {
	implementsGraphQLInterfacemoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput) implementsGraphQLInterfacemoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError() {
}
func (v *moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized) implementsGraphQLInterfacemoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError() {
}
func (v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload) implementsGraphQLInterfacemoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError() {
}

func __unmarshalmoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError(b []byte, v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "MoveCollectionToGalleryPayload":
		*v = new(moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MoveCollectionToGalleryPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalmoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError(v *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*moveCollectionToGalleryMoveCollectionToGalleryErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*moveCollectionToGalleryMoveCollectionToGalleryErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload:
		typename = "MoveCollectionToGalleryPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError: "%T"`, v)
	}
}

// moveCollectionToGalleryResponse is returned by moveCollectionToGallery on success.
type moveCollectionToGalleryResponse struct {
	MoveCollectionToGallery *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError `json:"-"`
}

// GetMoveCollectionToGallery returns moveCollectionToGalleryResponse.MoveCollectionToGallery, and is useful for accessing the field via an interface.
func (v *moveCollectionToGalleryResponse) GetMoveCollectionToGallery() *moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError {
	return v.MoveCollectionToGallery
}

func (v *moveCollectionToGalleryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*moveCollectionToGalleryResponse
		MoveCollectionToGallery json.RawMessage `json:"moveCollectionToGallery"`
		graphql.NoUnmarshalJSON
	}
	firstPass.moveCollectionToGalleryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.MoveCollectionToGallery
		src := firstPass.MoveCollectionToGallery
		if len(src) != 0 && string(src) != "null" {
			*dst = new(moveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError)
			err = __unmarshalmoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal moveCollectionToGalleryResponse.MoveCollectionToGallery: %w", err)
			}
		}
	}
	return nil
}

type __premarshalmoveCollectionToGalleryResponse struct {
	MoveCollectionToGallery json.RawMessage `json:"moveCollectionToGallery"`
}

func (v *moveCollectionToGalleryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *moveCollectionToGalleryResponse) __premarshalJSON() (*__premarshalmoveCollectionToGalleryResponse, error) {
	var retval __premarshalmoveCollectionToGalleryResponse

	{

		dst := &retval.MoveCollectionToGallery
		src := v.MoveCollectionToGallery
		if src != nil {
			var err error
			*dst, err = __marshalmoveCollectionToGalleryMoveCollectionToGalleryMoveCollectionToGalleryPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal moveCollectionToGalleryResponse.MoveCollectionToGallery: %w", err)
			}
		}
	}
	return &retval, nil
}

// postTokensPostTokensErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type postTokensPostTokensErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns postTokensPostTokensErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns postTokensPostTokensErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensErrInvalidInput) GetMessage() string { return v.Message }

// postTokensPostTokensErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type postTokensPostTokensErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns postTokensPostTokensErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns postTokensPostTokensErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensErrNotAuthorized) GetMessage() string { return v.Message }

// postTokensPostTokensPostTokensPayload includes the requested fields of the GraphQL type PostTokensPayload.
type postTokensPostTokensPostTokensPayload struct {
	Typename *string                                   `json:"__typename"`
	Post     postTokensPostTokensPostTokensPayloadPost `json:"post"`
}

// GetTypename returns postTokensPostTokensPostTokensPayload.Typename, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensPostTokensPayload) GetTypename() *string { return v.Typename }

// GetPost returns postTokensPostTokensPostTokensPayload.Post, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensPostTokensPayload) GetPost() postTokensPostTokensPostTokensPayloadPost {
	return v.Post
}

// postTokensPostTokensPostTokensPayloadOrError includes the requested fields of the GraphQL interface PostTokensPayloadOrError.
//
// postTokensPostTokensPostTokensPayloadOrError is implemented by the following types:
// postTokensPostTokensErrInvalidInput
// postTokensPostTokensErrNotAuthorized
// postTokensPostTokensPostTokensPayload
type postTokensPostTokensPostTokensPayloadOrError interface {
	implementsGraphQLInterfacepostTokensPostTokensPostTokensPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *postTokensPostTokensErrInvalidInput) implementsGraphQLInterfacepostTokensPostTokensPostTokensPayloadOrError() {
}
func (v *postTokensPostTokensErrNotAuthorized) implementsGraphQLInterfacepostTokensPostTokensPostTokensPayloadOrError() {
}
func (v *postTokensPostTokensPostTokensPayload) implementsGraphQLInterfacepostTokensPostTokensPostTokensPayloadOrError() {
}

func __unmarshalpostTokensPostTokensPostTokensPayloadOrError(b []byte, v *postTokensPostTokensPostTokensPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(postTokensPostTokensErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(postTokensPostTokensErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "PostTokensPayload":
		*v = new(postTokensPostTokensPostTokensPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing PostTokensPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for postTokensPostTokensPostTokensPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalpostTokensPostTokensPostTokensPayloadOrError(v *postTokensPostTokensPostTokensPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *postTokensPostTokensErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*postTokensPostTokensErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *postTokensPostTokensErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*postTokensPostTokensErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *postTokensPostTokensPostTokensPayload:
		typename = "PostTokensPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*postTokensPostTokensPostTokensPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for postTokensPostTokensPostTokensPayloadOrError: "%T"`, v)
	}
}

// postTokensPostTokensPostTokensPayloadPost includes the requested fields of the GraphQL type Post.
type postTokensPostTokensPostTokensPayloadPost struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns postTokensPostTokensPostTokensPayloadPost.Dbid, and is useful for accessing the field via an interface.
func (v *postTokensPostTokensPostTokensPayloadPost) GetDbid() persist.DBID { return v.Dbid }

// postTokensResponse is returned by postTokens on success.
type postTokensResponse struct {
	PostTokens *postTokensPostTokensPostTokensPayloadOrError `json:"-"`
}

// GetPostTokens returns postTokensResponse.PostTokens, and is useful for accessing the field via an interface.
func (v *postTokensResponse) GetPostTokens() *postTokensPostTokensPostTokensPayloadOrError {
	return v.PostTokens
}

func (v *postTokensResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*postTokensResponse
		PostTokens json.RawMessage `json:"postTokens"`
		graphql.NoUnmarshalJSON
	}
	firstPass.postTokensResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.PostTokens
		src := firstPass.PostTokens
		if len(src) != 0 && string(src) != "null" {
			*dst = new(postTokensPostTokensPostTokensPayloadOrError)
			err = __unmarshalpostTokensPostTokensPostTokensPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal postTokensResponse.PostTokens: %w", err)
			}
		}
	}
	return nil
}

type __premarshalpostTokensResponse struct {
	PostTokens json.RawMessage `json:"postTokens"`
}

func (v *postTokensResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *postTokensResponse) __premarshalJSON() (*__premarshalpostTokensResponse, error) {
	var retval __premarshalpostTokensResponse

	{

		dst := &retval.PostTokens
		src := v.PostTokens
		if src != nil {
			var err error
			*dst, err = __marshalpostTokensPostTokensPostTokensPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal postTokensResponse.PostTokens: %w", err)
			}
		}
	}
	return &retval, nil
}

// publishGalleryMutationPublishGalleryErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type publishGalleryMutationPublishGalleryErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns publishGalleryMutationPublishGalleryErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns publishGalleryMutationPublishGalleryErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryErrInvalidInput) GetMessage() string { return v.Message }

// publishGalleryMutationPublishGalleryErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type publishGalleryMutationPublishGalleryErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns publishGalleryMutationPublishGalleryErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns publishGalleryMutationPublishGalleryErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryErrNotAuthorized) GetMessage() string { return v.Message }

// publishGalleryMutationPublishGalleryPublishGalleryPayload includes the requested fields of the GraphQL type PublishGalleryPayload.
type publishGalleryMutationPublishGalleryPublishGalleryPayload struct {
	Typename *string                                                           `json:"__typename"`
	Gallery  *publishGalleryMutationPublishGalleryPublishGalleryPayloadGallery `json:"gallery"`
}

// GetTypename returns publishGalleryMutationPublishGalleryPublishGalleryPayload.Typename, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryPublishGalleryPayload) GetTypename() *string {
	return v.Typename
}

// GetGallery returns publishGalleryMutationPublishGalleryPublishGalleryPayload.Gallery, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryPublishGalleryPayload) GetGallery() *publishGalleryMutationPublishGalleryPublishGalleryPayloadGallery {
	return v.Gallery
}

// publishGalleryMutationPublishGalleryPublishGalleryPayloadGallery includes the requested fields of the GraphQL type Gallery.
type publishGalleryMutationPublishGalleryPublishGalleryPayloadGallery struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns publishGalleryMutationPublishGalleryPublishGalleryPayloadGallery.Dbid, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationPublishGalleryPublishGalleryPayloadGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError includes the requested fields of the GraphQL interface PublishGalleryPayloadOrError.
//
// publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError is implemented by the following types:
// publishGalleryMutationPublishGalleryErrInvalidInput
// publishGalleryMutationPublishGalleryErrNotAuthorized
// publishGalleryMutationPublishGalleryPublishGalleryPayload
type publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError interface {
	implementsGraphQLInterfacepublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *publishGalleryMutationPublishGalleryErrInvalidInput) implementsGraphQLInterfacepublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError() {
}
func (v *publishGalleryMutationPublishGalleryErrNotAuthorized) implementsGraphQLInterfacepublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError() {
}
func (v *publishGalleryMutationPublishGalleryPublishGalleryPayload) implementsGraphQLInterfacepublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError() {
}

func __unmarshalpublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError(b []byte, v *publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(publishGalleryMutationPublishGalleryErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(publishGalleryMutationPublishGalleryErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "PublishGalleryPayload":
		*v = new(publishGalleryMutationPublishGalleryPublishGalleryPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing PublishGalleryPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalpublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError(v *publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *publishGalleryMutationPublishGalleryErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*publishGalleryMutationPublishGalleryErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *publishGalleryMutationPublishGalleryErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*publishGalleryMutationPublishGalleryErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *publishGalleryMutationPublishGalleryPublishGalleryPayload:
		typename = "PublishGalleryPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*publishGalleryMutationPublishGalleryPublishGalleryPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError: "%T"`, v)
	}
}

// publishGalleryMutationResponse is returned by publishGalleryMutation on success.
type publishGalleryMutationResponse struct {
	PublishGallery *publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError `json:"-"`
}

// GetPublishGallery returns publishGalleryMutationResponse.PublishGallery, and is useful for accessing the field via an interface.
func (v *publishGalleryMutationResponse) GetPublishGallery() *publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError {
	return v.PublishGallery
}

func (v *publishGalleryMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*publishGalleryMutationResponse
		PublishGallery json.RawMessage `json:"publishGallery"`
		graphql.NoUnmarshalJSON
	}
	firstPass.publishGalleryMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.PublishGallery
		src := firstPass.PublishGallery
		if len(src) != 0 && string(src) != "null" {
			*dst = new(publishGalleryMutationPublishGalleryPublishGalleryPayloadOrError)
			err = __unmarshalpublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal publishGalleryMutationResponse.PublishGallery: %w", err)
			}
		}
	}
	return nil
}

type __premarshalpublishGalleryMutationResponse struct {
	PublishGallery json.RawMessage `json:"publishGallery"`
}

func (v *publishGalleryMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *publishGalleryMutationResponse) __premarshalJSON() (*__premarshalpublishGalleryMutationResponse, error) {
	var retval __premarshalpublishGalleryMutationResponse

	{

		dst := &retval.PublishGallery
		src := v.PublishGallery
		if src != nil {
			var err error
			*dst, err = __marshalpublishGalleryMutationPublishGalleryPublishGalleryPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal publishGalleryMutationResponse.PublishGallery: %w", err)
			}
		}
	}
	return &retval, nil
}

// removeUserWalletsMutationRemoveUserWalletsErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type removeUserWalletsMutationRemoveUserWalletsErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns removeUserWalletsMutationRemoveUserWalletsErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns removeUserWalletsMutationRemoveUserWalletsErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsErrInvalidInput) GetMessage() string {
	return v.Message
}

// removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized) GetMessage() string {
	return v.Message
}

// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload includes the requested fields of the GraphQL type RemoveUserWalletsPayload.
type removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload struct {
	Typename *string                                                                   `json:"__typename"`
	Viewer   *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewer `json:"viewer"`
}

// GetTypename returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload.Typename, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload) GetTypename() *string {
	return v.Typename
}

// GetViewer returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload.Viewer, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload) GetViewer() *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewer {
	return v.Viewer
}

// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError includes the requested fields of the GraphQL interface RemoveUserWalletsPayloadOrError.
//
// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError is implemented by the following types:
// removeUserWalletsMutationRemoveUserWalletsErrInvalidInput
// removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized
// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload
type removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError interface {
	implementsGraphQLInterfaceremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *removeUserWalletsMutationRemoveUserWalletsErrInvalidInput) implementsGraphQLInterfaceremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError() {
}
func (v *removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized) implementsGraphQLInterfaceremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError() {
}
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload) implementsGraphQLInterfaceremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError() {
}

func __unmarshalremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError(b []byte, v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(removeUserWalletsMutationRemoveUserWalletsErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "RemoveUserWalletsPayload":
		*v = new(removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing RemoveUserWalletsPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError(v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *removeUserWalletsMutationRemoveUserWalletsErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*removeUserWalletsMutationRemoveUserWalletsErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*removeUserWalletsMutationRemoveUserWalletsErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload:
		typename = "RemoveUserWalletsPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError: "%T"`, v)
	}
}

// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewer includes the requested fields of the GraphQL type Viewer.
type removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewer struct {
	User *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUser `json:"user"`
}

// GetUser returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewer.User, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewer) GetUser() *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUser {
	return v.User
}

// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUser struct {
	Wallets []*removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet `json:"wallets"`
}

// GetWallets returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUser.Wallets, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUser) GetWallets() []*removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet {
	return v.Wallets
}

// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet includes the requested fields of the GraphQL type Wallet.
type removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet struct {
	Dbid         persist.DBID                                                                                                      `json:"dbid"`
	ChainAddress *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress `json:"chainAddress"`
}

// GetDbid returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet.Dbid, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet) GetDbid() persist.DBID {
	return v.Dbid
}

// GetChainAddress returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet.ChainAddress, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWallet) GetChainAddress() *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress {
	return v.ChainAddress
}

// removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress includes the requested fields of the GraphQL type ChainAddress.
type removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress struct {
	Address *string `json:"address"`
	Chain   *Chain  `json:"chain"`
}

// GetAddress returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress.Address, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress) GetAddress() *string {
	return v.Address
}

// GetChain returns removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress.Chain, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadViewerUserGalleryUserWalletsWalletChainAddress) GetChain() *Chain {
	return v.Chain
}

// removeUserWalletsMutationResponse is returned by removeUserWalletsMutation on success.
type removeUserWalletsMutationResponse struct {
	RemoveUserWallets *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError `json:"-"`
}

// GetRemoveUserWallets returns removeUserWalletsMutationResponse.RemoveUserWallets, and is useful for accessing the field via an interface.
func (v *removeUserWalletsMutationResponse) GetRemoveUserWallets() *removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError {
	return v.RemoveUserWallets
}

func (v *removeUserWalletsMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*removeUserWalletsMutationResponse
		RemoveUserWallets json.RawMessage `json:"removeUserWallets"`
		graphql.NoUnmarshalJSON
	}
	firstPass.removeUserWalletsMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.RemoveUserWallets
		src := firstPass.RemoveUserWallets
		if len(src) != 0 && string(src) != "null" {
			*dst = new(removeUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError)
			err = __unmarshalremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal removeUserWalletsMutationResponse.RemoveUserWallets: %w", err)
			}
		}
	}
	return nil
}

type __premarshalremoveUserWalletsMutationResponse struct {
	RemoveUserWallets json.RawMessage `json:"removeUserWallets"`
}

func (v *removeUserWalletsMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *removeUserWalletsMutationResponse) __premarshalJSON() (*__premarshalremoveUserWalletsMutationResponse, error) {
	var retval __premarshalremoveUserWalletsMutationResponse

	{

		dst := &retval.RemoveUserWallets
		src := v.RemoveUserWallets
		if src != nil {
			var err error
			*dst, err = __marshalremoveUserWalletsMutationRemoveUserWalletsRemoveUserWalletsPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal removeUserWalletsMutationResponse.RemoveUserWallets: %w", err)
			}
		}
	}
	return &retval, nil
}

// syncTokensMutationResponse is returned by syncTokensMutation on success.
type syncTokensMutationResponse struct {
	SyncTokens *syncTokensMutationSyncTokensSyncTokensPayloadOrError `json:"-"`
}

// GetSyncTokens returns syncTokensMutationResponse.SyncTokens, and is useful for accessing the field via an interface.
func (v *syncTokensMutationResponse) GetSyncTokens() *syncTokensMutationSyncTokensSyncTokensPayloadOrError {
	return v.SyncTokens
}

func (v *syncTokensMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*syncTokensMutationResponse
		SyncTokens json.RawMessage `json:"syncTokens"`
		graphql.NoUnmarshalJSON
	}
	firstPass.syncTokensMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.SyncTokens
		src := firstPass.SyncTokens
		if len(src) != 0 && string(src) != "null" {
			*dst = new(syncTokensMutationSyncTokensSyncTokensPayloadOrError)
			err = __unmarshalsyncTokensMutationSyncTokensSyncTokensPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal syncTokensMutationResponse.SyncTokens: %w", err)
			}
		}
	}
	return nil
}

type __premarshalsyncTokensMutationResponse struct {
	SyncTokens json.RawMessage `json:"syncTokens"`
}

func (v *syncTokensMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *syncTokensMutationResponse) __premarshalJSON() (*__premarshalsyncTokensMutationResponse, error) {
	var retval __premarshalsyncTokensMutationResponse

	{

		dst := &retval.SyncTokens
		src := v.SyncTokens
		if src != nil {
			var err error
			*dst, err = __marshalsyncTokensMutationSyncTokensSyncTokensPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal syncTokensMutationResponse.SyncTokens: %w", err)
			}
		}
	}
	return &retval, nil
}

// syncTokensMutationSyncTokensErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type syncTokensMutationSyncTokensErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns syncTokensMutationSyncTokensErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns syncTokensMutationSyncTokensErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensErrNotAuthorized) GetMessage() string { return v.Message }

// syncTokensMutationSyncTokensErrSyncFailed includes the requested fields of the GraphQL type ErrSyncFailed.
type syncTokensMutationSyncTokensErrSyncFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns syncTokensMutationSyncTokensErrSyncFailed.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensErrSyncFailed) GetTypename() *string { return v.Typename }

// GetMessage returns syncTokensMutationSyncTokensErrSyncFailed.Message, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensErrSyncFailed) GetMessage() string { return v.Message }

// syncTokensMutationSyncTokensSyncTokensPayload includes the requested fields of the GraphQL type SyncTokensPayload.
type syncTokensMutationSyncTokensSyncTokensPayload struct {
	Typename *string                                              `json:"__typename"`
	Viewer   *syncTokensMutationSyncTokensSyncTokensPayloadViewer `json:"viewer"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayload.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayload) GetTypename() *string { return v.Typename }

// GetViewer returns syncTokensMutationSyncTokensSyncTokensPayload.Viewer, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayload) GetViewer() *syncTokensMutationSyncTokensSyncTokensPayloadViewer {
	return v.Viewer
}

// syncTokensMutationSyncTokensSyncTokensPayloadOrError includes the requested fields of the GraphQL interface SyncTokensPayloadOrError.
//
// syncTokensMutationSyncTokensSyncTokensPayloadOrError is implemented by the following types:
// syncTokensMutationSyncTokensErrNotAuthorized
// syncTokensMutationSyncTokensErrSyncFailed
// syncTokensMutationSyncTokensSyncTokensPayload
type syncTokensMutationSyncTokensSyncTokensPayloadOrError interface {
	implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *syncTokensMutationSyncTokensErrNotAuthorized) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadOrError() {
}
func (v *syncTokensMutationSyncTokensErrSyncFailed) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadOrError() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayload) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadOrError() {
}

func __unmarshalsyncTokensMutationSyncTokensSyncTokensPayloadOrError(b []byte, v *syncTokensMutationSyncTokensSyncTokensPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrNotAuthorized":
		*v = new(syncTokensMutationSyncTokensErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "ErrSyncFailed":
		*v = new(syncTokensMutationSyncTokensErrSyncFailed)
		return json.Unmarshal(b, *v)
	case "SyncTokensPayload":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing SyncTokensPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for syncTokensMutationSyncTokensSyncTokensPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalsyncTokensMutationSyncTokensSyncTokensPayloadOrError(v *syncTokensMutationSyncTokensSyncTokensPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *syncTokensMutationSyncTokensErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensErrSyncFailed:
		typename = "ErrSyncFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensErrSyncFailed
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayload:
		typename = "SyncTokensPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for syncTokensMutationSyncTokensSyncTokensPayloadOrError: "%T"`, v)
	}
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewer includes the requested fields of the GraphQL type Viewer.
type syncTokensMutationSyncTokensSyncTokensPayloadViewer struct {
	User *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUser `json:"user"`
}

// GetUser returns syncTokensMutationSyncTokensSyncTokensPayloadViewer.User, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewer) GetUser() *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUser {
	return v.User
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUser struct {
	Tokens []*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken `json:"tokens"`
}

// GetTokens returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUser.Tokens, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUser) GetTokens() []*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken {
	return v.Tokens
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken includes the requested fields of the GraphQL type Token.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken struct {
	Chain   *Chain                                                                                          `json:"chain"`
	Dbid    persist.DBID                                                                                    `json:"dbid"`
	TokenId *string                                                                                         `json:"tokenId"`
	Media   *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype `json:"-"`
}

// GetChain returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken.Chain, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) GetChain() *Chain {
	return v.Chain
}

// GetDbid returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken.Dbid, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) GetDbid() persist.DBID {
	return v.Dbid
}

// GetTokenId returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken.TokenId, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) GetTokenId() *string {
	return v.TokenId
}

// GetMedia returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken.Media, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) GetMedia() *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype {
	return v.Media
}

func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken
		Media json.RawMessage `json:"media"`
		graphql.NoUnmarshalJSON
	}
	firstPass.syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Media
		src := firstPass.Media
		if len(src) != 0 && string(src) != "null" {
			*dst = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype)
			err = __unmarshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken.Media: %w", err)
			}
		}
	}
	return nil
}

type __premarshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken struct {
	Chain *Chain `json:"chain"`

	Dbid persist.DBID `json:"dbid"`

	TokenId *string `json:"tokenId"`

	Media json.RawMessage `json:"media"`
}

func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken) __premarshalJSON() (*__premarshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken, error) {
	var retval __premarshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken

	retval.Chain = v.Chain
	retval.Dbid = v.Dbid
	retval.TokenId = v.TokenId
	{

		dst := &retval.Media
		src := v.Media
		if src != nil {
			var err error
			*dst, err = __marshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensToken.Media: %w", err)
			}
		}
	}
	return &retval, nil
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia includes the requested fields of the GraphQL type AudioMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia includes the requested fields of the GraphQL type GIFMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia includes the requested fields of the GraphQL type GltfMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia includes the requested fields of the GraphQL type HtmlMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia includes the requested fields of the GraphQL type ImageMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia includes the requested fields of the GraphQL type InvalidMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia includes the requested fields of the GraphQL type JsonMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype includes the requested fields of the GraphQL interface MediaSubtype.
//
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype is implemented by the following types:
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia
// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype interface {
	implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia) implementsGraphQLInterfacesyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype() {
}

func __unmarshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype(b []byte, v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "AudioMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia)
		return json.Unmarshal(b, *v)
	case "GIFMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia)
		return json.Unmarshal(b, *v)
	case "GltfMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia)
		return json.Unmarshal(b, *v)
	case "HtmlMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia)
		return json.Unmarshal(b, *v)
	case "ImageMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia)
		return json.Unmarshal(b, *v)
	case "InvalidMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia)
		return json.Unmarshal(b, *v)
	case "JsonMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia)
		return json.Unmarshal(b, *v)
	case "PdfMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia)
		return json.Unmarshal(b, *v)
	case "SyncingMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia)
		return json.Unmarshal(b, *v)
	case "TextMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia)
		return json.Unmarshal(b, *v)
	case "UnknownMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia)
		return json.Unmarshal(b, *v)
	case "VideoMedia":
		*v = new(syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing MediaSubtype.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype: "%v"`, tn.TypeName)
	}
}

func __marshalsyncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype(v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia:
		typename = "AudioMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaAudioMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia:
		typename = "GIFMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGIFMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia:
		typename = "GltfMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaGltfMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia:
		typename = "HtmlMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaHtmlMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia:
		typename = "ImageMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaImageMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia:
		typename = "InvalidMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaInvalidMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia:
		typename = "JsonMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaJsonMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia:
		typename = "PdfMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia:
		typename = "SyncingMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia:
		typename = "TextMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia:
		typename = "UnknownMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia
		}{typename, v}
		return json.Marshal(result)
	case *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia:
		typename = "VideoMedia"

		result := struct {
			TypeName string `json:"__typename"`
			*syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaMediaSubtype: "%T"`, v)
	}
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia includes the requested fields of the GraphQL type PdfMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaPdfMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia includes the requested fields of the GraphQL type SyncingMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaSyncingMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia includes the requested fields of the GraphQL type TextMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaTextMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia includes the requested fields of the GraphQL type UnknownMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaUnknownMedia) GetMediaType() *string {
	return v.MediaType
}

// syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia includes the requested fields of the GraphQL type VideoMedia.
type syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia struct {
	Typename  *string `json:"__typename"`
	MediaURL  *string `json:"mediaURL"`
	MediaType *string `json:"mediaType"`
}

// GetTypename returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia.Typename, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia) GetTypename() *string {
	return v.Typename
}

// GetMediaURL returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia.MediaURL, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia) GetMediaURL() *string {
	return v.MediaURL
}

// GetMediaType returns syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia.MediaType, and is useful for accessing the field via an interface.
func (v *syncTokensMutationSyncTokensSyncTokensPayloadViewerUserGalleryUserTokensTokenMediaVideoMedia) GetMediaType() *string {
	return v.MediaType
}

// tokenByIdQueryResponse is returned by tokenByIdQuery on success.
type tokenByIdQueryResponse struct {
	TokenById *tokenByIdQueryTokenByIdTokenByIdOrError `json:"-"`
}

// GetTokenById returns tokenByIdQueryResponse.TokenById, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryResponse) GetTokenById() *tokenByIdQueryTokenByIdTokenByIdOrError {
	return v.TokenById
}

func (v *tokenByIdQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*tokenByIdQueryResponse
		TokenById json.RawMessage `json:"tokenById"`
		graphql.NoUnmarshalJSON
	}
	firstPass.tokenByIdQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.TokenById
		src := firstPass.TokenById
		if len(src) != 0 && string(src) != "null" {
			*dst = new(tokenByIdQueryTokenByIdTokenByIdOrError)
			err = __unmarshaltokenByIdQueryTokenByIdTokenByIdOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal tokenByIdQueryResponse.TokenById: %w", err)
			}
		}
	}
	return nil
}

type __premarshaltokenByIdQueryResponse struct {
	TokenById json.RawMessage `json:"tokenById"`
}

func (v *tokenByIdQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *tokenByIdQueryResponse) __premarshalJSON() (*__premarshaltokenByIdQueryResponse, error) {
	var retval __premarshaltokenByIdQueryResponse

	{

		dst := &retval.TokenById
		src := v.TokenById
		if src != nil {
			var err error
			*dst, err = __marshaltokenByIdQueryTokenByIdTokenByIdOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal tokenByIdQueryResponse.TokenById: %w", err)
			}
		}
	}
	return &retval, nil
}

// tokenByIdQueryTokenByIdErrTokenNotFound includes the requested fields of the GraphQL type ErrTokenNotFound.
type tokenByIdQueryTokenByIdErrTokenNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns tokenByIdQueryTokenByIdErrTokenNotFound.Typename, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdErrTokenNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns tokenByIdQueryTokenByIdErrTokenNotFound.Message, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdErrTokenNotFound) GetMessage() string { return v.Message }

// tokenByIdQueryTokenByIdToken includes the requested fields of the GraphQL type Token.
type tokenByIdQueryTokenByIdToken struct {
	Typename *string                               `json:"__typename"`
	Dbid     persist.DBID                          `json:"dbid"`
	Contract *tokenByIdQueryTokenByIdTokenContract `json:"contract"`
}

// GetTypename returns tokenByIdQueryTokenByIdToken.Typename, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdToken) GetTypename() *string { return v.Typename }

// GetDbid returns tokenByIdQueryTokenByIdToken.Dbid, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdToken) GetDbid() persist.DBID { return v.Dbid }

// GetContract returns tokenByIdQueryTokenByIdToken.Contract, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdToken) GetContract() *tokenByIdQueryTokenByIdTokenContract {
	return v.Contract
}

// tokenByIdQueryTokenByIdTokenByIdOrError includes the requested fields of the GraphQL interface TokenByIdOrError.
//
// tokenByIdQueryTokenByIdTokenByIdOrError is implemented by the following types:
// tokenByIdQueryTokenByIdErrTokenNotFound
// tokenByIdQueryTokenByIdToken
type tokenByIdQueryTokenByIdTokenByIdOrError interface {
	implementsGraphQLInterfacetokenByIdQueryTokenByIdTokenByIdOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *tokenByIdQueryTokenByIdErrTokenNotFound) implementsGraphQLInterfacetokenByIdQueryTokenByIdTokenByIdOrError() {
}
func (v *tokenByIdQueryTokenByIdToken) implementsGraphQLInterfacetokenByIdQueryTokenByIdTokenByIdOrError() {
}

func __unmarshaltokenByIdQueryTokenByIdTokenByIdOrError(b []byte, v *tokenByIdQueryTokenByIdTokenByIdOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrTokenNotFound":
		*v = new(tokenByIdQueryTokenByIdErrTokenNotFound)
		return json.Unmarshal(b, *v)
	case "Token":
		*v = new(tokenByIdQueryTokenByIdToken)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing TokenByIdOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for tokenByIdQueryTokenByIdTokenByIdOrError: "%v"`, tn.TypeName)
	}
}

func __marshaltokenByIdQueryTokenByIdTokenByIdOrError(v *tokenByIdQueryTokenByIdTokenByIdOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *tokenByIdQueryTokenByIdErrTokenNotFound:
		typename = "ErrTokenNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*tokenByIdQueryTokenByIdErrTokenNotFound
		}{typename, v}
		return json.Marshal(result)
	case *tokenByIdQueryTokenByIdToken:
		typename = "Token"

		result := struct {
			TypeName string `json:"__typename"`
			*tokenByIdQueryTokenByIdToken
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for tokenByIdQueryTokenByIdTokenByIdOrError: "%T"`, v)
	}
}

// tokenByIdQueryTokenByIdTokenContract includes the requested fields of the GraphQL type Contract.
type tokenByIdQueryTokenByIdTokenContract struct {
	Dbid            persist.DBID                                                     `json:"dbid"`
	ContractAddress *tokenByIdQueryTokenByIdTokenContractContractAddressChainAddress `json:"contractAddress"`
}

// GetDbid returns tokenByIdQueryTokenByIdTokenContract.Dbid, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdTokenContract) GetDbid() persist.DBID { return v.Dbid }

// GetContractAddress returns tokenByIdQueryTokenByIdTokenContract.ContractAddress, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdTokenContract) GetContractAddress() *tokenByIdQueryTokenByIdTokenContractContractAddressChainAddress {
	return v.ContractAddress
}

// tokenByIdQueryTokenByIdTokenContractContractAddressChainAddress includes the requested fields of the GraphQL type ChainAddress.
type tokenByIdQueryTokenByIdTokenContractContractAddressChainAddress struct {
	Address *string `json:"address"`
}

// GetAddress returns tokenByIdQueryTokenByIdTokenContractContractAddressChainAddress.Address, and is useful for accessing the field via an interface.
func (v *tokenByIdQueryTokenByIdTokenContractContractAddressChainAddress) GetAddress() *string {
	return v.Address
}

// trendingFeedQueryResponse is returned by trendingFeedQuery on success.
type trendingFeedQueryResponse struct {
	TrendingFeed *trendingFeedQueryTrendingFeedFeedConnection `json:"trendingFeed"`
}

// GetTrendingFeed returns trendingFeedQueryResponse.TrendingFeed, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryResponse) GetTrendingFeed() *trendingFeedQueryTrendingFeedFeedConnection {
	return v.TrendingFeed
}

// trendingFeedQueryTrendingFeedFeedConnection includes the requested fields of the GraphQL type FeedConnection.
type trendingFeedQueryTrendingFeedFeedConnection struct {
	Edges []*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge `json:"edges"`
}

// GetEdges returns trendingFeedQueryTrendingFeedFeedConnection.Edges, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnection) GetEdges() []*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge {
	return v.Edges
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge includes the requested fields of the GraphQL type FeedEdge.
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge struct {
	Node *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError `json:"-"`
}

// GetNode returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge.Node, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge) GetNode() *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError {
	return v.Node
}

func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			*dst = new(trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError)
			err = __unmarshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge struct {
	Node json.RawMessage `json:"node"`
}

func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge) __premarshalJSON() (*__premarshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge, error) {
	var retval __premarshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge

	{

		dst := &retval.Node
		src := v.Node
		if src != nil {
			var err error
			*dst, err = __marshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdge.Node: %w", err)
			}
		}
	}
	return &retval, nil
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound includes the requested fields of the GraphQL type ErrFeedEventNotFound.
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound.Typename, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound.Message, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) GetMessage() string {
	return v.Message
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound includes the requested fields of the GraphQL type ErrPostNotFound.
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound.Typename, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound.Message, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) GetMessage() string {
	return v.Message
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction includes the requested fields of the GraphQL type ErrUnknownAction.
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction.Typename, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) GetTypename() *string {
	return v.Typename
}

// GetMessage returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction.Message, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) GetMessage() string {
	return v.Message
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent includes the requested fields of the GraphQL type FeedEvent.
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent struct {
	Typename *string      `json:"__typename"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Typename, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetTypename() *string {
	return v.Typename
}

// GetDbid returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Dbid, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetDbid() persist.DBID {
	return v.Dbid
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError includes the requested fields of the GraphQL interface FeedEventOrError.
//
// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError is implemented by the following types:
// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound
// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound
// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction
// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost
// The GraphQL type's documentation follows.
//
// Can return posts as well
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError interface {
	implementsGraphQLInterfacetrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) implementsGraphQLInterfacetrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) implementsGraphQLInterfacetrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) implementsGraphQLInterfacetrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) implementsGraphQLInterfacetrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost) implementsGraphQLInterfacetrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}

func __unmarshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(b []byte, v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrFeedEventNotFound":
		*v = new(trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound)
		return json.Unmarshal(b, *v)
	case "ErrPostNotFound":
		*v = new(trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound)
		return json.Unmarshal(b, *v)
	case "ErrUnknownAction":
		*v = new(trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction)
		return json.Unmarshal(b, *v)
	case "FeedEvent":
		*v = new(trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent)
		return json.Unmarshal(b, *v)
	case "Post":
		*v = new(trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing FeedEventOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError: "%v"`, tn.TypeName)
	}
}

func __marshaltrendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound:
		typename = "ErrFeedEventNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound
		}{typename, v}
		return json.Marshal(result)
	case *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound:
		typename = "ErrPostNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound
		}{typename, v}
		return json.Marshal(result)
	case *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction:
		typename = "ErrUnknownAction"

		result := struct {
			TypeName string `json:"__typename"`
			*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction
		}{typename, v}
		return json.Marshal(result)
	case *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent:
		typename = "FeedEvent"

		result := struct {
			TypeName string `json:"__typename"`
			*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
		}{typename, v}
		return json.Marshal(result)
	case *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost:
		typename = "Post"

		result := struct {
			TypeName string `json:"__typename"`
			*trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError: "%T"`, v)
	}
}

// trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost includes the requested fields of the GraphQL type Post.
type trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost struct {
	Typename *string      `json:"__typename"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost.Typename, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost) GetTypename() *string {
	return v.Typename
}

// GetDbid returns trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost.Dbid, and is useful for accessing the field via an interface.
func (v *trendingFeedQueryTrendingFeedFeedConnectionEdgesFeedEdgeNodePost) GetDbid() persist.DBID {
	return v.Dbid
}

// trendingUsersQueryResponse is returned by trendingUsersQuery on success.
type trendingUsersQueryResponse struct {
	TrendingUsers *trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError `json:"-"`
}

// GetTrendingUsers returns trendingUsersQueryResponse.TrendingUsers, and is useful for accessing the field via an interface.
func (v *trendingUsersQueryResponse) GetTrendingUsers() *trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError {
	return v.TrendingUsers
}

func (v *trendingUsersQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*trendingUsersQueryResponse
		TrendingUsers json.RawMessage `json:"trendingUsers"`
		graphql.NoUnmarshalJSON
	}
	firstPass.trendingUsersQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.TrendingUsers
		src := firstPass.TrendingUsers
		if len(src) != 0 && string(src) != "null" {
			*dst = new(trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError)
			err = __unmarshaltrendingUsersQueryTrendingUsersTrendingUsersPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal trendingUsersQueryResponse.TrendingUsers: %w", err)
			}
		}
	}
	return nil
}

type __premarshaltrendingUsersQueryResponse struct {
	TrendingUsers json.RawMessage `json:"trendingUsers"`
}

func (v *trendingUsersQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *trendingUsersQueryResponse) __premarshalJSON() (*__premarshaltrendingUsersQueryResponse, error) {
	var retval __premarshaltrendingUsersQueryResponse

	{

		dst := &retval.TrendingUsers
		src := v.TrendingUsers
		if src != nil {
			var err error
			*dst, err = __marshaltrendingUsersQueryTrendingUsersTrendingUsersPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal trendingUsersQueryResponse.TrendingUsers: %w", err)
			}
		}
	}
	return &retval, nil
}

// trendingUsersQueryTrendingUsersTrendingUsersPayload includes the requested fields of the GraphQL type TrendingUsersPayload.
type trendingUsersQueryTrendingUsersTrendingUsersPayload struct {
	Typename *string                                                               `json:"__typename"`
	Users    []trendingUsersQueryTrendingUsersTrendingUsersPayloadUsersGalleryUser `json:"users"`
}

// GetTypename returns trendingUsersQueryTrendingUsersTrendingUsersPayload.Typename, and is useful for accessing the field via an interface.
func (v *trendingUsersQueryTrendingUsersTrendingUsersPayload) GetTypename() *string {
	return v.Typename
}

// GetUsers returns trendingUsersQueryTrendingUsersTrendingUsersPayload.Users, and is useful for accessing the field via an interface.
func (v *trendingUsersQueryTrendingUsersTrendingUsersPayload) GetUsers() []trendingUsersQueryTrendingUsersTrendingUsersPayloadUsersGalleryUser {
	return v.Users
}

// trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError includes the requested fields of the GraphQL interface TrendingUsersPayloadOrError.
//
// trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError is implemented by the following types:
// trendingUsersQueryTrendingUsersTrendingUsersPayload
type trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError interface {
	implementsGraphQLInterfacetrendingUsersQueryTrendingUsersTrendingUsersPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *trendingUsersQueryTrendingUsersTrendingUsersPayload) implementsGraphQLInterfacetrendingUsersQueryTrendingUsersTrendingUsersPayloadOrError() {
}

func __unmarshaltrendingUsersQueryTrendingUsersTrendingUsersPayloadOrError(b []byte, v *trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "TrendingUsersPayload":
		*v = new(trendingUsersQueryTrendingUsersTrendingUsersPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing TrendingUsersPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshaltrendingUsersQueryTrendingUsersTrendingUsersPayloadOrError(v *trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *trendingUsersQueryTrendingUsersTrendingUsersPayload:
		typename = "TrendingUsersPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*trendingUsersQueryTrendingUsersTrendingUsersPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for trendingUsersQueryTrendingUsersTrendingUsersPayloadOrError: "%T"`, v)
	}
}

// trendingUsersQueryTrendingUsersTrendingUsersPayloadUsersGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type trendingUsersQueryTrendingUsersTrendingUsersPayloadUsersGalleryUser struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns trendingUsersQueryTrendingUsersTrendingUsersPayloadUsersGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *trendingUsersQueryTrendingUsersTrendingUsersPayloadUsersGalleryUser) GetDbid() persist.DBID {
	return v.Dbid
}

// updateGalleryMutationResponse is returned by updateGalleryMutation on success.
type updateGalleryMutationResponse struct {
	UpdateGallery *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError `json:"-"`
}

// GetUpdateGallery returns updateGalleryMutationResponse.UpdateGallery, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationResponse) GetUpdateGallery() *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError {
	return v.UpdateGallery
}

func (v *updateGalleryMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateGalleryMutationResponse
		UpdateGallery json.RawMessage `json:"updateGallery"`
		graphql.NoUnmarshalJSON
	}
	firstPass.updateGalleryMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UpdateGallery
		src := firstPass.UpdateGallery
		if len(src) != 0 && string(src) != "null" {
			*dst = new(updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError)
			err = __unmarshalupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal updateGalleryMutationResponse.UpdateGallery: %w", err)
			}
		}
	}
	return nil
}

type __premarshalupdateGalleryMutationResponse struct {
	UpdateGallery json.RawMessage `json:"updateGallery"`
}

func (v *updateGalleryMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateGalleryMutationResponse) __premarshalJSON() (*__premarshalupdateGalleryMutationResponse, error) {
	var retval __premarshalupdateGalleryMutationResponse

	{

		dst := &retval.UpdateGallery
		src := v.UpdateGallery
		if src != nil {
			var err error
			*dst, err = __marshalupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal updateGalleryMutationResponse.UpdateGallery: %w", err)
			}
		}
	}
	return &retval, nil
}

// updateGalleryMutationUpdateGalleryErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type updateGalleryMutationUpdateGalleryErrInvalidInput struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns updateGalleryMutationUpdateGalleryErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryErrInvalidInput) GetTypename() *string { return v.Typename }

// updateGalleryMutationUpdateGalleryErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type updateGalleryMutationUpdateGalleryErrNotAuthorized struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns updateGalleryMutationUpdateGalleryErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryErrNotAuthorized) GetTypename() *string { return v.Typename }

// updateGalleryMutationUpdateGalleryUpdateGalleryPayload includes the requested fields of the GraphQL type UpdateGalleryPayload.
type updateGalleryMutationUpdateGalleryUpdateGalleryPayload struct {
	Typename *string                                                        `json:"__typename"`
	Gallery  *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery `json:"gallery"`
}

// GetTypename returns updateGalleryMutationUpdateGalleryUpdateGalleryPayload.Typename, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayload) GetTypename() *string {
	return v.Typename
}

// GetGallery returns updateGalleryMutationUpdateGalleryUpdateGalleryPayload.Gallery, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayload) GetGallery() *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery {
	return v.Gallery
}

// updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery includes the requested fields of the GraphQL type Gallery.
type updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery struct {
	Dbid        persist.DBID                                                                          `json:"dbid"`
	Name        *string                                                                               `json:"name"`
	Description *string                                                                               `json:"description"`
	Collections []*updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection `json:"collections"`
}

// GetDbid returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery.Dbid, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// GetName returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery.Name, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery) GetName() *string {
	return v.Name
}

// GetDescription returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery.Description, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery) GetDescription() *string {
	return v.Description
}

// GetCollections returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery.Collections, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGallery) GetCollections() []*updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection {
	return v.Collections
}

// updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection includes the requested fields of the GraphQL type Collection.
type updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection struct {
	Dbid   persist.DBID                                                                                               `json:"dbid"`
	Name   *string                                                                                                    `json:"name"`
	Tokens []*updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionToken `json:"tokens"`
}

// GetDbid returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection.Dbid, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection) GetDbid() persist.DBID {
	return v.Dbid
}

// GetName returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection.Name, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection) GetName() *string {
	return v.Name
}

// GetTokens returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection.Tokens, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollection) GetTokens() []*updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionToken {
	return v.Tokens
}

// updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionToken includes the requested fields of the GraphQL type CollectionToken.
type updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionToken struct {
	Token *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionTokenToken `json:"token"`
}

// GetToken returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionToken.Token, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionToken) GetToken() *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionTokenToken {
	return v.Token
}

// updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionTokenToken includes the requested fields of the GraphQL type Token.
type updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionTokenToken struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionTokenToken.Dbid, and is useful for accessing the field via an interface.
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadGalleryCollectionsCollectionTokensCollectionTokenToken) GetDbid() persist.DBID {
	return v.Dbid
}

// updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError includes the requested fields of the GraphQL interface UpdateGalleryPayloadOrError.
//
// updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError is implemented by the following types:
// updateGalleryMutationUpdateGalleryErrInvalidInput
// updateGalleryMutationUpdateGalleryErrNotAuthorized
// updateGalleryMutationUpdateGalleryUpdateGalleryPayload
type updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError interface {
	implementsGraphQLInterfaceupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *updateGalleryMutationUpdateGalleryErrInvalidInput) implementsGraphQLInterfaceupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError() {
}
func (v *updateGalleryMutationUpdateGalleryErrNotAuthorized) implementsGraphQLInterfaceupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError() {
}
func (v *updateGalleryMutationUpdateGalleryUpdateGalleryPayload) implementsGraphQLInterfaceupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError() {
}

func __unmarshalupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError(b []byte, v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(updateGalleryMutationUpdateGalleryErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(updateGalleryMutationUpdateGalleryErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "UpdateGalleryPayload":
		*v = new(updateGalleryMutationUpdateGalleryUpdateGalleryPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UpdateGalleryPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalupdateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError(v *updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *updateGalleryMutationUpdateGalleryErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*updateGalleryMutationUpdateGalleryErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *updateGalleryMutationUpdateGalleryErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*updateGalleryMutationUpdateGalleryErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *updateGalleryMutationUpdateGalleryUpdateGalleryPayload:
		typename = "UpdateGalleryPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*updateGalleryMutationUpdateGalleryUpdateGalleryPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for updateGalleryMutationUpdateGalleryUpdateGalleryPayloadOrError: "%T"`, v)
	}
}

// updateSocialAccountDisplayedResponse is returned by updateSocialAccountDisplayed on success.
type updateSocialAccountDisplayedResponse struct {
	UpdateSocialAccountDisplayed *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError `json:"-"`
}

// GetUpdateSocialAccountDisplayed returns updateSocialAccountDisplayedResponse.UpdateSocialAccountDisplayed, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedResponse) GetUpdateSocialAccountDisplayed() *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError {
	return v.UpdateSocialAccountDisplayed
}

func (v *updateSocialAccountDisplayedResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateSocialAccountDisplayedResponse
		UpdateSocialAccountDisplayed json.RawMessage `json:"updateSocialAccountDisplayed"`
		graphql.NoUnmarshalJSON
	}
	firstPass.updateSocialAccountDisplayedResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UpdateSocialAccountDisplayed
		src := firstPass.UpdateSocialAccountDisplayed
		if len(src) != 0 && string(src) != "null" {
			*dst = new(updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError)
			err = __unmarshalupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal updateSocialAccountDisplayedResponse.UpdateSocialAccountDisplayed: %w", err)
			}
		}
	}
	return nil
}

type __premarshalupdateSocialAccountDisplayedResponse struct {
	UpdateSocialAccountDisplayed json.RawMessage `json:"updateSocialAccountDisplayed"`
}

func (v *updateSocialAccountDisplayedResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateSocialAccountDisplayedResponse) __premarshalJSON() (*__premarshalupdateSocialAccountDisplayedResponse, error) {
	var retval __premarshalupdateSocialAccountDisplayedResponse

	{

		dst := &retval.UpdateSocialAccountDisplayed
		src := v.UpdateSocialAccountDisplayed
		if src != nil {
			var err error
			*dst, err = __marshalupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal updateSocialAccountDisplayedResponse.UpdateSocialAccountDisplayed: %w", err)
			}
		}
	}
	return &retval, nil
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput) GetMessage() string {
	return v.Message
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial includes the requested fields of the GraphQL type ErrNeedsToReconnectSocial.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial.Typename, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial) GetTypename() *string {
	return v.Typename
}

// GetMessage returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial.Message, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial) GetMessage() string {
	return v.Message
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized) GetMessage() string {
	return v.Message
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload includes the requested fields of the GraphQL type UpdateSocialAccountDisplayedPayload.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload struct {
	Typename *string                                                                                            `json:"__typename"`
	Viewer   *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewer `json:"viewer"`
}

// GetTypename returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload.Typename, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload) GetTypename() *string {
	return v.Typename
}

// GetViewer returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload.Viewer, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload) GetViewer() *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewer {
	return v.Viewer
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError includes the requested fields of the GraphQL interface UpdateSocialAccountDisplayedPayloadOrError.
//
// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError is implemented by the following types:
// updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput
// updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial
// updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized
// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError interface {
	implementsGraphQLInterfaceupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput) implementsGraphQLInterfaceupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError() {
}
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial) implementsGraphQLInterfaceupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError() {
}
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized) implementsGraphQLInterfaceupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError() {
}
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload) implementsGraphQLInterfaceupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError() {
}

func __unmarshalupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError(b []byte, v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNeedsToReconnectSocial":
		*v = new(updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "UpdateSocialAccountDisplayedPayload":
		*v = new(updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UpdateSocialAccountDisplayedPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalupdateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError(v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial:
		typename = "ErrNeedsToReconnectSocial"

		result := struct {
			TypeName string `json:"__typename"`
			*updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNeedsToReconnectSocial
		}{typename, v}
		return json.Marshal(result)
	case *updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*updateSocialAccountDisplayedUpdateSocialAccountDisplayedErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload:
		typename = "UpdateSocialAccountDisplayedPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadOrError: "%T"`, v)
	}
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewer includes the requested fields of the GraphQL type Viewer.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewer struct {
	SocialAccounts *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccounts `json:"socialAccounts"`
}

// GetSocialAccounts returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewer.SocialAccounts, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewer) GetSocialAccounts() *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccounts {
	return v.SocialAccounts
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccounts includes the requested fields of the GraphQL type SocialAccounts.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccounts struct {
	Twitter *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount `json:"twitter"`
}

// GetTwitter returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccounts.Twitter, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccounts) GetTwitter() *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount {
	return v.Twitter
}

// updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount includes the requested fields of the GraphQL type TwitterSocialAccount.
type updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount struct {
	Username string `json:"username"`
	Display  bool   `json:"display"`
}

// GetUsername returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount.Username, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount) GetUsername() string {
	return v.Username
}

// GetDisplay returns updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount.Display, and is useful for accessing the field via an interface.
func (v *updateSocialAccountDisplayedUpdateSocialAccountDisplayedUpdateSocialAccountDisplayedPayloadViewerSocialAccountsTwitterTwitterSocialAccount) GetDisplay() bool {
	return v.Display
}

// updateUserExperienceResponse is returned by updateUserExperience on success.
type updateUserExperienceResponse struct {
	UpdateUserExperience *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError `json:"-"`
}

// GetUpdateUserExperience returns updateUserExperienceResponse.UpdateUserExperience, and is useful for accessing the field via an interface.
func (v *updateUserExperienceResponse) GetUpdateUserExperience() *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError {
	return v.UpdateUserExperience
}

func (v *updateUserExperienceResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*updateUserExperienceResponse
		UpdateUserExperience json.RawMessage `json:"updateUserExperience"`
		graphql.NoUnmarshalJSON
	}
	firstPass.updateUserExperienceResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UpdateUserExperience
		src := firstPass.UpdateUserExperience
		if len(src) != 0 && string(src) != "null" {
			*dst = new(updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError)
			err = __unmarshalupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal updateUserExperienceResponse.UpdateUserExperience: %w", err)
			}
		}
	}
	return nil
}

type __premarshalupdateUserExperienceResponse struct {
	UpdateUserExperience json.RawMessage `json:"updateUserExperience"`
}

func (v *updateUserExperienceResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *updateUserExperienceResponse) __premarshalJSON() (*__premarshalupdateUserExperienceResponse, error) {
	var retval __premarshalupdateUserExperienceResponse

	{

		dst := &retval.UpdateUserExperience
		src := v.UpdateUserExperience
		if src != nil {
			var err error
			*dst, err = __marshalupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal updateUserExperienceResponse.UpdateUserExperience: %w", err)
			}
		}
	}
	return &retval, nil
}

// updateUserExperienceUpdateUserExperienceErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type updateUserExperienceUpdateUserExperienceErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns updateUserExperienceUpdateUserExperienceErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceErrInvalidInput) GetTypename() *string {
	return v.Typename
}

// GetMessage returns updateUserExperienceUpdateUserExperienceErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceErrInvalidInput) GetMessage() string {
	return v.Message
}

// updateUserExperienceUpdateUserExperienceErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type updateUserExperienceUpdateUserExperienceErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns updateUserExperienceUpdateUserExperienceErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceErrNotAuthorized) GetTypename() *string {
	return v.Typename
}

// GetMessage returns updateUserExperienceUpdateUserExperienceErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceErrNotAuthorized) GetMessage() string {
	return v.Message
}

// updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload includes the requested fields of the GraphQL type UpdateUserExperiencePayload.
type updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload struct {
	Typename *string                                                                    `json:"__typename"`
	Viewer   *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewer `json:"viewer"`
}

// GetTypename returns updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload.Typename, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload) GetTypename() *string {
	return v.Typename
}

// GetViewer returns updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload.Viewer, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload) GetViewer() *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewer {
	return v.Viewer
}

// updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError includes the requested fields of the GraphQL interface UpdateUserExperiencePayloadOrError.
//
// updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError is implemented by the following types:
// updateUserExperienceUpdateUserExperienceErrInvalidInput
// updateUserExperienceUpdateUserExperienceErrNotAuthorized
// updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload
type updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError interface {
	implementsGraphQLInterfaceupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *updateUserExperienceUpdateUserExperienceErrInvalidInput) implementsGraphQLInterfaceupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError() {
}
func (v *updateUserExperienceUpdateUserExperienceErrNotAuthorized) implementsGraphQLInterfaceupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError() {
}
func (v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload) implementsGraphQLInterfaceupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError() {
}

func __unmarshalupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError(b []byte, v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(updateUserExperienceUpdateUserExperienceErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrNotAuthorized":
		*v = new(updateUserExperienceUpdateUserExperienceErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "UpdateUserExperiencePayload":
		*v = new(updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UpdateUserExperiencePayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalupdateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError(v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *updateUserExperienceUpdateUserExperienceErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*updateUserExperienceUpdateUserExperienceErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *updateUserExperienceUpdateUserExperienceErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*updateUserExperienceUpdateUserExperienceErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload:
		typename = "UpdateUserExperiencePayload"

		result := struct {
			TypeName string `json:"__typename"`
			*updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadOrError: "%T"`, v)
	}
}

// updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewer includes the requested fields of the GraphQL type Viewer.
type updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewer struct {
	UserExperiences []updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience `json:"userExperiences"`
}

// GetUserExperiences returns updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewer.UserExperiences, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewer) GetUserExperiences() []updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience {
	return v.UserExperiences
}

// updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience includes the requested fields of the GraphQL type UserExperience.
type updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience struct {
	Type        UserExperienceType `json:"type"`
	Experienced bool               `json:"experienced"`
}

// GetType returns updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience.Type, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience) GetType() UserExperienceType {
	return v.Type
}

// GetExperienced returns updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience.Experienced, and is useful for accessing the field via an interface.
func (v *updateUserExperienceUpdateUserExperienceUpdateUserExperiencePayloadViewerUserExperiencesUserExperience) GetExperienced() bool {
	return v.Experienced
}

// userByAddressQueryResponse is returned by userByAddressQuery on success.
type userByAddressQueryResponse struct {
	UserByAddress *userByAddressQueryUserByAddressUserByAddressOrError `json:"-"`
}

// GetUserByAddress returns userByAddressQueryResponse.UserByAddress, and is useful for accessing the field via an interface.
func (v *userByAddressQueryResponse) GetUserByAddress() *userByAddressQueryUserByAddressUserByAddressOrError {
	return v.UserByAddress
}

func (v *userByAddressQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*userByAddressQueryResponse
		UserByAddress json.RawMessage `json:"userByAddress"`
		graphql.NoUnmarshalJSON
	}
	firstPass.userByAddressQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UserByAddress
		src := firstPass.UserByAddress
		if len(src) != 0 && string(src) != "null" {
			*dst = new(userByAddressQueryUserByAddressUserByAddressOrError)
			err = __unmarshaluserByAddressQueryUserByAddressUserByAddressOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal userByAddressQueryResponse.UserByAddress: %w", err)
			}
		}
	}
	return nil
}

type __premarshaluserByAddressQueryResponse struct {
	UserByAddress json.RawMessage `json:"userByAddress"`
}

func (v *userByAddressQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *userByAddressQueryResponse) __premarshalJSON() (*__premarshaluserByAddressQueryResponse, error) {
	var retval __premarshaluserByAddressQueryResponse

	{

		dst := &retval.UserByAddress
		src := v.UserByAddress
		if src != nil {
			var err error
			*dst, err = __marshaluserByAddressQueryUserByAddressUserByAddressOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal userByAddressQueryResponse.UserByAddress: %w", err)
			}
		}
	}
	return &retval, nil
}

// userByAddressQueryUserByAddressErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type userByAddressQueryUserByAddressErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns userByAddressQueryUserByAddressErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns userByAddressQueryUserByAddressErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressErrInvalidInput) GetMessage() string { return v.Message }

// userByAddressQueryUserByAddressErrUserNotFound includes the requested fields of the GraphQL type ErrUserNotFound.
type userByAddressQueryUserByAddressErrUserNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns userByAddressQueryUserByAddressErrUserNotFound.Typename, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressErrUserNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns userByAddressQueryUserByAddressErrUserNotFound.Message, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressErrUserNotFound) GetMessage() string { return v.Message }

// userByAddressQueryUserByAddressGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type userByAddressQueryUserByAddressGalleryUser struct {
	Typename *string      `json:"__typename"`
	Username *string      `json:"username"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns userByAddressQueryUserByAddressGalleryUser.Typename, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressGalleryUser) GetTypename() *string { return v.Typename }

// GetUsername returns userByAddressQueryUserByAddressGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressGalleryUser) GetUsername() *string { return v.Username }

// GetDbid returns userByAddressQueryUserByAddressGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *userByAddressQueryUserByAddressGalleryUser) GetDbid() persist.DBID { return v.Dbid }

// userByAddressQueryUserByAddressUserByAddressOrError includes the requested fields of the GraphQL interface UserByAddressOrError.
//
// userByAddressQueryUserByAddressUserByAddressOrError is implemented by the following types:
// userByAddressQueryUserByAddressErrInvalidInput
// userByAddressQueryUserByAddressErrUserNotFound
// userByAddressQueryUserByAddressGalleryUser
type userByAddressQueryUserByAddressUserByAddressOrError interface {
	implementsGraphQLInterfaceuserByAddressQueryUserByAddressUserByAddressOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *userByAddressQueryUserByAddressErrInvalidInput) implementsGraphQLInterfaceuserByAddressQueryUserByAddressUserByAddressOrError() {
}
func (v *userByAddressQueryUserByAddressErrUserNotFound) implementsGraphQLInterfaceuserByAddressQueryUserByAddressUserByAddressOrError() {
}
func (v *userByAddressQueryUserByAddressGalleryUser) implementsGraphQLInterfaceuserByAddressQueryUserByAddressUserByAddressOrError() {
}

func __unmarshaluserByAddressQueryUserByAddressUserByAddressOrError(b []byte, v *userByAddressQueryUserByAddressUserByAddressOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(userByAddressQueryUserByAddressErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrUserNotFound":
		*v = new(userByAddressQueryUserByAddressErrUserNotFound)
		return json.Unmarshal(b, *v)
	case "GalleryUser":
		*v = new(userByAddressQueryUserByAddressGalleryUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UserByAddressOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for userByAddressQueryUserByAddressUserByAddressOrError: "%v"`, tn.TypeName)
	}
}

func __marshaluserByAddressQueryUserByAddressUserByAddressOrError(v *userByAddressQueryUserByAddressUserByAddressOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *userByAddressQueryUserByAddressErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*userByAddressQueryUserByAddressErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *userByAddressQueryUserByAddressErrUserNotFound:
		typename = "ErrUserNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*userByAddressQueryUserByAddressErrUserNotFound
		}{typename, v}
		return json.Marshal(result)
	case *userByAddressQueryUserByAddressGalleryUser:
		typename = "GalleryUser"

		result := struct {
			TypeName string `json:"__typename"`
			*userByAddressQueryUserByAddressGalleryUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for userByAddressQueryUserByAddressUserByAddressOrError: "%T"`, v)
	}
}

// userByIdQueryResponse is returned by userByIdQuery on success.
type userByIdQueryResponse struct {
	UserById *userByIdQueryUserByIdUserByIdOrError `json:"-"`
}

// GetUserById returns userByIdQueryResponse.UserById, and is useful for accessing the field via an interface.
func (v *userByIdQueryResponse) GetUserById() *userByIdQueryUserByIdUserByIdOrError {
	return v.UserById
}

func (v *userByIdQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*userByIdQueryResponse
		UserById json.RawMessage `json:"userById"`
		graphql.NoUnmarshalJSON
	}
	firstPass.userByIdQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UserById
		src := firstPass.UserById
		if len(src) != 0 && string(src) != "null" {
			*dst = new(userByIdQueryUserByIdUserByIdOrError)
			err = __unmarshaluserByIdQueryUserByIdUserByIdOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal userByIdQueryResponse.UserById: %w", err)
			}
		}
	}
	return nil
}

type __premarshaluserByIdQueryResponse struct {
	UserById json.RawMessage `json:"userById"`
}

func (v *userByIdQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *userByIdQueryResponse) __premarshalJSON() (*__premarshaluserByIdQueryResponse, error) {
	var retval __premarshaluserByIdQueryResponse

	{

		dst := &retval.UserById
		src := v.UserById
		if src != nil {
			var err error
			*dst, err = __marshaluserByIdQueryUserByIdUserByIdOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal userByIdQueryResponse.UserById: %w", err)
			}
		}
	}
	return &retval, nil
}

// userByIdQueryUserByIdErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type userByIdQueryUserByIdErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns userByIdQueryUserByIdErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns userByIdQueryUserByIdErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdErrInvalidInput) GetMessage() string { return v.Message }

// userByIdQueryUserByIdErrUserNotFound includes the requested fields of the GraphQL type ErrUserNotFound.
type userByIdQueryUserByIdErrUserNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns userByIdQueryUserByIdErrUserNotFound.Typename, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdErrUserNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns userByIdQueryUserByIdErrUserNotFound.Message, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdErrUserNotFound) GetMessage() string { return v.Message }

// userByIdQueryUserByIdGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type userByIdQueryUserByIdGalleryUser struct {
	Typename       *string                                         `json:"__typename"`
	Username       *string                                         `json:"username"`
	Dbid           persist.DBID                                    `json:"dbid"`
	SocialAccounts *userByIdQueryUserByIdGalleryUserSocialAccounts `json:"socialAccounts"`
}

// GetTypename returns userByIdQueryUserByIdGalleryUser.Typename, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdGalleryUser) GetTypename() *string { return v.Typename }

// GetUsername returns userByIdQueryUserByIdGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdGalleryUser) GetUsername() *string { return v.Username }

// GetDbid returns userByIdQueryUserByIdGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdGalleryUser) GetDbid() persist.DBID { return v.Dbid }

// GetSocialAccounts returns userByIdQueryUserByIdGalleryUser.SocialAccounts, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdGalleryUser) GetSocialAccounts() *userByIdQueryUserByIdGalleryUserSocialAccounts {
	return v.SocialAccounts
}

// userByIdQueryUserByIdGalleryUserSocialAccounts includes the requested fields of the GraphQL type SocialAccounts.
type userByIdQueryUserByIdGalleryUserSocialAccounts struct {
	Twitter *userByIdQueryUserByIdGalleryUserSocialAccountsTwitterTwitterSocialAccount `json:"twitter"`
}

// GetTwitter returns userByIdQueryUserByIdGalleryUserSocialAccounts.Twitter, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdGalleryUserSocialAccounts) GetTwitter() *userByIdQueryUserByIdGalleryUserSocialAccountsTwitterTwitterSocialAccount {
	return v.Twitter
}

// userByIdQueryUserByIdGalleryUserSocialAccountsTwitterTwitterSocialAccount includes the requested fields of the GraphQL type TwitterSocialAccount.
type userByIdQueryUserByIdGalleryUserSocialAccountsTwitterTwitterSocialAccount struct {
	Username string `json:"username"`
}

// GetUsername returns userByIdQueryUserByIdGalleryUserSocialAccountsTwitterTwitterSocialAccount.Username, and is useful for accessing the field via an interface.
func (v *userByIdQueryUserByIdGalleryUserSocialAccountsTwitterTwitterSocialAccount) GetUsername() string {
	return v.Username
}

// userByIdQueryUserByIdUserByIdOrError includes the requested fields of the GraphQL interface UserByIdOrError.
//
// userByIdQueryUserByIdUserByIdOrError is implemented by the following types:
// userByIdQueryUserByIdErrInvalidInput
// userByIdQueryUserByIdErrUserNotFound
// userByIdQueryUserByIdGalleryUser
type userByIdQueryUserByIdUserByIdOrError interface {
	implementsGraphQLInterfaceuserByIdQueryUserByIdUserByIdOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *userByIdQueryUserByIdErrInvalidInput) implementsGraphQLInterfaceuserByIdQueryUserByIdUserByIdOrError() {
}
func (v *userByIdQueryUserByIdErrUserNotFound) implementsGraphQLInterfaceuserByIdQueryUserByIdUserByIdOrError() {
}
func (v *userByIdQueryUserByIdGalleryUser) implementsGraphQLInterfaceuserByIdQueryUserByIdUserByIdOrError() {
}

func __unmarshaluserByIdQueryUserByIdUserByIdOrError(b []byte, v *userByIdQueryUserByIdUserByIdOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(userByIdQueryUserByIdErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrUserNotFound":
		*v = new(userByIdQueryUserByIdErrUserNotFound)
		return json.Unmarshal(b, *v)
	case "GalleryUser":
		*v = new(userByIdQueryUserByIdGalleryUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UserByIdOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for userByIdQueryUserByIdUserByIdOrError: "%v"`, tn.TypeName)
	}
}

func __marshaluserByIdQueryUserByIdUserByIdOrError(v *userByIdQueryUserByIdUserByIdOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *userByIdQueryUserByIdErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*userByIdQueryUserByIdErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *userByIdQueryUserByIdErrUserNotFound:
		typename = "ErrUserNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*userByIdQueryUserByIdErrUserNotFound
		}{typename, v}
		return json.Marshal(result)
	case *userByIdQueryUserByIdGalleryUser:
		typename = "GalleryUser"

		result := struct {
			TypeName string `json:"__typename"`
			*userByIdQueryUserByIdGalleryUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for userByIdQueryUserByIdUserByIdOrError: "%T"`, v)
	}
}

// userByUsernameQueryResponse is returned by userByUsernameQuery on success.
type userByUsernameQueryResponse struct {
	UserByUsername *userByUsernameQueryUserByUsernameUserByUsernameOrError `json:"-"`
}

// GetUserByUsername returns userByUsernameQueryResponse.UserByUsername, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryResponse) GetUserByUsername() *userByUsernameQueryUserByUsernameUserByUsernameOrError {
	return v.UserByUsername
}

func (v *userByUsernameQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*userByUsernameQueryResponse
		UserByUsername json.RawMessage `json:"userByUsername"`
		graphql.NoUnmarshalJSON
	}
	firstPass.userByUsernameQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.UserByUsername
		src := firstPass.UserByUsername
		if len(src) != 0 && string(src) != "null" {
			*dst = new(userByUsernameQueryUserByUsernameUserByUsernameOrError)
			err = __unmarshaluserByUsernameQueryUserByUsernameUserByUsernameOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal userByUsernameQueryResponse.UserByUsername: %w", err)
			}
		}
	}
	return nil
}

type __premarshaluserByUsernameQueryResponse struct {
	UserByUsername json.RawMessage `json:"userByUsername"`
}

func (v *userByUsernameQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *userByUsernameQueryResponse) __premarshalJSON() (*__premarshaluserByUsernameQueryResponse, error) {
	var retval __premarshaluserByUsernameQueryResponse

	{

		dst := &retval.UserByUsername
		src := v.UserByUsername
		if src != nil {
			var err error
			*dst, err = __marshaluserByUsernameQueryUserByUsernameUserByUsernameOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal userByUsernameQueryResponse.UserByUsername: %w", err)
			}
		}
	}
	return &retval, nil
}

// userByUsernameQueryUserByUsernameErrInvalidInput includes the requested fields of the GraphQL type ErrInvalidInput.
type userByUsernameQueryUserByUsernameErrInvalidInput struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns userByUsernameQueryUserByUsernameErrInvalidInput.Typename, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameErrInvalidInput) GetTypename() *string { return v.Typename }

// GetMessage returns userByUsernameQueryUserByUsernameErrInvalidInput.Message, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameErrInvalidInput) GetMessage() string { return v.Message }

// userByUsernameQueryUserByUsernameErrUserNotFound includes the requested fields of the GraphQL type ErrUserNotFound.
type userByUsernameQueryUserByUsernameErrUserNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns userByUsernameQueryUserByUsernameErrUserNotFound.Typename, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameErrUserNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns userByUsernameQueryUserByUsernameErrUserNotFound.Message, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameErrUserNotFound) GetMessage() string { return v.Message }

// userByUsernameQueryUserByUsernameGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type userByUsernameQueryUserByUsernameGalleryUser struct {
	Typename *string      `json:"__typename"`
	Username *string      `json:"username"`
	Dbid     persist.DBID `json:"dbid"`
}

// GetTypename returns userByUsernameQueryUserByUsernameGalleryUser.Typename, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameGalleryUser) GetTypename() *string { return v.Typename }

// GetUsername returns userByUsernameQueryUserByUsernameGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameGalleryUser) GetUsername() *string { return v.Username }

// GetDbid returns userByUsernameQueryUserByUsernameGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *userByUsernameQueryUserByUsernameGalleryUser) GetDbid() persist.DBID { return v.Dbid }

// userByUsernameQueryUserByUsernameUserByUsernameOrError includes the requested fields of the GraphQL interface UserByUsernameOrError.
//
// userByUsernameQueryUserByUsernameUserByUsernameOrError is implemented by the following types:
// userByUsernameQueryUserByUsernameErrInvalidInput
// userByUsernameQueryUserByUsernameErrUserNotFound
// userByUsernameQueryUserByUsernameGalleryUser
type userByUsernameQueryUserByUsernameUserByUsernameOrError interface {
	implementsGraphQLInterfaceuserByUsernameQueryUserByUsernameUserByUsernameOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *userByUsernameQueryUserByUsernameErrInvalidInput) implementsGraphQLInterfaceuserByUsernameQueryUserByUsernameUserByUsernameOrError() {
}
func (v *userByUsernameQueryUserByUsernameErrUserNotFound) implementsGraphQLInterfaceuserByUsernameQueryUserByUsernameUserByUsernameOrError() {
}
func (v *userByUsernameQueryUserByUsernameGalleryUser) implementsGraphQLInterfaceuserByUsernameQueryUserByUsernameUserByUsernameOrError() {
}

func __unmarshaluserByUsernameQueryUserByUsernameUserByUsernameOrError(b []byte, v *userByUsernameQueryUserByUsernameUserByUsernameOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrInvalidInput":
		*v = new(userByUsernameQueryUserByUsernameErrInvalidInput)
		return json.Unmarshal(b, *v)
	case "ErrUserNotFound":
		*v = new(userByUsernameQueryUserByUsernameErrUserNotFound)
		return json.Unmarshal(b, *v)
	case "GalleryUser":
		*v = new(userByUsernameQueryUserByUsernameGalleryUser)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing UserByUsernameOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for userByUsernameQueryUserByUsernameUserByUsernameOrError: "%v"`, tn.TypeName)
	}
}

func __marshaluserByUsernameQueryUserByUsernameUserByUsernameOrError(v *userByUsernameQueryUserByUsernameUserByUsernameOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *userByUsernameQueryUserByUsernameErrInvalidInput:
		typename = "ErrInvalidInput"

		result := struct {
			TypeName string `json:"__typename"`
			*userByUsernameQueryUserByUsernameErrInvalidInput
		}{typename, v}
		return json.Marshal(result)
	case *userByUsernameQueryUserByUsernameErrUserNotFound:
		typename = "ErrUserNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*userByUsernameQueryUserByUsernameErrUserNotFound
		}{typename, v}
		return json.Marshal(result)
	case *userByUsernameQueryUserByUsernameGalleryUser:
		typename = "GalleryUser"

		result := struct {
			TypeName string `json:"__typename"`
			*userByUsernameQueryUserByUsernameGalleryUser
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for userByUsernameQueryUserByUsernameUserByUsernameOrError: "%T"`, v)
	}
}

// viewGalleryMutationResponse is returned by viewGalleryMutation on success.
type viewGalleryMutationResponse struct {
	ViewGallery *viewGalleryMutationViewGalleryViewGalleryPayloadOrError `json:"-"`
}

// GetViewGallery returns viewGalleryMutationResponse.ViewGallery, and is useful for accessing the field via an interface.
func (v *viewGalleryMutationResponse) GetViewGallery() *viewGalleryMutationViewGalleryViewGalleryPayloadOrError {
	return v.ViewGallery
}

func (v *viewGalleryMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*viewGalleryMutationResponse
		ViewGallery json.RawMessage `json:"viewGallery"`
		graphql.NoUnmarshalJSON
	}
	firstPass.viewGalleryMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.ViewGallery
		src := firstPass.ViewGallery
		if len(src) != 0 && string(src) != "null" {
			*dst = new(viewGalleryMutationViewGalleryViewGalleryPayloadOrError)
			err = __unmarshalviewGalleryMutationViewGalleryViewGalleryPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal viewGalleryMutationResponse.ViewGallery: %w", err)
			}
		}
	}
	return nil
}

type __premarshalviewGalleryMutationResponse struct {
	ViewGallery json.RawMessage `json:"viewGallery"`
}

func (v *viewGalleryMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *viewGalleryMutationResponse) __premarshalJSON() (*__premarshalviewGalleryMutationResponse, error) {
	var retval __premarshalviewGalleryMutationResponse

	{

		dst := &retval.ViewGallery
		src := v.ViewGallery
		if src != nil {
			var err error
			*dst, err = __marshalviewGalleryMutationViewGalleryViewGalleryPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal viewGalleryMutationResponse.ViewGallery: %w", err)
			}
		}
	}
	return &retval, nil
}

// viewGalleryMutationViewGalleryErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type viewGalleryMutationViewGalleryErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewGalleryMutationViewGalleryErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *viewGalleryMutationViewGalleryErrAuthenticationFailed) GetTypename() *string {
	return v.Typename
}

// GetMessage returns viewGalleryMutationViewGalleryErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *viewGalleryMutationViewGalleryErrAuthenticationFailed) GetMessage() string { return v.Message }

// viewGalleryMutationViewGalleryViewGalleryPayload includes the requested fields of the GraphQL type ViewGalleryPayload.
type viewGalleryMutationViewGalleryViewGalleryPayload struct {
	Typename *string                                                  `json:"__typename"`
	Gallery  *viewGalleryMutationViewGalleryViewGalleryPayloadGallery `json:"gallery"`
}

// GetTypename returns viewGalleryMutationViewGalleryViewGalleryPayload.Typename, and is useful for accessing the field via an interface.
func (v *viewGalleryMutationViewGalleryViewGalleryPayload) GetTypename() *string { return v.Typename }

// GetGallery returns viewGalleryMutationViewGalleryViewGalleryPayload.Gallery, and is useful for accessing the field via an interface.
func (v *viewGalleryMutationViewGalleryViewGalleryPayload) GetGallery() *viewGalleryMutationViewGalleryViewGalleryPayloadGallery {
	return v.Gallery
}

// viewGalleryMutationViewGalleryViewGalleryPayloadGallery includes the requested fields of the GraphQL type Gallery.
type viewGalleryMutationViewGalleryViewGalleryPayloadGallery struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns viewGalleryMutationViewGalleryViewGalleryPayloadGallery.Dbid, and is useful for accessing the field via an interface.
func (v *viewGalleryMutationViewGalleryViewGalleryPayloadGallery) GetDbid() persist.DBID {
	return v.Dbid
}

// viewGalleryMutationViewGalleryViewGalleryPayloadOrError includes the requested fields of the GraphQL interface ViewGalleryPayloadOrError.
//
// viewGalleryMutationViewGalleryViewGalleryPayloadOrError is implemented by the following types:
// viewGalleryMutationViewGalleryErrAuthenticationFailed
// viewGalleryMutationViewGalleryViewGalleryPayload
type viewGalleryMutationViewGalleryViewGalleryPayloadOrError interface {
	implementsGraphQLInterfaceviewGalleryMutationViewGalleryViewGalleryPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *viewGalleryMutationViewGalleryErrAuthenticationFailed) implementsGraphQLInterfaceviewGalleryMutationViewGalleryViewGalleryPayloadOrError() {
}
func (v *viewGalleryMutationViewGalleryViewGalleryPayload) implementsGraphQLInterfaceviewGalleryMutationViewGalleryViewGalleryPayloadOrError() {
}

func __unmarshalviewGalleryMutationViewGalleryViewGalleryPayloadOrError(b []byte, v *viewGalleryMutationViewGalleryViewGalleryPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrAuthenticationFailed":
		*v = new(viewGalleryMutationViewGalleryErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ViewGalleryPayload":
		*v = new(viewGalleryMutationViewGalleryViewGalleryPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ViewGalleryPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for viewGalleryMutationViewGalleryViewGalleryPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalviewGalleryMutationViewGalleryViewGalleryPayloadOrError(v *viewGalleryMutationViewGalleryViewGalleryPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *viewGalleryMutationViewGalleryErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*viewGalleryMutationViewGalleryErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *viewGalleryMutationViewGalleryViewGalleryPayload:
		typename = "ViewGalleryPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*viewGalleryMutationViewGalleryViewGalleryPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for viewGalleryMutationViewGalleryViewGalleryPayloadOrError: "%T"`, v)
	}
}

// viewTokenMutationResponse is returned by viewTokenMutation on success.
type viewTokenMutationResponse struct {
	ViewToken *viewTokenMutationViewTokenViewTokenPayloadOrError `json:"-"`
}

// GetViewToken returns viewTokenMutationResponse.ViewToken, and is useful for accessing the field via an interface.
func (v *viewTokenMutationResponse) GetViewToken() *viewTokenMutationViewTokenViewTokenPayloadOrError {
	return v.ViewToken
}

func (v *viewTokenMutationResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*viewTokenMutationResponse
		ViewToken json.RawMessage `json:"viewToken"`
		graphql.NoUnmarshalJSON
	}
	firstPass.viewTokenMutationResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.ViewToken
		src := firstPass.ViewToken
		if len(src) != 0 && string(src) != "null" {
			*dst = new(viewTokenMutationViewTokenViewTokenPayloadOrError)
			err = __unmarshalviewTokenMutationViewTokenViewTokenPayloadOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal viewTokenMutationResponse.ViewToken: %w", err)
			}
		}
	}
	return nil
}

type __premarshalviewTokenMutationResponse struct {
	ViewToken json.RawMessage `json:"viewToken"`
}

func (v *viewTokenMutationResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *viewTokenMutationResponse) __premarshalJSON() (*__premarshalviewTokenMutationResponse, error) {
	var retval __premarshalviewTokenMutationResponse

	{

		dst := &retval.ViewToken
		src := v.ViewToken
		if src != nil {
			var err error
			*dst, err = __marshalviewTokenMutationViewTokenViewTokenPayloadOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal viewTokenMutationResponse.ViewToken: %w", err)
			}
		}
	}
	return &retval, nil
}

// viewTokenMutationViewTokenErrAuthenticationFailed includes the requested fields of the GraphQL type ErrAuthenticationFailed.
type viewTokenMutationViewTokenErrAuthenticationFailed struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewTokenMutationViewTokenErrAuthenticationFailed.Typename, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenErrAuthenticationFailed) GetTypename() *string { return v.Typename }

// GetMessage returns viewTokenMutationViewTokenErrAuthenticationFailed.Message, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenErrAuthenticationFailed) GetMessage() string { return v.Message }

// viewTokenMutationViewTokenErrCollectionNotFound includes the requested fields of the GraphQL type ErrCollectionNotFound.
type viewTokenMutationViewTokenErrCollectionNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewTokenMutationViewTokenErrCollectionNotFound.Typename, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenErrCollectionNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns viewTokenMutationViewTokenErrCollectionNotFound.Message, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenErrCollectionNotFound) GetMessage() string { return v.Message }

// viewTokenMutationViewTokenErrTokenNotFound includes the requested fields of the GraphQL type ErrTokenNotFound.
type viewTokenMutationViewTokenErrTokenNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewTokenMutationViewTokenErrTokenNotFound.Typename, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenErrTokenNotFound) GetTypename() *string { return v.Typename }

// GetMessage returns viewTokenMutationViewTokenErrTokenNotFound.Message, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenErrTokenNotFound) GetMessage() string { return v.Message }

// viewTokenMutationViewTokenViewTokenPayload includes the requested fields of the GraphQL type ViewTokenPayload.
type viewTokenMutationViewTokenViewTokenPayload struct {
	Typename *string                                          `json:"__typename"`
	Token    *viewTokenMutationViewTokenViewTokenPayloadToken `json:"token"`
}

// GetTypename returns viewTokenMutationViewTokenViewTokenPayload.Typename, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayload) GetTypename() *string { return v.Typename }

// GetToken returns viewTokenMutationViewTokenViewTokenPayload.Token, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayload) GetToken() *viewTokenMutationViewTokenViewTokenPayloadToken {
	return v.Token
}

// viewTokenMutationViewTokenViewTokenPayloadOrError includes the requested fields of the GraphQL interface ViewTokenPayloadOrError.
//
// viewTokenMutationViewTokenViewTokenPayloadOrError is implemented by the following types:
// viewTokenMutationViewTokenErrAuthenticationFailed
// viewTokenMutationViewTokenErrCollectionNotFound
// viewTokenMutationViewTokenErrTokenNotFound
// viewTokenMutationViewTokenViewTokenPayload
type viewTokenMutationViewTokenViewTokenPayloadOrError interface {
	implementsGraphQLInterfaceviewTokenMutationViewTokenViewTokenPayloadOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *viewTokenMutationViewTokenErrAuthenticationFailed) implementsGraphQLInterfaceviewTokenMutationViewTokenViewTokenPayloadOrError() {
}
func (v *viewTokenMutationViewTokenErrCollectionNotFound) implementsGraphQLInterfaceviewTokenMutationViewTokenViewTokenPayloadOrError() {
}
func (v *viewTokenMutationViewTokenErrTokenNotFound) implementsGraphQLInterfaceviewTokenMutationViewTokenViewTokenPayloadOrError() {
}
func (v *viewTokenMutationViewTokenViewTokenPayload) implementsGraphQLInterfaceviewTokenMutationViewTokenViewTokenPayloadOrError() {
}

func __unmarshalviewTokenMutationViewTokenViewTokenPayloadOrError(b []byte, v *viewTokenMutationViewTokenViewTokenPayloadOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrAuthenticationFailed":
		*v = new(viewTokenMutationViewTokenErrAuthenticationFailed)
		return json.Unmarshal(b, *v)
	case "ErrCollectionNotFound":
		*v = new(viewTokenMutationViewTokenErrCollectionNotFound)
		return json.Unmarshal(b, *v)
	case "ErrTokenNotFound":
		*v = new(viewTokenMutationViewTokenErrTokenNotFound)
		return json.Unmarshal(b, *v)
	case "ViewTokenPayload":
		*v = new(viewTokenMutationViewTokenViewTokenPayload)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ViewTokenPayloadOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for viewTokenMutationViewTokenViewTokenPayloadOrError: "%v"`, tn.TypeName)
	}
}

func __marshalviewTokenMutationViewTokenViewTokenPayloadOrError(v *viewTokenMutationViewTokenViewTokenPayloadOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *viewTokenMutationViewTokenErrAuthenticationFailed:
		typename = "ErrAuthenticationFailed"

		result := struct {
			TypeName string `json:"__typename"`
			*viewTokenMutationViewTokenErrAuthenticationFailed
		}{typename, v}
		return json.Marshal(result)
	case *viewTokenMutationViewTokenErrCollectionNotFound:
		typename = "ErrCollectionNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*viewTokenMutationViewTokenErrCollectionNotFound
		}{typename, v}
		return json.Marshal(result)
	case *viewTokenMutationViewTokenErrTokenNotFound:
		typename = "ErrTokenNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*viewTokenMutationViewTokenErrTokenNotFound
		}{typename, v}
		return json.Marshal(result)
	case *viewTokenMutationViewTokenViewTokenPayload:
		typename = "ViewTokenPayload"

		result := struct {
			TypeName string `json:"__typename"`
			*viewTokenMutationViewTokenViewTokenPayload
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for viewTokenMutationViewTokenViewTokenPayloadOrError: "%T"`, v)
	}
}

// viewTokenMutationViewTokenViewTokenPayloadToken includes the requested fields of the GraphQL type Token.
type viewTokenMutationViewTokenViewTokenPayloadToken struct {
	Dbid     persist.DBID                                             `json:"dbid"`
	Contract *viewTokenMutationViewTokenViewTokenPayloadTokenContract `json:"contract"`
}

// GetDbid returns viewTokenMutationViewTokenViewTokenPayloadToken.Dbid, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayloadToken) GetDbid() persist.DBID { return v.Dbid }

// GetContract returns viewTokenMutationViewTokenViewTokenPayloadToken.Contract, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayloadToken) GetContract() *viewTokenMutationViewTokenViewTokenPayloadTokenContract {
	return v.Contract
}

// viewTokenMutationViewTokenViewTokenPayloadTokenContract includes the requested fields of the GraphQL type Contract.
type viewTokenMutationViewTokenViewTokenPayloadTokenContract struct {
	ContractAddress *viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress `json:"contractAddress"`
}

// GetContractAddress returns viewTokenMutationViewTokenViewTokenPayloadTokenContract.ContractAddress, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayloadTokenContract) GetContractAddress() *viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress {
	return v.ContractAddress
}

// viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress includes the requested fields of the GraphQL type ChainAddress.
type viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress struct {
	Address *string `json:"address"`
	Chain   *Chain  `json:"chain"`
}

// GetAddress returns viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress.Address, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress) GetAddress() *string {
	return v.Address
}

// GetChain returns viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress.Chain, and is useful for accessing the field via an interface.
func (v *viewTokenMutationViewTokenViewTokenPayloadTokenContractContractAddressChainAddress) GetChain() *Chain {
	return v.Chain
}

// viewerQueryResponse is returned by viewerQuery on success.
type viewerQueryResponse struct {
	Viewer *viewerQueryViewerViewerOrError `json:"-"`
}

// GetViewer returns viewerQueryResponse.Viewer, and is useful for accessing the field via an interface.
func (v *viewerQueryResponse) GetViewer() *viewerQueryViewerViewerOrError { return v.Viewer }

func (v *viewerQueryResponse) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*viewerQueryResponse
		Viewer json.RawMessage `json:"viewer"`
		graphql.NoUnmarshalJSON
	}
	firstPass.viewerQueryResponse = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Viewer
		src := firstPass.Viewer
		if len(src) != 0 && string(src) != "null" {
			*dst = new(viewerQueryViewerViewerOrError)
			err = __unmarshalviewerQueryViewerViewerOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal viewerQueryResponse.Viewer: %w", err)
			}
		}
	}
	return nil
}

type __premarshalviewerQueryResponse struct {
	Viewer json.RawMessage `json:"viewer"`
}

func (v *viewerQueryResponse) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *viewerQueryResponse) __premarshalJSON() (*__premarshalviewerQueryResponse, error) {
	var retval __premarshalviewerQueryResponse

	{

		dst := &retval.Viewer
		src := v.Viewer
		if src != nil {
			var err error
			*dst, err = __marshalviewerQueryViewerViewerOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal viewerQueryResponse.Viewer: %w", err)
			}
		}
	}
	return &retval, nil
}

// viewerQueryViewer includes the requested fields of the GraphQL type Viewer.
type viewerQueryViewer struct {
	Typename        *string                                          `json:"__typename"`
	UserExperiences []viewerQueryViewerUserExperiencesUserExperience `json:"userExperiences"`
	SuggestedUsers  *viewerQueryViewerSuggestedUsersUsersConnection  `json:"suggestedUsers"`
	User            *viewerQueryViewerUserGalleryUser                `json:"user"`
}

// GetTypename returns viewerQueryViewer.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewer) GetTypename() *string { return v.Typename }

// GetUserExperiences returns viewerQueryViewer.UserExperiences, and is useful for accessing the field via an interface.
func (v *viewerQueryViewer) GetUserExperiences() []viewerQueryViewerUserExperiencesUserExperience {
	return v.UserExperiences
}

// GetSuggestedUsers returns viewerQueryViewer.SuggestedUsers, and is useful for accessing the field via an interface.
func (v *viewerQueryViewer) GetSuggestedUsers() *viewerQueryViewerSuggestedUsersUsersConnection {
	return v.SuggestedUsers
}

// GetUser returns viewerQueryViewer.User, and is useful for accessing the field via an interface.
func (v *viewerQueryViewer) GetUser() *viewerQueryViewerUserGalleryUser { return v.User }

// viewerQueryViewerErrNotAuthorized includes the requested fields of the GraphQL type ErrNotAuthorized.
type viewerQueryViewerErrNotAuthorized struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewerQueryViewerErrNotAuthorized.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerErrNotAuthorized) GetTypename() *string { return v.Typename }

// GetMessage returns viewerQueryViewerErrNotAuthorized.Message, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerErrNotAuthorized) GetMessage() string { return v.Message }

// viewerQueryViewerSuggestedUsersUsersConnection includes the requested fields of the GraphQL type UsersConnection.
type viewerQueryViewerSuggestedUsersUsersConnection struct {
	Edges []*viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdge `json:"edges"`
}

// GetEdges returns viewerQueryViewerSuggestedUsersUsersConnection.Edges, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerSuggestedUsersUsersConnection) GetEdges() []*viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdge {
	return v.Edges
}

// viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdge includes the requested fields of the GraphQL type UserEdge.
type viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdge struct {
	Node *viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdgeNodeGalleryUser `json:"node"`
}

// GetNode returns viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdge.Node, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdge) GetNode() *viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdgeNodeGalleryUser {
	return v.Node
}

// viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdgeNodeGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdgeNodeGalleryUser struct {
	Dbid persist.DBID `json:"dbid"`
}

// GetDbid returns viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdgeNodeGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerSuggestedUsersUsersConnectionEdgesUserEdgeNodeGalleryUser) GetDbid() persist.DBID {
	return v.Dbid
}

// viewerQueryViewerUserExperiencesUserExperience includes the requested fields of the GraphQL type UserExperience.
type viewerQueryViewerUserExperiencesUserExperience struct {
	Type        UserExperienceType `json:"type"`
	Experienced bool               `json:"experienced"`
}

// GetType returns viewerQueryViewerUserExperiencesUserExperience.Type, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserExperiencesUserExperience) GetType() UserExperienceType { return v.Type }

// GetExperienced returns viewerQueryViewerUserExperiencesUserExperience.Experienced, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserExperiencesUserExperience) GetExperienced() bool { return v.Experienced }

// viewerQueryViewerUserGalleryUser includes the requested fields of the GraphQL type GalleryUser.
type viewerQueryViewerUserGalleryUser struct {
	Username       *string                                             `json:"username"`
	Dbid           persist.DBID                                        `json:"dbid"`
	SocialAccounts *viewerQueryViewerUserGalleryUserSocialAccounts     `json:"socialAccounts"`
	Feed           *viewerQueryViewerUserGalleryUserFeedFeedConnection `json:"feed"`
}

// GetUsername returns viewerQueryViewerUserGalleryUser.Username, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUser) GetUsername() *string { return v.Username }

// GetDbid returns viewerQueryViewerUserGalleryUser.Dbid, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUser) GetDbid() persist.DBID { return v.Dbid }

// GetSocialAccounts returns viewerQueryViewerUserGalleryUser.SocialAccounts, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUser) GetSocialAccounts() *viewerQueryViewerUserGalleryUserSocialAccounts {
	return v.SocialAccounts
}

// GetFeed returns viewerQueryViewerUserGalleryUser.Feed, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUser) GetFeed() *viewerQueryViewerUserGalleryUserFeedFeedConnection {
	return v.Feed
}

// viewerQueryViewerUserGalleryUserFeedFeedConnection includes the requested fields of the GraphQL type FeedConnection.
type viewerQueryViewerUserGalleryUserFeedFeedConnection struct {
	Edges []*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge `json:"edges"`
}

// GetEdges returns viewerQueryViewerUserGalleryUserFeedFeedConnection.Edges, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnection) GetEdges() []*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge {
	return v.Edges
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge includes the requested fields of the GraphQL type FeedEdge.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge struct {
	Node *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError `json:"-"`
}

// GetNode returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge.Node, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge) GetNode() *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError {
	return v.Node
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge
		Node json.RawMessage `json:"node"`
		graphql.NoUnmarshalJSON
	}
	firstPass.viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Node
		src := firstPass.Node
		if len(src) != 0 && string(src) != "null" {
			*dst = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError)
			err = __unmarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge.Node: %w", err)
			}
		}
	}
	return nil
}

type __premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge struct {
	Node json.RawMessage `json:"node"`
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge) __premarshalJSON() (*__premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge, error) {
	var retval __premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge

	{

		dst := &retval.Node
		src := v.Node
		if src != nil {
			var err error
			*dst, err = __marshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdge.Node: %w", err)
			}
		}
	}
	return &retval, nil
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound includes the requested fields of the GraphQL type ErrFeedEventNotFound.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound.Message, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) GetMessage() string {
	return v.Message
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound includes the requested fields of the GraphQL type ErrPostNotFound.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) GetTypename() *string {
	return v.Typename
}

// GetMessage returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound.Message, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) GetMessage() string {
	return v.Message
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction includes the requested fields of the GraphQL type ErrUnknownAction.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction struct {
	Typename *string `json:"__typename"`
	Message  string  `json:"message"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) GetTypename() *string {
	return v.Typename
}

// GetMessage returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction.Message, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) GetMessage() string {
	return v.Message
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent includes the requested fields of the GraphQL type FeedEvent.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent struct {
	Typename  *string                                                                                             `json:"__typename"`
	Dbid      persist.DBID                                                                                        `json:"dbid"`
	Caption   *string                                                                                             `json:"caption"`
	EventData *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData `json:"-"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetTypename() *string {
	return v.Typename
}

// GetDbid returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Dbid, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetDbid() persist.DBID {
	return v.Dbid
}

// GetCaption returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.Caption, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetCaption() *string {
	return v.Caption
}

// GetEventData returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.EventData, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) GetEventData() *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData {
	return v.EventData
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
		EventData json.RawMessage `json:"eventData"`
		graphql.NoUnmarshalJSON
	}
	firstPass.viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.EventData
		src := firstPass.EventData
		if len(src) != 0 && string(src) != "null" {
			*dst = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData)
			err = __unmarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData(
				src, *dst)
			if err != nil {
				return fmt.Errorf(
					"unable to unmarshal viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.EventData: %w", err)
			}
		}
	}
	return nil
}

type __premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent struct {
	Typename *string `json:"__typename"`

	Dbid persist.DBID `json:"dbid"`

	Caption *string `json:"caption"`

	EventData json.RawMessage `json:"eventData"`
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) __premarshalJSON() (*__premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent, error) {
	var retval __premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent

	retval.Typename = v.Typename
	retval.Dbid = v.Dbid
	retval.Caption = v.Caption
	{

		dst := &retval.EventData
		src := v.EventData
		if src != nil {
			var err error
			*dst, err = __marshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData(
				src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent.EventData: %w", err)
			}
		}
	}
	return &retval, nil
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData includes the requested fields of the GraphQL type CollectionCreatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData includes the requested fields of the GraphQL type CollectionUpdatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData includes the requested fields of the GraphQL type CollectorsNoteAddedToCollectionFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData includes the requested fields of the GraphQL type CollectorsNoteAddedToTokenFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData includes the requested fields of the GraphQL interface FeedEventData.
//
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData is implemented by the following types:
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData interface {
	implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
	// GetAction returns the interface-field "action" from its implementation.
	GetAction() *Action
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData() {
}

func __unmarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData(b []byte, v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CollectionCreatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "CollectionUpdatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "CollectorsNoteAddedToCollectionFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData)
		return json.Unmarshal(b, *v)
	case "CollectorsNoteAddedToTokenFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData)
		return json.Unmarshal(b, *v)
	case "GalleryInfoUpdatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "GalleryUpdatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "TokensAddedToCollectionFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData)
		return json.Unmarshal(b, *v)
	case "UserCreatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "UserFollowedUsersFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing FeedEventData.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData: "%v"`, tn.TypeName)
	}
}

func __marshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData(v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData:
		typename = "CollectionCreatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionCreatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData:
		typename = "CollectionUpdatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectionUpdatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData:
		typename = "CollectorsNoteAddedToCollectionFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToCollectionFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData:
		typename = "CollectorsNoteAddedToTokenFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataCollectorsNoteAddedToTokenFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData:
		typename = "GalleryInfoUpdatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData:
		typename = "GalleryUpdatedFeedEventData"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData
		}{typename, premarshaled}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData:
		typename = "TokensAddedToCollectionFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData:
		typename = "UserCreatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData:
		typename = "UserFollowedUsersFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataFeedEventData: "%T"`, v)
	}
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData includes the requested fields of the GraphQL type GalleryInfoUpdatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryInfoUpdatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData includes the requested fields of the GraphQL type GalleryUpdatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData struct {
	Typename      *string                                                                                                                                      `json:"__typename"`
	Action        *Action                                                                                                                                      `json:"action"`
	SubEventDatas []viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData `json:"-"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) GetAction() *Action {
	return v.Action
}

// GetSubEventDatas returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData.SubEventDatas, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) GetSubEventDatas() []viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData {
	return v.SubEventDatas
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData
		SubEventDatas []json.RawMessage `json:"subEventDatas"`
		graphql.NoUnmarshalJSON
	}
	firstPass.viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.SubEventDatas
		src := firstPass.SubEventDatas
		*dst = make(
			[]viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"unable to unmarshal viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData.SubEventDatas: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData struct {
	Typename *string `json:"__typename"`

	Action *Action `json:"action"`

	SubEventDatas []json.RawMessage `json:"subEventDatas"`
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData) __premarshalJSON() (*__premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData, error) {
	var retval __premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData

	retval.Typename = v.Typename
	retval.Action = v.Action
	{

		dst := &retval.SubEventDatas
		src := v.SubEventDatas
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"unable to marshal viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventData.SubEventDatas: %w", err)
			}
		}
	}
	return &retval, nil
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData includes the requested fields of the GraphQL type CollectionCreatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData struct {
	Typename  *string                                                                                                                                                                                `json:"__typename"`
	Action    *Action                                                                                                                                                                                `json:"action"`
	NewTokens []*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionToken `json:"newTokens"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData) GetAction() *Action {
	return v.Action
}

// GetNewTokens returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData.NewTokens, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData) GetNewTokens() []*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionToken {
	return v.NewTokens
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionToken includes the requested fields of the GraphQL type CollectionToken.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionToken struct {
	Token *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken `json:"token"`
}

// GetToken returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionToken.Token, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionToken) GetToken() *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken {
	return v.Token
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken includes the requested fields of the GraphQL type Token.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken struct {
	Dbid persist.DBID `json:"dbid"`
	Name *string      `json:"name"`
}

// GetDbid returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken.Dbid, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken) GetDbid() persist.DBID {
	return v.Dbid
}

// GetName returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken.Name, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventDataNewTokensCollectionTokenToken) GetName() *string {
	return v.Name
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData includes the requested fields of the GraphQL type CollectionUpdatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData includes the requested fields of the GraphQL type CollectorsNoteAddedToCollectionFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData includes the requested fields of the GraphQL type CollectorsNoteAddedToTokenFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData includes the requested fields of the GraphQL interface FeedEventData.
//
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData is implemented by the following types:
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData interface {
	implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
	// GetAction returns the interface-field "action" from its implementation.
	GetAction() *Action
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData() {
}

func __unmarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData(b []byte, v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "CollectionCreatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "CollectionUpdatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "CollectorsNoteAddedToCollectionFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData)
		return json.Unmarshal(b, *v)
	case "CollectorsNoteAddedToTokenFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData)
		return json.Unmarshal(b, *v)
	case "GalleryInfoUpdatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "GalleryUpdatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "TokensAddedToCollectionFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData)
		return json.Unmarshal(b, *v)
	case "UserCreatedFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData)
		return json.Unmarshal(b, *v)
	case "UserFollowedUsersFeedEventData":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing FeedEventData.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData: "%v"`, tn.TypeName)
	}
}

func __marshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData(v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData:
		typename = "CollectionCreatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionCreatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData:
		typename = "CollectionUpdatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectionUpdatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData:
		typename = "CollectorsNoteAddedToCollectionFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToCollectionFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData:
		typename = "CollectorsNoteAddedToTokenFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasCollectorsNoteAddedToTokenFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData:
		typename = "GalleryInfoUpdatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData:
		typename = "GalleryUpdatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData:
		typename = "TokensAddedToCollectionFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData:
		typename = "UserCreatedFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData:
		typename = "UserFollowedUsersFeedEventData"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasFeedEventData: "%T"`, v)
	}
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData includes the requested fields of the GraphQL type GalleryInfoUpdatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData struct {
	Typename       *string `json:"__typename"`
	Action         *Action `json:"action"`
	NewName        *string `json:"newName"`
	NewDescription *string `json:"newDescription"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData) GetAction() *Action {
	return v.Action
}

// GetNewName returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData.NewName, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData) GetNewName() *string {
	return v.NewName
}

// GetNewDescription returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData.NewDescription, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryInfoUpdatedFeedEventData) GetNewDescription() *string {
	return v.NewDescription
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData includes the requested fields of the GraphQL type GalleryUpdatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasGalleryUpdatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData includes the requested fields of the GraphQL type TokensAddedToCollectionFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData struct {
	Typename  *string                                                                                                                                                                                      `json:"__typename"`
	Action    *Action                                                                                                                                                                                      `json:"action"`
	NewTokens []*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionToken `json:"newTokens"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData) GetAction() *Action {
	return v.Action
}

// GetNewTokens returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData.NewTokens, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventData) GetNewTokens() []*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionToken {
	return v.NewTokens
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionToken includes the requested fields of the GraphQL type CollectionToken.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionToken struct {
	Token *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken `json:"token"`
}

// GetToken returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionToken.Token, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionToken) GetToken() *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken {
	return v.Token
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken includes the requested fields of the GraphQL type Token.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken struct {
	Dbid persist.DBID `json:"dbid"`
	Name *string      `json:"name"`
}

// GetDbid returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken.Dbid, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken) GetDbid() persist.DBID {
	return v.Dbid
}

// GetName returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken.Name, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasTokensAddedToCollectionFeedEventDataNewTokensCollectionTokenToken) GetName() *string {
	return v.Name
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData includes the requested fields of the GraphQL type UserCreatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserCreatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData includes the requested fields of the GraphQL type UserFollowedUsersFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataGalleryUpdatedFeedEventDataSubEventDatasUserFollowedUsersFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData includes the requested fields of the GraphQL type TokensAddedToCollectionFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataTokensAddedToCollectionFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData includes the requested fields of the GraphQL type UserCreatedFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserCreatedFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData includes the requested fields of the GraphQL type UserFollowedUsersFeedEventData.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData struct {
	Typename *string `json:"__typename"`
	Action   *Action `json:"action"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData) GetTypename() *string {
	return v.Typename
}

// GetAction returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData.Action, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventEventDataUserFollowedUsersFeedEventData) GetAction() *Action {
	return v.Action
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError includes the requested fields of the GraphQL interface FeedEventOrError.
//
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError is implemented by the following types:
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost
// The GraphQL type's documentation follows.
//
// Can return posts as well
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError interface {
	implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost) implementsGraphQLInterfaceviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError() {
}

func __unmarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(b []byte, v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrFeedEventNotFound":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound)
		return json.Unmarshal(b, *v)
	case "ErrPostNotFound":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound)
		return json.Unmarshal(b, *v)
	case "ErrUnknownAction":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction)
		return json.Unmarshal(b, *v)
	case "FeedEvent":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent)
		return json.Unmarshal(b, *v)
	case "Post":
		*v = new(viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing FeedEventOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError: "%v"`, tn.TypeName)
	}
}

func __marshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError(v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound:
		typename = "ErrFeedEventNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrFeedEventNotFound
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound:
		typename = "ErrPostNotFound"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrPostNotFound
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction:
		typename = "ErrUnknownAction"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeErrUnknownAction
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent:
		typename = "FeedEvent"

		premarshaled, err := v.__premarshalJSON()
		if err != nil {
			return nil, err
		}
		result := struct {
			TypeName string `json:"__typename"`
			*__premarshalviewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEvent
		}{typename, premarshaled}
		return json.Marshal(result)
	case *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost:
		typename = "Post"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodeFeedEventOrError: "%T"`, v)
	}
}

// viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost includes the requested fields of the GraphQL type Post.
type viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost struct {
	Typename *string `json:"__typename"`
}

// GetTypename returns viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost.Typename, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserFeedFeedConnectionEdgesFeedEdgeNodePost) GetTypename() *string {
	return v.Typename
}

// viewerQueryViewerUserGalleryUserSocialAccounts includes the requested fields of the GraphQL type SocialAccounts.
type viewerQueryViewerUserGalleryUserSocialAccounts struct {
	Twitter *viewerQueryViewerUserGalleryUserSocialAccountsTwitterTwitterSocialAccount `json:"twitter"`
}

// GetTwitter returns viewerQueryViewerUserGalleryUserSocialAccounts.Twitter, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserSocialAccounts) GetTwitter() *viewerQueryViewerUserGalleryUserSocialAccountsTwitterTwitterSocialAccount {
	return v.Twitter
}

// viewerQueryViewerUserGalleryUserSocialAccountsTwitterTwitterSocialAccount includes the requested fields of the GraphQL type TwitterSocialAccount.
type viewerQueryViewerUserGalleryUserSocialAccountsTwitterTwitterSocialAccount struct {
	Username string `json:"username"`
}

// GetUsername returns viewerQueryViewerUserGalleryUserSocialAccountsTwitterTwitterSocialAccount.Username, and is useful for accessing the field via an interface.
func (v *viewerQueryViewerUserGalleryUserSocialAccountsTwitterTwitterSocialAccount) GetUsername() string {
	return v.Username
}

// viewerQueryViewerViewerOrError includes the requested fields of the GraphQL interface ViewerOrError.
//
// viewerQueryViewerViewerOrError is implemented by the following types:
// viewerQueryViewerErrNotAuthorized
// viewerQueryViewer
type viewerQueryViewerViewerOrError interface {
	implementsGraphQLInterfaceviewerQueryViewerViewerOrError()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() *string
}

func (v *viewerQueryViewerErrNotAuthorized) implementsGraphQLInterfaceviewerQueryViewerViewerOrError() {
}
func (v *viewerQueryViewer) implementsGraphQLInterfaceviewerQueryViewerViewerOrError() {}

func __unmarshalviewerQueryViewerViewerOrError(b []byte, v *viewerQueryViewerViewerOrError) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "ErrNotAuthorized":
		*v = new(viewerQueryViewerErrNotAuthorized)
		return json.Unmarshal(b, *v)
	case "Viewer":
		*v = new(viewerQueryViewer)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing ViewerOrError.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerViewerOrError: "%v"`, tn.TypeName)
	}
}

func __marshalviewerQueryViewerViewerOrError(v *viewerQueryViewerViewerOrError) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *viewerQueryViewerErrNotAuthorized:
		typename = "ErrNotAuthorized"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewerErrNotAuthorized
		}{typename, v}
		return json.Marshal(result)
	case *viewerQueryViewer:
		typename = "Viewer"

		result := struct {
			TypeName string `json:"__typename"`
			*viewerQueryViewer
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for viewerQueryViewerViewerOrError: "%T"`, v)
	}
}

// The query or mutation executed by addUserWalletMutation.
const addUserWalletMutation_Operation = `
mutation addUserWalletMutation ($chainAddress: ChainAddressInput!, $authMechanism: AuthMechanism!) {
	addUserWallet(chainAddress: $chainAddress, authMechanism: $authMechanism) {
		__typename
		... on Error {
			__typename
			message
		}
		... on AddUserWalletPayload {
			viewer {
				user {
					wallets {
						dbid
						chainAddress {
							address
							chain
						}
					}
				}
			}
		}
	}
}
`

func addUserWalletMutation(
	ctx context.Context,
	client graphql.Client,
	chainAddress ChainAddressInput,
	authMechanism AuthMechanism,
) (*addUserWalletMutationResponse, error) {
	req := &graphql.Request{
		OpName: "addUserWalletMutation",
		Query:  addUserWalletMutation_Operation,
		Variables: &__addUserWalletMutationInput{
			ChainAddress:  chainAddress,
			AuthMechanism: authMechanism,
		},
	}
	var err error

	var data addUserWalletMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by admireFeedEventMutation.
const admireFeedEventMutation_Operation = `
mutation admireFeedEventMutation ($feedEventId: DBID!) {
	admireFeedEvent(feedEventId: $feedEventId) {
		__typename
		... on Error {
			__typename
			message
		}
		... on AdmireFeedEventPayload {
			feedEvent {
				dbid
			}
		}
	}
}
`

func admireFeedEventMutation(
	ctx context.Context,
	client graphql.Client,
	feedEventId persist.DBID,
) (*admireFeedEventMutationResponse, error) {
	req := &graphql.Request{
		OpName: "admireFeedEventMutation",
		Query:  admireFeedEventMutation_Operation,
		Variables: &__admireFeedEventMutationInput{
			FeedEventId: feedEventId,
		},
	}
	var err error

	var data admireFeedEventMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by admirePostMutation.
const admirePostMutation_Operation = `
mutation admirePostMutation ($postId: DBID!) {
	admirePost(postId: $postId) {
		__typename
		... on Error {
			__typename
			message
		}
		... on AdmirePostPayload {
			post {
				dbid
			}
		}
	}
}
`

func admirePostMutation(
	ctx context.Context,
	client graphql.Client,
	postId persist.DBID,
) (*admirePostMutationResponse, error) {
	req := &graphql.Request{
		OpName: "admirePostMutation",
		Query:  admirePostMutation_Operation,
		Variables: &__admirePostMutationInput{
			PostId: postId,
		},
	}
	var err error

	var data admirePostMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by admireTokenMutation.
const admireTokenMutation_Operation = `
mutation admireTokenMutation ($tokenId: DBID!) {
	admireToken(tokenId: $tokenId) {
		__typename
		... on Error {
			__typename
			message
		}
		... on AdmireTokenPayload {
			token {
				dbid
			}
		}
	}
}
`

func admireTokenMutation(
	ctx context.Context,
	client graphql.Client,
	tokenId persist.DBID,
) (*admireTokenMutationResponse, error) {
	req := &graphql.Request{
		OpName: "admireTokenMutation",
		Query:  admireTokenMutation_Operation,
		Variables: &__admireTokenMutationInput{
			TokenId: tokenId,
		},
	}
	var err error

	var data admireTokenMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by commentOnFeedEventMutation.
const commentOnFeedEventMutation_Operation = `
mutation commentOnFeedEventMutation ($feedEventId: DBID!, $comment: String!) {
	commentOnFeedEvent(feedEventId: $feedEventId, comment: $comment) {
		__typename
		... on Error {
			__typename
			message
		}
		... on CommentOnFeedEventPayload {
			feedEvent {
				dbid
			}
		}
	}
}
`

func commentOnFeedEventMutation(
	ctx context.Context,
	client graphql.Client,
	feedEventId persist.DBID,
	comment string,
) (*commentOnFeedEventMutationResponse, error) {
	req := &graphql.Request{
		OpName: "commentOnFeedEventMutation",
		Query:  commentOnFeedEventMutation_Operation,
		Variables: &__commentOnFeedEventMutationInput{
			FeedEventId: feedEventId,
			Comment:     comment,
		},
	}
	var err error

	var data commentOnFeedEventMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by commentOnPostMutation.
const commentOnPostMutation_Operation = `
mutation commentOnPostMutation ($postId: DBID!, $comment: String!) {
	commentOnPost(postId: $postId, comment: $comment) {
		__typename
		... on Error {
			__typename
			message
		}
		... on CommentOnPostPayload {
			post {
				dbid
			}
		}
	}
}
`

func commentOnPostMutation(
	ctx context.Context,
	client graphql.Client,
	postId persist.DBID,
	comment string,
) (*commentOnPostMutationResponse, error) {
	req := &graphql.Request{
		OpName: "commentOnPostMutation",
		Query:  commentOnPostMutation_Operation,
		Variables: &__commentOnPostMutationInput{
			PostId:  postId,
			Comment: comment,
		},
	}
	var err error

	var data commentOnPostMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by communityByAddressQuery.
const communityByAddressQuery_Operation = `
query communityByAddressQuery ($address: ChainAddressInput!) {
	communityByAddress(communityAddress: $address) {
		__typename
		... on Error {
			__typename
			message
		}
		... on Community {
			dbid
			name
			posts(first: 3) {
				edges {
					node {
						__typename
						... on Error {
							__typename
							message
						}
						... on Post {
							dbid
						}
					}
				}
			}
		}
	}
}
`

func communityByAddressQuery(
	ctx context.Context,
	client graphql.Client,
	address ChainAddressInput,
) (*communityByAddressQueryResponse, error) {
	req := &graphql.Request{
		OpName: "communityByAddressQuery",
		Query:  communityByAddressQuery_Operation,
		Variables: &__communityByAddressQueryInput{
			Address: address,
		},
	}
	var err error

	var data communityByAddressQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by connectSocialAccount.
const connectSocialAccount_Operation = `
mutation connectSocialAccount ($auth: SocialAuthMechanism!, $display: Boolean!) {
	connectSocialAccount(input: $auth, display: $display) {
		__typename
		... on Error {
			__typename
			message
		}
		... on ConnectSocialAccountPayload {
			viewer {
				socialAccounts {
					twitter {
						username
						display
					}
				}
			}
		}
	}
}
`

func connectSocialAccount(
	ctx context.Context,
	client graphql.Client,
	auth SocialAuthMechanism,
	display bool,
) (*connectSocialAccountResponse, error) {
	req := &graphql.Request{
		OpName: "connectSocialAccount",
		Query:  connectSocialAccount_Operation,
		Variables: &__connectSocialAccountInput{
			Auth:    auth,
			Display: display,
		},
	}
	var err error

	var data connectSocialAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createCollectionMutation.
const createCollectionMutation_Operation = `
mutation createCollectionMutation ($input: CreateCollectionInput!) {
	createCollection(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on CreateCollectionPayload {
			collection {
				dbid
				name
				tokens {
					token {
						dbid
					}
				}
			}
		}
	}
}
`

func createCollectionMutation(
	ctx context.Context,
	client graphql.Client,
	input CreateCollectionInput,
) (*createCollectionMutationResponse, error) {
	req := &graphql.Request{
		OpName: "createCollectionMutation",
		Query:  createCollectionMutation_Operation,
		Variables: &__createCollectionMutationInput{
			Input: input,
		},
	}
	var err error

	var data createCollectionMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createGalleryMutation.
const createGalleryMutation_Operation = `
mutation createGalleryMutation ($input: CreateGalleryInput!) {
	createGallery(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on CreateGalleryPayload {
			gallery {
				dbid
				name
				description
				position
			}
		}
	}
}
`

func createGalleryMutation(
	ctx context.Context,
	client graphql.Client,
	input CreateGalleryInput,
) (*createGalleryMutationResponse, error) {
	req := &graphql.Request{
		OpName: "createGalleryMutation",
		Query:  createGalleryMutation_Operation,
		Variables: &__createGalleryMutationInput{
			Input: input,
		},
	}
	var err error

	var data createGalleryMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by createUserMutation.
const createUserMutation_Operation = `
mutation createUserMutation ($authMechanism: AuthMechanism!, $input: CreateUserInput!) {
	createUser(authMechanism: $authMechanism, input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on CreateUserPayload {
			viewer {
				user {
					username
					dbid
					bio
					galleries {
						dbid
					}
				}
			}
		}
	}
}
`

func createUserMutation(
	ctx context.Context,
	client graphql.Client,
	authMechanism AuthMechanism,
	input CreateUserInput,
) (*createUserMutationResponse, error) {
	req := &graphql.Request{
		OpName: "createUserMutation",
		Query:  createUserMutation_Operation,
		Variables: &__createUserMutationInput{
			AuthMechanism: authMechanism,
			Input:         input,
		},
	}
	var err error

	var data createUserMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by deletePostMutation.
const deletePostMutation_Operation = `
mutation deletePostMutation ($postId: DBID!) {
	deletePost(postId: $postId) {
		__typename
		... on Error {
			__typename
			message
		}
		... on DeletePostPayload {
			deletedId {
				dbid
			}
		}
	}
}
`

func deletePostMutation(
	ctx context.Context,
	client graphql.Client,
	postId persist.DBID,
) (*deletePostMutationResponse, error) {
	req := &graphql.Request{
		OpName: "deletePostMutation",
		Query:  deletePostMutation_Operation,
		Variables: &__deletePostMutationInput{
			PostId: postId,
		},
	}
	var err error

	var data deletePostMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by disconnectSocialAccount.
const disconnectSocialAccount_Operation = `
mutation disconnectSocialAccount ($accountType: SocialAccountType!) {
	disconnectSocialAccount(accountType: $accountType) {
		__typename
		... on Error {
			__typename
			message
		}
		... on DisconnectSocialAccountPayload {
			viewer {
				socialAccounts {
					twitter {
						username
					}
				}
			}
		}
	}
}
`

func disconnectSocialAccount(
	ctx context.Context,
	client graphql.Client,
	accountType SocialAccountType,
) (*disconnectSocialAccountResponse, error) {
	req := &graphql.Request{
		OpName: "disconnectSocialAccount",
		Query:  disconnectSocialAccount_Operation,
		Variables: &__disconnectSocialAccountInput{
			AccountType: accountType,
		},
	}
	var err error

	var data disconnectSocialAccountResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by getAuthNonceMutation.
const getAuthNonceMutation_Operation = `
mutation getAuthNonceMutation ($input: ChainAddressInput!) {
	getAuthNonce(chainAddress: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on AuthNonce {
			nonce
			userExists
		}
	}
}
`

func getAuthNonceMutation(
	ctx context.Context,
	client graphql.Client,
	input ChainAddressInput,
) (*getAuthNonceMutationResponse, error) {
	req := &graphql.Request{
		OpName: "getAuthNonceMutation",
		Query:  getAuthNonceMutation_Operation,
		Variables: &__getAuthNonceMutationInput{
			Input: input,
		},
	}
	var err error

	var data getAuthNonceMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by globalFeedQuery.
const globalFeedQuery_Operation = `
query globalFeedQuery ($first: Int, $includePosts: Boolean!) {
	globalFeed(first: $first, includePosts: $includePosts) {
		edges {
			node {
				__typename
				... on Error {
					__typename
					message
				}
				... on FeedEvent {
					dbid
				}
				... on Post {
					dbid
				}
			}
		}
	}
}
`

func globalFeedQuery(
	ctx context.Context,
	client graphql.Client,
	first *int,
	includePosts bool,
) (*globalFeedQueryResponse, error) {
	req := &graphql.Request{
		OpName: "globalFeedQuery",
		Query:  globalFeedQuery_Operation,
		Variables: &__globalFeedQueryInput{
			First:        first,
			IncludePosts: includePosts,
		},
	}
	var err error

	var data globalFeedQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by loginMutation.
const loginMutation_Operation = `
mutation loginMutation ($authMechanism: AuthMechanism!) {
	login(authMechanism: $authMechanism) {
		__typename
		... on Error {
			__typename
			message
		}
		... on LoginPayload {
			viewer {
				user {
					username
					dbid
				}
			}
		}
	}
}
`

func loginMutation(
	ctx context.Context,
	client graphql.Client,
	authMechanism AuthMechanism,
) (*loginMutationResponse, error) {
	req := &graphql.Request{
		OpName: "loginMutation",
		Query:  loginMutation_Operation,
		Variables: &__loginMutationInput{
			AuthMechanism: authMechanism,
		},
	}
	var err error

	var data loginMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by logoutMutation.
const logoutMutation_Operation = `
mutation logoutMutation {
	logout {
		viewer {
			user {
				username
				dbid
			}
		}
	}
}
`

func logoutMutation(
	ctx context.Context,
	client graphql.Client,
) (*logoutMutationResponse, error) {
	req := &graphql.Request{
		OpName: "logoutMutation",
		Query:  logoutMutation_Operation,
	}
	var err error

	var data logoutMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by moveCollectionToGallery.
const moveCollectionToGallery_Operation = `
mutation moveCollectionToGallery ($input: MoveCollectionToGalleryInput!) {
	moveCollectionToGallery(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on MoveCollectionToGalleryPayload {
			oldGallery {
				dbid
				collections {
					dbid
				}
			}
			newGallery {
				dbid
				collections {
					dbid
				}
			}
		}
	}
}
`

func moveCollectionToGallery(
	ctx context.Context,
	client graphql.Client,
	input MoveCollectionToGalleryInput,
) (*moveCollectionToGalleryResponse, error) {
	req := &graphql.Request{
		OpName: "moveCollectionToGallery",
		Query:  moveCollectionToGallery_Operation,
		Variables: &__moveCollectionToGalleryInput{
			Input: input,
		},
	}
	var err error

	var data moveCollectionToGalleryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by postTokens.
const postTokens_Operation = `
mutation postTokens ($input: PostTokensInput!) {
	postTokens(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on PostTokensPayload {
			post {
				dbid
			}
		}
	}
}
`

func postTokens(
	ctx context.Context,
	client graphql.Client,
	input PostTokensInput,
) (*postTokensResponse, error) {
	req := &graphql.Request{
		OpName: "postTokens",
		Query:  postTokens_Operation,
		Variables: &__postTokensInput{
			Input: input,
		},
	}
	var err error

	var data postTokensResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by publishGalleryMutation.
const publishGalleryMutation_Operation = `
mutation publishGalleryMutation ($input: PublishGalleryInput!) {
	publishGallery(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on PublishGalleryPayload {
			gallery {
				dbid
			}
		}
	}
}
`

func publishGalleryMutation(
	ctx context.Context,
	client graphql.Client,
	input PublishGalleryInput,
) (*publishGalleryMutationResponse, error) {
	req := &graphql.Request{
		OpName: "publishGalleryMutation",
		Query:  publishGalleryMutation_Operation,
		Variables: &__publishGalleryMutationInput{
			Input: input,
		},
	}
	var err error

	var data publishGalleryMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by removeUserWalletsMutation.
const removeUserWalletsMutation_Operation = `
mutation removeUserWalletsMutation ($walletIds: [DBID!]!) {
	removeUserWallets(walletIds: $walletIds) {
		__typename
		... on Error {
			__typename
			message
		}
		... on RemoveUserWalletsPayload {
			viewer {
				user {
					wallets {
						dbid
						chainAddress {
							address
							chain
						}
					}
				}
			}
		}
	}
}
`

func removeUserWalletsMutation(
	ctx context.Context,
	client graphql.Client,
	walletIds []persist.DBID,
) (*removeUserWalletsMutationResponse, error) {
	req := &graphql.Request{
		OpName: "removeUserWalletsMutation",
		Query:  removeUserWalletsMutation_Operation,
		Variables: &__removeUserWalletsMutationInput{
			WalletIds: walletIds,
		},
	}
	var err error

	var data removeUserWalletsMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by syncTokensMutation.
const syncTokensMutation_Operation = `
mutation syncTokensMutation ($chains: [Chain!], $incrementally: Boolean) {
	syncTokens(chains: $chains, incrementally: $incrementally) {
		__typename
		... on Error {
			__typename
			message
		}
		... on SyncTokensPayload {
			viewer {
				user {
					tokens {
						chain
						dbid
						tokenId
						media {
							__typename
							... on ImageMedia {
								mediaURL
								mediaType
							}
							... on GIFMedia {
								mediaURL
								mediaType
							}
							... on VideoMedia {
								mediaURL
								mediaType
							}
							... on AudioMedia {
								mediaURL
								mediaType
							}
							... on TextMedia {
								mediaURL
								mediaType
							}
							... on PdfMedia {
								mediaURL
								mediaType
							}
							... on HtmlMedia {
								mediaURL
								mediaType
							}
							... on JsonMedia {
								mediaURL
								mediaType
							}
							... on GltfMedia {
								mediaURL
								mediaType
							}
							... on UnknownMedia {
								mediaURL
								mediaType
							}
							... on SyncingMedia {
								mediaURL
								mediaType
							}
							... on InvalidMedia {
								mediaURL
								mediaType
							}
						}
					}
				}
			}
		}
	}
}
`

func syncTokensMutation(
	ctx context.Context,
	client graphql.Client,
	chains []Chain,
	incrementally *bool,
) (*syncTokensMutationResponse, error) {
	req := &graphql.Request{
		OpName: "syncTokensMutation",
		Query:  syncTokensMutation_Operation,
		Variables: &__syncTokensMutationInput{
			Chains:        chains,
			Incrementally: incrementally,
		},
	}
	var err error

	var data syncTokensMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by tokenByIdQuery.
const tokenByIdQuery_Operation = `
query tokenByIdQuery ($id: DBID!) {
	tokenById(id: $id) {
		__typename
		... on Error {
			__typename
			message
		}
		... on Token {
			dbid
			contract {
				dbid
				contractAddress {
					address
				}
			}
		}
	}
}
`

func tokenByIdQuery(
	ctx context.Context,
	client graphql.Client,
	id persist.DBID,
) (*tokenByIdQueryResponse, error) {
	req := &graphql.Request{
		OpName: "tokenByIdQuery",
		Query:  tokenByIdQuery_Operation,
		Variables: &__tokenByIdQueryInput{
			Id: id,
		},
	}
	var err error

	var data tokenByIdQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by trendingFeedQuery.
const trendingFeedQuery_Operation = `
query trendingFeedQuery ($last: Int, $includePosts: Boolean!) {
	trendingFeed(last: $last, includePosts: $includePosts) {
		edges {
			node {
				__typename
				... on Error {
					__typename
					message
				}
				... on FeedEvent {
					dbid
				}
				... on Post {
					dbid
				}
			}
		}
	}
}
`

func trendingFeedQuery(
	ctx context.Context,
	client graphql.Client,
	last *int,
	includePosts bool,
) (*trendingFeedQueryResponse, error) {
	req := &graphql.Request{
		OpName: "trendingFeedQuery",
		Query:  trendingFeedQuery_Operation,
		Variables: &__trendingFeedQueryInput{
			Last:         last,
			IncludePosts: includePosts,
		},
	}
	var err error

	var data trendingFeedQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by trendingUsersQuery.
const trendingUsersQuery_Operation = `
query trendingUsersQuery ($input: TrendingUsersInput!) {
	trendingUsers(input: $input) {
		__typename
		... on TrendingUsersPayload {
			users {
				dbid
			}
		}
	}
}
`

func trendingUsersQuery(
	ctx context.Context,
	client graphql.Client,
	input TrendingUsersInput,
) (*trendingUsersQueryResponse, error) {
	req := &graphql.Request{
		OpName: "trendingUsersQuery",
		Query:  trendingUsersQuery_Operation,
		Variables: &__trendingUsersQueryInput{
			Input: input,
		},
	}
	var err error

	var data trendingUsersQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateGalleryMutation.
const updateGalleryMutation_Operation = `
mutation updateGalleryMutation ($input: UpdateGalleryInput!) {
	updateGallery(input: $input) {
		__typename
		... on UpdateGalleryPayload {
			gallery {
				dbid
				name
				description
				collections {
					dbid
					name
					tokens {
						token {
							dbid
						}
					}
				}
			}
		}
	}
}
`

func updateGalleryMutation(
	ctx context.Context,
	client graphql.Client,
	input UpdateGalleryInput,
) (*updateGalleryMutationResponse, error) {
	req := &graphql.Request{
		OpName: "updateGalleryMutation",
		Query:  updateGalleryMutation_Operation,
		Variables: &__updateGalleryMutationInput{
			Input: input,
		},
	}
	var err error

	var data updateGalleryMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateSocialAccountDisplayed.
const updateSocialAccountDisplayed_Operation = `
mutation updateSocialAccountDisplayed ($input: UpdateSocialAccountDisplayedInput!) {
	updateSocialAccountDisplayed(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on UpdateSocialAccountDisplayedPayload {
			viewer {
				socialAccounts {
					twitter {
						username
						display
					}
				}
			}
		}
	}
}
`

func updateSocialAccountDisplayed(
	ctx context.Context,
	client graphql.Client,
	input UpdateSocialAccountDisplayedInput,
) (*updateSocialAccountDisplayedResponse, error) {
	req := &graphql.Request{
		OpName: "updateSocialAccountDisplayed",
		Query:  updateSocialAccountDisplayed_Operation,
		Variables: &__updateSocialAccountDisplayedInput{
			Input: input,
		},
	}
	var err error

	var data updateSocialAccountDisplayedResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by updateUserExperience.
const updateUserExperience_Operation = `
mutation updateUserExperience ($input: UpdateUserExperienceInput!) {
	updateUserExperience(input: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on UpdateUserExperiencePayload {
			viewer {
				userExperiences {
					type
					experienced
				}
			}
		}
	}
}
`

func updateUserExperience(
	ctx context.Context,
	client graphql.Client,
	input UpdateUserExperienceInput,
) (*updateUserExperienceResponse, error) {
	req := &graphql.Request{
		OpName: "updateUserExperience",
		Query:  updateUserExperience_Operation,
		Variables: &__updateUserExperienceInput{
			Input: input,
		},
	}
	var err error

	var data updateUserExperienceResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by userByAddressQuery.
const userByAddressQuery_Operation = `
query userByAddressQuery ($input: ChainAddressInput!) {
	userByAddress(chainAddress: $input) {
		__typename
		... on Error {
			__typename
			message
		}
		... on GalleryUser {
			username
			dbid
		}
	}
}
`

func userByAddressQuery(
	ctx context.Context,
	client graphql.Client,
	input ChainAddressInput,
) (*userByAddressQueryResponse, error) {
	req := &graphql.Request{
		OpName: "userByAddressQuery",
		Query:  userByAddressQuery_Operation,
		Variables: &__userByAddressQueryInput{
			Input: input,
		},
	}
	var err error

	var data userByAddressQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by userByIdQuery.
const userByIdQuery_Operation = `
query userByIdQuery ($id: DBID!) {
	userById(id: $id) {
		__typename
		... on Error {
			__typename
			message
		}
		... on GalleryUser {
			username
			dbid
			socialAccounts {
				twitter {
					username
				}
			}
		}
	}
}
`

func userByIdQuery(
	ctx context.Context,
	client graphql.Client,
	id persist.DBID,
) (*userByIdQueryResponse, error) {
	req := &graphql.Request{
		OpName: "userByIdQuery",
		Query:  userByIdQuery_Operation,
		Variables: &__userByIdQueryInput{
			Id: id,
		},
	}
	var err error

	var data userByIdQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by userByUsernameQuery.
const userByUsernameQuery_Operation = `
query userByUsernameQuery ($user: String!) {
	userByUsername(username: $user) {
		__typename
		... on Error {
			__typename
			message
		}
		... on GalleryUser {
			username
			dbid
		}
	}
}
`

func userByUsernameQuery(
	ctx context.Context,
	client graphql.Client,
	user string,
) (*userByUsernameQueryResponse, error) {
	req := &graphql.Request{
		OpName: "userByUsernameQuery",
		Query:  userByUsernameQuery_Operation,
		Variables: &__userByUsernameQueryInput{
			User: user,
		},
	}
	var err error

	var data userByUsernameQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by viewGalleryMutation.
const viewGalleryMutation_Operation = `
mutation viewGalleryMutation ($galleryId: DBID!) {
	viewGallery(galleryId: $galleryId) {
		__typename
		... on Error {
			__typename
			message
		}
		... on ViewGalleryPayload {
			gallery {
				dbid
			}
		}
	}
}
`

func viewGalleryMutation(
	ctx context.Context,
	client graphql.Client,
	galleryId persist.DBID,
) (*viewGalleryMutationResponse, error) {
	req := &graphql.Request{
		OpName: "viewGalleryMutation",
		Query:  viewGalleryMutation_Operation,
		Variables: &__viewGalleryMutationInput{
			GalleryId: galleryId,
		},
	}
	var err error

	var data viewGalleryMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by viewTokenMutation.
const viewTokenMutation_Operation = `
mutation viewTokenMutation ($tokenID: DBID!, $collectionID: DBID!) {
	viewToken(tokenID: $tokenID, collectionID: $collectionID) {
		__typename
		... on Error {
			__typename
			message
		}
		... on ViewTokenPayload {
			token {
				dbid
				contract {
					contractAddress {
						address
						chain
					}
				}
			}
		}
	}
}
`

func viewTokenMutation(
	ctx context.Context,
	client graphql.Client,
	tokenID persist.DBID,
	collectionID persist.DBID,
) (*viewTokenMutationResponse, error) {
	req := &graphql.Request{
		OpName: "viewTokenMutation",
		Query:  viewTokenMutation_Operation,
		Variables: &__viewTokenMutationInput{
			TokenID:      tokenID,
			CollectionID: collectionID,
		},
	}
	var err error

	var data viewTokenMutationResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}

// The query or mutation executed by viewerQuery.
const viewerQuery_Operation = `
query viewerQuery {
	viewer {
		__typename
		... on Error {
			__typename
			message
		}
		... on Viewer {
			userExperiences {
				type
				experienced
			}
			suggestedUsers(last: 5) {
				edges {
					node {
						dbid
					}
				}
			}
			user {
				username
				dbid
				socialAccounts {
					twitter {
						username
					}
				}
				feed(first: 10) {
					edges {
						node {
							__typename
							... on Error {
								message
							}
							... on FeedEvent {
								dbid
								caption
								eventData {
									__typename
									action
									... on GalleryUpdatedFeedEventData {
										subEventDatas {
											__typename
											action
											... on TokensAddedToCollectionFeedEventData {
												newTokens {
													token {
														dbid
														name
													}
												}
											}
											... on CollectionCreatedFeedEventData {
												newTokens {
													token {
														dbid
														name
													}
												}
											}
											... on GalleryInfoUpdatedFeedEventData {
												newName
												newDescription
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
`

func viewerQuery(
	ctx context.Context,
	client graphql.Client,
) (*viewerQueryResponse, error) {
	req := &graphql.Request{
		OpName: "viewerQuery",
		Query:  viewerQuery_Operation,
	}
	var err error

	var data viewerQueryResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
