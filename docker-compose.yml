version: "3.9"
services:
  redis:
    image: "redis:6"
    ports:
      - "6379:6379"
  postgres:
    build:
      context: "."
      dockerfile: "docker/postgres/DOCKERFILE"
      args:
        - PGHOST=${PGHOST}
        - PGPORT=${PGPORT}
        - PGUSER=${PGUSER}
        - PGPASSWORD=${PGPASSWORD}
        - PGDATABASE=${PGDATABASE}
        - PGTESTUSER=${PGTESTUSER}
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  postgres_indexer:
    build:
      context: "."
      dockerfile: "docker/postgres_indexer/DOCKERFILE"
      args:
        - PGHOST=${PGHOST}
        - PGPORT=${PGPORT}
        - PGUSER=${PGUSER}
        - PGPASSWORD=${PGPASSWORD}
        - PGDATABASE=${PGDATABASE}
        - PGTESTUSER=${PGTESTUSER}
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
  # Used to proxy cloud tasks requests
  nginx:
    image: nginx
    ports:
      - "8080:80"
    volumes:
      - ${PWD}/docker/nginx/nginx.local.conf:/etc/nginx/nginx.conf
  task-emulator:
    image: ghcr.io/aertje/cloud-tasks-emulator:latest
    expose:
      - "8123"
    command: ["-host",  "0.0.0.0", "-port", "8123"]
  # Uncomment if you want to run tokenprocessing locally as a container
  # tokenprocessing:
  #   build:
  #     context: "."
  #     dockerfile: "docker/tokenprocessing/Dockerfile"
  #   ports:
  #     - "6500:6500"
  #   volumes:
  #     - ${PWD}/_local:/app/_local
  #     - ${PWD}/_deploy:/app/_deploy
  #   depends_on:
  #     - postgres
  #     - redis
  # Uncomment if you want to run indexer-api locally as a container
  # indexer-api:
  #   build:
  #     context: "."
  #     dockerfile: "docker/indexer_api/Dockerfile"
  #   ports:
  #     - "6000:6000"
  #   volumes:
  #     - ${PWD}/_local:/app/_local
  #     - ${PWD}/_deploy:/app/_deploy
  #   depends_on:
  #     - postgres
  #     - postgres_indexer
  #     - redis
